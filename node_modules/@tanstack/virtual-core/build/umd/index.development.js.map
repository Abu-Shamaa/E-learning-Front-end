{"version":3,"file":"index.development.js","sources":["../../src/utils.ts","../../src/index.ts"],"sourcesContent":["export type NoInfer<A extends any> = [A][A extends any ? 0 : never]\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\nexport function memo<TDeps extends readonly any[], TResult>(\n  getDeps: () => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: any\n    debug?: () => any\n    onChange?: (result: TResult) => void\n  },\n): () => TResult {\n  let deps: any[] = []\n  let result: TResult | undefined\n\n  return () => {\n    let depTime: number\n    if (opts.key && opts.debug?.()) depTime = Date.now()\n\n    const newDeps = getDeps()\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug?.()) resultTime = Date.now()\n\n    result = fn(...newDeps)\n    opts?.onChange?.(result)\n\n    if (opts.key && opts.debug?.()) {\n      const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n      const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n      const resultFpsPercentage = resultEndTime / 16\n\n      const pad = (str: number | string, num: number) => {\n        str = String(str)\n        while (str.length < num) {\n          str = ' ' + str\n        }\n        return str\n      }\n\n      console.info(\n        `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n        `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120),\n            )}deg 100% 31%);`,\n        opts?.key,\n      )\n    }\n\n    return result!\n  }\n}\n","import { memo } from './utils'\n\nexport * from './utils'\n\n//\n\ntype ScrollDirection = 'forward' | 'backward'\n\ntype ScrollAlignment = 'start' | 'center' | 'end' | 'auto'\n\ntype ScrollBehavior = 'auto' | 'smooth'\n\nexport interface ScrollToOptions {\n  align?: ScrollAlignment\n  behavior?: ScrollBehavior\n}\n\ntype ScrollToOffsetOptions = ScrollToOptions\n\ntype ScrollToIndexOptions = ScrollToOptions\n\nexport interface Range {\n  startIndex: number\n  endIndex: number\n  overscan: number\n  count: number\n}\n\ntype Key = number | string\n\nexport interface VirtualItem {\n  key: Key\n  index: number\n  start: number\n  end: number\n  size: number\n}\n\ninterface Rect {\n  width: number\n  height: number\n}\n\n//\n\nexport const defaultKeyExtractor = (index: number) => index\n\nexport const defaultRangeExtractor = (range: Range) => {\n  const start = Math.max(range.startIndex - range.overscan, 0)\n  const end = Math.min(range.endIndex + range.overscan, range.count - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nconst memoRectCallback = (\n  instance: Virtualizer<any, any>,\n  cb: (rect: Rect) => void,\n) => {\n  let prev: Rect = { height: -1, width: -1 }\n\n  return (rect: Rect) => {\n    if (\n      instance.options.horizontal\n        ? rect.width !== prev.width\n        : rect.height !== prev.height\n    ) {\n      cb(rect)\n    }\n\n    prev = rect\n  }\n}\n\nexport const observeElementRect = (\n  instance: Virtualizer<any, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const observer = new ResizeObserver((entries) => {\n    cb({\n      width: entries[0]?.contentRect.width as number,\n      height: entries[0]?.contentRect.height as number,\n    })\n  })\n\n  if (!instance.scrollElement) {\n    return\n  }\n\n  cb(instance.scrollElement.getBoundingClientRect())\n\n  observer.observe(instance.scrollElement)\n\n  return () => {\n    observer.unobserve(instance.scrollElement)\n  }\n}\n\nexport const observeWindowRect = (\n  instance: Virtualizer<any, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const memoizedCallback = memoRectCallback(instance, cb)\n  const onResize = () =>\n    memoizedCallback({\n      width: instance.scrollElement.innerWidth,\n      height: instance.scrollElement.innerHeight,\n    })\n\n  if (!instance.scrollElement) {\n    return\n  }\n\n  onResize()\n\n  instance.scrollElement.addEventListener('resize', onResize, {\n    capture: false,\n    passive: true,\n  })\n\n  return () => {\n    instance.scrollElement.removeEventListener('resize', onResize)\n  }\n}\n\ntype ObserverMode = 'element' | 'window'\n\nconst scrollProps = {\n  element: ['scrollLeft', 'scrollTop'],\n  window: ['scrollX', 'scrollY'],\n} as const\n\nconst createOffsetObserver = (mode: ObserverMode) => {\n  return (instance: Virtualizer<any, any>, cb: (offset: number) => void) => {\n    if (!instance.scrollElement) {\n      return\n    }\n\n    const propX = scrollProps[mode][0]\n    const propY = scrollProps[mode][1]\n\n    let prevX: number = instance.scrollElement[propX]\n    let prevY: number = instance.scrollElement[propY]\n\n    const scroll = () => {\n      const offset =\n        instance.scrollElement[instance.options.horizontal ? propX : propY]\n\n      cb(offset)\n    }\n\n    scroll()\n\n    const onScroll = (e: Event) => {\n      const target = e.currentTarget as HTMLElement & Window\n      const scrollX = target[propX]\n      const scrollY = target[propY]\n\n      if (instance.options.horizontal ? prevX - scrollX : prevY - scrollY) {\n        scroll()\n      }\n\n      prevX = scrollX\n      prevY = scrollY\n    }\n\n    instance.scrollElement.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true,\n    })\n\n    return () => {\n      instance.scrollElement.removeEventListener('scroll', onScroll)\n    }\n  }\n}\n\nexport const observeElementOffset = createOffsetObserver('element')\nexport const observeWindowOffset = createOffsetObserver('window')\n\nexport const measureElement = <TItemElement extends Element>(\n  element: TItemElement,\n  instance: Virtualizer<any, TItemElement>,\n) => {\n  return Math.round(\n    element.getBoundingClientRect()[\n      instance.options.horizontal ? 'width' : 'height'\n    ],\n  )\n}\n\nexport const windowScroll = <T extends Window>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport const elementScroll = <T extends Element>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport interface VirtualizerOptions<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  // Required from the user\n  count: number\n  getScrollElement: () => TScrollElement | null\n  estimateSize: (index: number) => number\n\n  // Required from the framework adapter (but can be overridden)\n  scrollToFn: (\n    offset: number,\n    options: { adjustments?: number; behavior?: ScrollBehavior },\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => void\n  observeElementRect: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (rect: Rect) => void,\n  ) => void | (() => void)\n  observeElementOffset: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (offset: number) => void,\n  ) => void | (() => void)\n\n  // Optional\n  debug?: any\n  initialRect?: Rect\n  onChange?: (instance: Virtualizer<TScrollElement, TItemElement>) => void\n  measureElement?: (\n    el: TItemElement,\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => number\n  overscan?: number\n  horizontal?: boolean\n  paddingStart?: number\n  paddingEnd?: number\n  scrollPaddingStart?: number\n  scrollPaddingEnd?: number\n  initialOffset?: number\n  getItemKey?: (index: number) => Key\n  rangeExtractor?: (range: Range) => number[]\n  scrollMargin?: number\n  scrollingDelay?: number\n  indexAttribute?: string\n  initialMeasurementsCache?: VirtualItem[]\n}\n\nexport class Virtualizer<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  private unsubs: (void | (() => void))[] = []\n  options!: Required<VirtualizerOptions<TScrollElement, TItemElement>>\n  scrollElement: TScrollElement | null = null\n  isScrolling: boolean = false\n  private isScrollingTimeoutId: ReturnType<typeof setTimeout> | null = null\n  measurementsCache: VirtualItem[] = []\n  private itemSizeCache: Record<Key, number> = {}\n  private pendingMeasuredCacheIndexes: number[] = []\n  private scrollRect: Rect\n  scrollOffset: number\n  scrollDirection: ScrollDirection | null = null\n  private scrollAdjustments: number = 0\n  private measureElementCache: Record<Key, TItemElement> = {}\n  private pendingScrollToIndexCallback: (() => void) | null = null\n  private getResizeObserver = (() => {\n    let _ro: ResizeObserver | null = null\n\n    return () => {\n      if (_ro) {\n        return _ro\n      } else if (typeof ResizeObserver !== 'undefined') {\n        return (_ro = new ResizeObserver((entries) => {\n          entries.forEach((entry) => {\n            this._measureElement(entry.target as TItemElement, false)\n          })\n        }))\n      } else {\n        return null\n      }\n    }\n  })()\n  range: { startIndex: number; endIndex: number } = {\n    startIndex: 0,\n    endIndex: 0,\n  }\n\n  constructor(opts: VirtualizerOptions<TScrollElement, TItemElement>) {\n    this.setOptions(opts)\n    this.scrollRect = this.options.initialRect\n    this.scrollOffset = this.options.initialOffset\n    this.measurementsCache = this.options.initialMeasurementsCache\n    this.measurementsCache.forEach((item) => {\n      this.itemSizeCache[item.key] = item.size\n    })\n\n    this.calculateRange()\n  }\n\n  setOptions = (opts: VirtualizerOptions<TScrollElement, TItemElement>) => {\n    Object.entries(opts).forEach(([key, value]) => {\n      if (typeof value === 'undefined') delete (opts as any)[key]\n    })\n\n    this.options = {\n      debug: false,\n      initialOffset: 0,\n      overscan: 1,\n      paddingStart: 0,\n      paddingEnd: 0,\n      scrollPaddingStart: 0,\n      scrollPaddingEnd: 0,\n      horizontal: false,\n      getItemKey: defaultKeyExtractor,\n      rangeExtractor: defaultRangeExtractor,\n      onChange: () => {},\n      measureElement,\n      initialRect: { width: 0, height: 0 },\n      scrollMargin: 0,\n      scrollingDelay: 150,\n      indexAttribute: 'data-index',\n      initialMeasurementsCache: [],\n      ...opts,\n    }\n  }\n\n  private notify = () => {\n    this.options.onChange?.(this)\n  }\n\n  private cleanup = () => {\n    this.unsubs.filter(Boolean).forEach((d) => d!())\n    this.unsubs = []\n    this.scrollElement = null\n  }\n\n  _didMount = () => {\n    const ro = this.getResizeObserver()\n    Object.values(this.measureElementCache).forEach((node) => ro?.observe(node))\n\n    return () => {\n      ro?.disconnect()\n\n      this.cleanup()\n    }\n  }\n\n  _willUpdate = () => {\n    this.pendingScrollToIndexCallback?.()\n\n    const scrollElement = this.options.getScrollElement()\n\n    if (this.scrollElement !== scrollElement) {\n      this.cleanup()\n\n      this.scrollElement = scrollElement\n\n      this._scrollToOffset(this.scrollOffset, {\n        adjustments: undefined,\n        behavior: undefined,\n      })\n\n      this.unsubs.push(\n        this.options.observeElementRect(this, (rect) => {\n          this.scrollRect = rect\n          this.calculateRange()\n        }),\n      )\n\n      this.unsubs.push(\n        this.options.observeElementOffset(this, (offset) => {\n          this.scrollAdjustments = 0\n\n          if (this.scrollOffset === offset) {\n            return\n          }\n\n          if (this.isScrollingTimeoutId !== null) {\n            clearTimeout(this.isScrollingTimeoutId)\n            this.isScrollingTimeoutId = null\n          }\n\n          const onIsScrollingChange = (isScrolling: boolean) => {\n            if (this.isScrolling !== isScrolling) {\n              this.isScrolling = isScrolling\n              this.notify()\n            }\n          }\n\n          this.scrollDirection =\n            this.scrollOffset < offset ? 'forward' : 'backward'\n\n          this.scrollOffset = offset\n\n          this.calculateRange()\n\n          onIsScrollingChange(true)\n\n          this.isScrollingTimeoutId = setTimeout(() => {\n            this.isScrollingTimeoutId = null\n            this.scrollDirection = null\n            onIsScrollingChange(false)\n          }, this.options.scrollingDelay)\n        }),\n      )\n    } else if (!this.isScrolling) {\n      this.calculateRange()\n    }\n  }\n\n  private getSize = () => {\n    return this.scrollRect[this.options.horizontal ? 'width' : 'height']\n  }\n\n  private getMeasurements = memo(\n    () => [\n      this.options.count,\n      this.options.paddingStart,\n      this.options.scrollMargin,\n      this.options.getItemKey,\n      this.itemSizeCache,\n    ],\n    (count, paddingStart, scrollMargin, getItemKey, itemSizeCache) => {\n      const min =\n        this.pendingMeasuredCacheIndexes.length > 0\n          ? Math.min(...this.pendingMeasuredCacheIndexes)\n          : 0\n      this.pendingMeasuredCacheIndexes = []\n\n      const measurements = this.measurementsCache.slice(0, min)\n\n      for (let i = min; i < count; i++) {\n        const key = getItemKey(i)\n        const measuredSize = itemSizeCache[key]\n        const start = measurements[i - 1]\n          ? measurements[i - 1]!.end\n          : paddingStart + scrollMargin\n        const size =\n          typeof measuredSize === 'number'\n            ? measuredSize\n            : this.options.estimateSize(i)\n        const end = start + size\n        measurements[i] = { index: i, start, size, end, key }\n      }\n\n      this.measurementsCache = measurements\n\n      return measurements\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getMeasurements',\n      debug: () => this.options.debug,\n    },\n  )\n\n  calculateRange = memo(\n    () => [this.getMeasurements(), this.getSize(), this.scrollOffset],\n    (measurements, outerSize, scrollOffset) => {\n      const range = calculateRange({\n        measurements,\n        outerSize,\n        scrollOffset,\n      })\n      if (\n        range.startIndex !== this.range.startIndex ||\n        range.endIndex !== this.range.endIndex\n      ) {\n        this.range = range\n        this.notify()\n      }\n      return this.range\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'calculateRange',\n      debug: () => this.options.debug,\n    },\n  )\n\n  private getIndexes = memo(\n    () => [\n      this.options.rangeExtractor,\n      this.range,\n      this.options.overscan,\n      this.options.count,\n    ],\n    (rangeExtractor, range, overscan, count) => {\n      return rangeExtractor({\n        ...range,\n        overscan,\n        count: count,\n      })\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  indexFromElement = (node: TItemElement) => {\n    const attributeName = this.options.indexAttribute\n    const indexStr = node.getAttribute(attributeName)\n\n    if (!indexStr) {\n      console.warn(\n        `Missing attribute name '${attributeName}={index}' on measured element.`,\n      )\n      return -1\n    }\n\n    return parseInt(indexStr, 10)\n  }\n\n  private _measureElement = (node: TItemElement, _sync: boolean) => {\n    const index = this.indexFromElement(node)\n\n    const item = this.measurementsCache[index]\n    if (!item) {\n      return\n    }\n\n    const prevNode = this.measureElementCache[item.key]\n\n    const ro = this.getResizeObserver()\n\n    if (!node.isConnected) {\n      if (prevNode) {\n        ro?.unobserve(prevNode)\n        delete this.measureElementCache[item.key]\n      }\n      return\n    }\n\n    if (!prevNode || prevNode !== node) {\n      if (prevNode) {\n        ro?.unobserve(prevNode)\n      }\n      this.measureElementCache[item.key] = node\n      ro?.observe(node)\n    }\n\n    const measuredItemSize = this.options.measureElement(node, this)\n\n    const itemSize = this.itemSizeCache[item.key] ?? item.size\n\n    const delta = measuredItemSize - itemSize\n\n    if (delta !== 0) {\n      if (\n        item.start < this.scrollOffset &&\n        this.isScrolling &&\n        this.scrollDirection === 'backward'\n      ) {\n        if (process.env.NODE_ENV !== 'production' && this.options.debug) {\n          console.info('correction', delta)\n        }\n\n        this._scrollToOffset(this.scrollOffset, {\n          adjustments: (this.scrollAdjustments += delta),\n          behavior: undefined,\n        })\n      }\n\n      this.pendingMeasuredCacheIndexes.push(index)\n      this.itemSizeCache = {\n        ...this.itemSizeCache,\n        [item.key]: measuredItemSize,\n      }\n      this.notify()\n    }\n  }\n\n  measureElement = (node: TItemElement | null) => {\n    if (!node) {\n      return\n    }\n\n    this._measureElement(node, true)\n  }\n\n  getVirtualItems = memo(\n    () => [this.getIndexes(), this.getMeasurements()],\n    (indexes, measurements) => {\n      const virtualItems: VirtualItem[] = []\n\n      for (let k = 0, len = indexes.length; k < len; k++) {\n        const i = indexes[k]!\n        const measurement = measurements[i]!\n\n        virtualItems.push(measurement)\n      }\n\n      return virtualItems\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  getOffsetForAlignment = (toOffset: number, align: ScrollAlignment) => {\n    const offset = this.scrollOffset\n    const size = this.getSize()\n\n    if (align === 'auto') {\n      if (toOffset <= offset) {\n        align = 'start'\n      } else if (toOffset >= offset + size) {\n        align = 'end'\n      } else {\n        align = 'start'\n      }\n    }\n\n    if (align === 'start') {\n      return toOffset\n    } else if (align === 'end') {\n      return toOffset - size\n    } else if (align === 'center') {\n      return toOffset - size / 2\n    }\n    return toOffset\n  }\n\n  scrollToOffset = (\n    toOffset: number,\n    { align = 'start', behavior }: ScrollToOffsetOptions = {},\n  ) => {\n    const options = {\n      adjustments: undefined,\n      behavior,\n      sync: false,\n    }\n    this._scrollToOffset(this.getOffsetForAlignment(toOffset, align), options)\n  }\n\n  scrollToIndex = (\n    index: number,\n    { align = 'auto', behavior }: ScrollToIndexOptions = {},\n  ) => {\n    this.pendingScrollToIndexCallback = null\n\n    const offset = this.scrollOffset\n    const size = this.getSize()\n    const { count } = this.options\n\n    const measurements = this.getMeasurements()\n    const measurement = measurements[Math.max(0, Math.min(index, count - 1))]\n\n    if (!measurement) {\n      throw new Error(`VirtualItem not found for index = ${index}`)\n    }\n\n    if (align === 'auto') {\n      if (measurement.end >= offset + size - this.options.scrollPaddingEnd) {\n        align = 'end'\n      } else if (\n        measurement.start <=\n        offset + this.options.scrollPaddingStart\n      ) {\n        align = 'start'\n      } else {\n        return\n      }\n    }\n\n    const getOffsetForIndexAndAlignment = (measurement: VirtualItem) => {\n      const toOffset =\n        align === 'end'\n          ? measurement.end + this.options.scrollPaddingEnd\n          : measurement.start - this.options.scrollPaddingStart\n\n      return this.getOffsetForAlignment(toOffset, align)\n    }\n\n    const toOffset = getOffsetForIndexAndAlignment(measurement)\n\n    if (Math.round(toOffset) === Math.round(offset)) {\n      return\n    }\n\n    const options = {\n      adjustments: undefined,\n      behavior,\n    }\n    this._scrollToOffset(toOffset, options)\n\n    const isDynamic = Object.keys(this.measureElementCache).length > 0\n\n    if (isDynamic) {\n      this.pendingScrollToIndexCallback = () => {\n        this.scrollToIndex(index, { align, behavior })\n      }\n    }\n  }\n\n  scrollBy = (adjustments: number, options?: { behavior: ScrollBehavior }) => {\n    this._scrollToOffset(this.scrollOffset, {\n      adjustments,\n      behavior: options?.behavior,\n    })\n  }\n\n  getTotalSize = () =>\n    (this.getMeasurements()[this.options.count - 1]?.end ||\n      this.options.paddingStart) -\n    this.options.scrollMargin +\n    this.options.paddingEnd\n\n  private _scrollToOffset = (\n    offset: number,\n    {\n      adjustments,\n      behavior,\n    }: {\n      adjustments: number | undefined\n      behavior: ScrollBehavior | undefined\n    },\n  ) => {\n    this.options.scrollToFn(offset, { behavior, adjustments }, this)\n  }\n\n  measure = () => {\n    this.itemSizeCache = {}\n    this.notify()\n  }\n}\n\nconst findNearestBinarySearch = (\n  low: number,\n  high: number,\n  getCurrentValue: (i: number) => number,\n  value: number,\n) => {\n  while (low <= high) {\n    const middle = ((low + high) / 2) | 0\n    const currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({\n  measurements,\n  outerSize,\n  scrollOffset,\n}: {\n  measurements: VirtualItem[]\n  outerSize: number\n  scrollOffset: number\n}) {\n  const count = measurements.length - 1\n  const getOffset = (index: number) => measurements[index]!.start\n\n  const startIndex = findNearestBinarySearch(0, count, getOffset, scrollOffset)\n  let endIndex = startIndex\n\n  while (\n    endIndex < count &&\n    measurements[endIndex]!.end < scrollOffset + outerSize\n  ) {\n    endIndex++\n  }\n\n  return { startIndex, endIndex }\n}\n"],"names":["memo","getDeps","fn","opts","deps","result","depTime","key","debug","Date","now","newDeps","depsChanged","length","some","dep","index","resultTime","onChange","depEndTime","Math","round","resultEndTime","resultFpsPercentage","pad","str","num","String","console","info","max","min","defaultKeyExtractor","defaultRangeExtractor","range","start","startIndex","overscan","end","endIndex","count","arr","i","push","memoRectCallback","instance","cb","prev","height","width","rect","options","horizontal","observeElementRect","observer","ResizeObserver","entries","contentRect","scrollElement","getBoundingClientRect","observe","unobserve","observeWindowRect","memoizedCallback","onResize","innerWidth","innerHeight","addEventListener","capture","passive","removeEventListener","scrollProps","element","window","createOffsetObserver","mode","propX","propY","prevX","prevY","scroll","offset","onScroll","e","target","currentTarget","scrollX","scrollY","observeElementOffset","observeWindowOffset","measureElement","windowScroll","adjustments","behavior","toOffset","scrollTo","elementScroll","Virtualizer","unsubs","isScrolling","isScrollingTimeoutId","measurementsCache","itemSizeCache","pendingMeasuredCacheIndexes","scrollDirection","scrollAdjustments","measureElementCache","pendingScrollToIndexCallback","getResizeObserver","_ro","forEach","entry","_measureElement","setOptions","Object","value","initialOffset","paddingStart","paddingEnd","scrollPaddingStart","scrollPaddingEnd","getItemKey","rangeExtractor","initialRect","scrollMargin","scrollingDelay","indexAttribute","initialMeasurementsCache","notify","cleanup","filter","Boolean","d","_didMount","ro","values","node","disconnect","_willUpdate","getScrollElement","_scrollToOffset","scrollOffset","undefined","scrollRect","calculateRange","clearTimeout","onIsScrollingChange","setTimeout","getSize","getMeasurements","measurements","slice","measuredSize","size","estimateSize","outerSize","getIndexes","indexFromElement","attributeName","indexStr","getAttribute","warn","parseInt","_sync","item","prevNode","isConnected","measuredItemSize","itemSize","delta","getVirtualItems","indexes","virtualItems","k","len","measurement","getOffsetForAlignment","align","scrollToOffset","sync","scrollToIndex","Error","getOffsetForIndexAndAlignment","isDynamic","keys","scrollBy","getTotalSize","scrollToFn","measure","findNearestBinarySearch","low","high","getCurrentValue","middle","currentValue","getOffset"],"mappings":"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"}