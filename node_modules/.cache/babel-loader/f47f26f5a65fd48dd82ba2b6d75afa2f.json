{"ast":null,"code":"var _jsxFileName = \"/home/shama/webapps/ionicblog/src/pages/admin/Group.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport MaterialReactTable from 'material-react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//nested data is ok, see accessorKeys in ColumnDef below\nconst data = [{\n  name: {\n    firstName: 'John',\n    lastName: 'Doe'\n  },\n  address: '261 Erdman Ford',\n  city: 'East Daphne',\n  state: 'Kentucky'\n}, {\n  name: {\n    firstName: 'Jane',\n    lastName: 'Doe'\n  },\n  address: '769 Dominic Grove',\n  city: 'Columbus',\n  state: 'Ohio'\n}, {\n  name: {\n    firstName: 'Joe',\n    lastName: 'Doe'\n  },\n  address: '566 Brakus Inlet',\n  city: 'South Linda',\n  state: 'West Virginia'\n}, {\n  name: {\n    firstName: 'Kevin',\n    lastName: 'Vandy'\n  },\n  address: '722 Emie Stream',\n  city: 'Lincoln',\n  state: 'Nebraska'\n}, {\n  name: {\n    firstName: 'Joshua',\n    lastName: 'Rolluffs'\n  },\n  address: '32188 Larkin Turnpike',\n  city: 'Omaha',\n  state: 'Nebraska'\n}];\n\nconst GroupComponent = () => {\n  _s();\n\n  //should be memoized or stable\n  const columns = useMemo(() => [{\n    accessorKey: 'name.firstName',\n    //access nested data with dot notation\n    header: 'First Name'\n  }, {\n    accessorKey: 'name.lastName',\n    header: 'Last Name'\n  }, {\n    accessorKey: 'address',\n    //normal accessorKey\n    header: 'Address'\n  }, {\n    accessorKey: 'city',\n    header: 'City'\n  }, {\n    accessorKey: 'state',\n    header: 'State'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(MaterialReactTable, {\n    columns: columns,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GroupComponent, \"erkfbBpUuAY09jdvhSOqc0XsEHQ=\");\n\n_c = GroupComponent;\nexport default GroupComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupComponent\");","map":{"version":3,"names":["React","useMemo","MaterialReactTable","data","name","firstName","lastName","address","city","state","GroupComponent","columns","accessorKey","header"],"sources":["/home/shama/webapps/ionicblog/src/pages/admin/Group.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport MaterialReactTable, { MRT_ColumnDef } from 'material-react-table';\n\ntype Person = {\n    name: {\n        firstName: string;\n        lastName: string;\n    };\n    address: string;\n    city: string;\n    state: string;\n};\n\n//nested data is ok, see accessorKeys in ColumnDef below\nconst data: Person[] = [\n    {\n        name: {\n            firstName: 'John',\n            lastName: 'Doe',\n        },\n        address: '261 Erdman Ford',\n        city: 'East Daphne',\n        state: 'Kentucky',\n    },\n    {\n        name: {\n            firstName: 'Jane',\n            lastName: 'Doe',\n        },\n        address: '769 Dominic Grove',\n        city: 'Columbus',\n        state: 'Ohio',\n    },\n    {\n        name: {\n            firstName: 'Joe',\n            lastName: 'Doe',\n        },\n        address: '566 Brakus Inlet',\n        city: 'South Linda',\n        state: 'West Virginia',\n    },\n    {\n        name: {\n            firstName: 'Kevin',\n            lastName: 'Vandy',\n        },\n        address: '722 Emie Stream',\n        city: 'Lincoln',\n        state: 'Nebraska',\n    },\n    {\n        name: {\n            firstName: 'Joshua',\n            lastName: 'Rolluffs',\n        },\n        address: '32188 Larkin Turnpike',\n        city: 'Omaha',\n        state: 'Nebraska',\n    },\n];\n\nconst GroupComponent = () => {\n    //should be memoized or stable\n    const columns = useMemo<MRT_ColumnDef<Person>[]>(\n        () => [\n            {\n                accessorKey: 'name.firstName', //access nested data with dot notation\n                header: 'First Name',\n            },\n            {\n                accessorKey: 'name.lastName',\n                header: 'Last Name',\n            },\n            {\n                accessorKey: 'address', //normal accessorKey\n                header: 'Address',\n            },\n            {\n                accessorKey: 'city',\n                header: 'City',\n            },\n            {\n                accessorKey: 'state',\n                header: 'State',\n            },\n        ],\n        [],\n    );\n\n    return <MaterialReactTable columns={columns} data={data} />;\n};\n\nexport default GroupComponent;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,kBAAP,MAAkD,sBAAlD;;AAYA;AACA,MAAMC,IAAc,GAAG,CACnB;EACIC,IAAI,EAAE;IACFC,SAAS,EAAE,MADT;IAEFC,QAAQ,EAAE;EAFR,CADV;EAKIC,OAAO,EAAE,iBALb;EAMIC,IAAI,EAAE,aANV;EAOIC,KAAK,EAAE;AAPX,CADmB,EAUnB;EACIL,IAAI,EAAE;IACFC,SAAS,EAAE,MADT;IAEFC,QAAQ,EAAE;EAFR,CADV;EAKIC,OAAO,EAAE,mBALb;EAMIC,IAAI,EAAE,UANV;EAOIC,KAAK,EAAE;AAPX,CAVmB,EAmBnB;EACIL,IAAI,EAAE;IACFC,SAAS,EAAE,KADT;IAEFC,QAAQ,EAAE;EAFR,CADV;EAKIC,OAAO,EAAE,kBALb;EAMIC,IAAI,EAAE,aANV;EAOIC,KAAK,EAAE;AAPX,CAnBmB,EA4BnB;EACIL,IAAI,EAAE;IACFC,SAAS,EAAE,OADT;IAEFC,QAAQ,EAAE;EAFR,CADV;EAKIC,OAAO,EAAE,iBALb;EAMIC,IAAI,EAAE,SANV;EAOIC,KAAK,EAAE;AAPX,CA5BmB,EAqCnB;EACIL,IAAI,EAAE;IACFC,SAAS,EAAE,QADT;IAEFC,QAAQ,EAAE;EAFR,CADV;EAKIC,OAAO,EAAE,uBALb;EAMIC,IAAI,EAAE,OANV;EAOIC,KAAK,EAAE;AAPX,CArCmB,CAAvB;;AAgDA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EACzB;EACA,MAAMC,OAAO,GAAGV,OAAO,CACnB,MAAM,CACF;IACIW,WAAW,EAAE,gBADjB;IACmC;IAC/BC,MAAM,EAAE;EAFZ,CADE,EAKF;IACID,WAAW,EAAE,eADjB;IAEIC,MAAM,EAAE;EAFZ,CALE,EASF;IACID,WAAW,EAAE,SADjB;IAC4B;IACxBC,MAAM,EAAE;EAFZ,CATE,EAaF;IACID,WAAW,EAAE,MADjB;IAEIC,MAAM,EAAE;EAFZ,CAbE,EAiBF;IACID,WAAW,EAAE,OADjB;IAEIC,MAAM,EAAE;EAFZ,CAjBE,CADa,EAuBnB,EAvBmB,CAAvB;EA0BA,oBAAO,QAAC,kBAAD;IAAoB,OAAO,EAAEF,OAA7B;IAAsC,IAAI,EAAER;EAA5C;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CA7BD;;GAAMO,c;;KAAAA,c;AA+BN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}