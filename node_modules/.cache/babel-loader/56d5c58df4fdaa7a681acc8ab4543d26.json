{"ast":null,"code":"import _defineProperty from \"/home/shama/webapps/ionicblog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/home/shama/webapps/ionicblog/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shama/webapps/ionicblog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/home/shama/webapps/ionicblog/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/shama/webapps/ionicblog/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/shama/webapps/ionicblog/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/shama/webapps/ionicblog/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/shama/webapps/ionicblog/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/shama/webapps/ionicblog/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index6.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, d as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { p as printIonWarning, a as printIonError } from './index7.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, p as parseDate, f as getToday, h as getPartsFromCalendarDay, j as getEndOfWeek, k as getStartOfWeek, l as getPreviousDay, m as getNextDay, n as getPreviousWeek, o as getNextWeek, q as parseMinParts, r as parseMaxParts, w as warnIfValueOutOfBounds, s as convertToArrayOfNumbers, t as convertDataToISO, u as getCombinedDateColumnData, v as getMonthColumnData, x as getDayColumnData, y as getYearColumnData, z as isMonthFirstLocale, A as getTimeColumnsData, B as isLocaleDayPeriodRTL, C as getMonthAndYear, D as getDaysOfWeek, E as getDaysOfMonth, F as generateMonths, G as is24Hour, H as getLocalizedTime, I as getMonthAndDay, J as formatValue, K as getNextYear, L as getPreviousYear, M as clampDate, N as parseAmPm, O as calculateHourFromAMPM } from './parse.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\n\nvar isYearDisabled = function isYearDisabled(refYear, minParts, maxParts) {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\n\n\nvar isDayDisabled = function isDayDisabled(refParts, minParts, maxParts, dayValues) {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n\n\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n\n\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n\n\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n\n\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\n\n\nvar getCalendarDayState = function getCalendarDayState(locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  var activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n\n  var isActive = activePartsArray.find(function (parts) {\n    return isSameDay(refParts, parts);\n  }) !== undefined;\n  var isToday = isSameDay(refParts, todayParts);\n  var disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n\n  return {\n    disabled: disabled,\n    isActive: isActive,\n    isToday: isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n    text: refParts.day != null ? getDay(locale, refParts) : null\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\n\n\nvar isMonthDisabled = function isMonthDisabled(refParts, _ref) {\n  var minParts = _ref.minParts,\n      maxParts = _ref.maxParts;\n\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  } // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n\n\n  if (minParts && isBefore(refParts, minParts) || maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\n\n\nvar isPrevMonthDisabled = function isPrevMonthDisabled(refParts, minParts, maxParts) {\n  var prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(prevMonth, {\n    minParts: minParts,\n    maxParts: maxParts\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\n\n\nvar isNextMonthDisabled = function isNextMonthDisabled(refParts, maxParts) {\n  var nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(nextMonth, {\n    maxParts: maxParts\n  });\n};\n\nvar datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color);font-size:14px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}:host .calendar-day:after{opacity:0.2}:host .calendar-day:focus:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-active:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-today.calendar-day-active:after{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\nvar datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:3px;padding-bottom:0px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-day:focus:after{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-today:after{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-active:after{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\nvar Datetime = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    _this = _super.call(this);\n\n    _this.__registerHost();\n\n    _this.__attachShadow();\n\n    _this.ionCancel = createEvent(_assertThisInitialized(_this), \"ionCancel\", 7);\n    _this.ionChange = createEvent(_assertThisInitialized(_this), \"ionChange\", 7);\n    _this.ionFocus = createEvent(_assertThisInitialized(_this), \"ionFocus\", 7);\n    _this.ionBlur = createEvent(_assertThisInitialized(_this), \"ionBlur\", 7);\n    _this.ionStyle = createEvent(_assertThisInitialized(_this), \"ionStyle\", 7);\n    _this.ionRender = createEvent(_assertThisInitialized(_this), \"ionRender\", 7);\n    _this.inputId = \"ion-dt-\".concat(datetimeIds++);\n    /**\n     * Whether to highlight the active day with a solid circle (as opposed\n     * to the outline circle around today). If you don't specify an initial\n     * value for the datetime, it doesn't automatically init to a default to\n     * avoid unwanted change events firing. If the solid circle were still\n     * shown then, it would look like a date had already been selected, which\n     * is misleading UX.\n     */\n\n    _this.highlightActiveParts = false;\n    _this.todayParts = parseDate(getToday());\n    _this.prevPresentation = null;\n    _this.showMonthAndYear = false;\n    _this.activeParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    _this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    _this.isPresented = false;\n    _this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n\n    _this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    _this.name = _this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n\n    _this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n\n    _this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n\n    _this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n\n    _this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n\n    _this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n\n    _this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n\n    _this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n\n    _this.firstDayOfWeek = 0;\n    /**\n     * If `true`, multiple dates can be selected at once. Only\n     * applies to `presentation=\"date\"` and `preferWheel=\"false\"`.\n     */\n\n    _this.multiple = false;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. On `ios` mode this will include the\n     * slotted title, and on `md` mode this will include\n     * the slotted title and the selected date.\n     */\n\n    _this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n\n    _this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n\n    _this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n\n    _this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n\n    _this.size = 'fixed';\n    /**\n     * If `true`, a wheel picker will be rendered instead of a calendar grid\n     * where possible. If `false`, a calendar grid will be rendered instead of\n     * a wheel picker where possible.\n     *\n     * A wheel picker can be rendered instead of a grid when `presentation` is\n     * one of the following values: `'date'`, `'date-time'`, or `'time-date'`.\n     *\n     * A wheel picker will always be rendered regardless of\n     * the `preferWheel` value when `presentation` is one of the following values:\n     * `'time'`, `'month'`, `'month-year'`, or `'year'`.\n     */\n\n    _this.preferWheel = false;\n\n    _this.closeParentOverlay = function () {\n      var popoverOrModal = _this.el.closest('ion-modal, ion-popover');\n\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n\n    _this.setWorkingParts = function (parts) {\n      _this.workingParts = Object.assign({}, parts);\n    };\n\n    _this.setActiveParts = function (parts) {\n      var removeDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          multiple = _assertThisInitialize.multiple,\n          activePartsClone = _assertThisInitialize.activePartsClone,\n          highlightActiveParts = _assertThisInitialize.highlightActiveParts;\n\n      if (multiple) {\n        /**\n         * We read from activePartsClone here because valueChanged() only updates that,\n         * so it's the more reliable source of truth. If we read from activeParts, then\n         * if you click July 1, manually set the value to July 2, and then click July 3,\n         * the new value would be [July 1, July 3], ignoring the value set.\n         *\n         * We can then pass the new value to activeParts (rather than activePartsClone)\n         * since the clone will be updated automatically by activePartsChanged().\n         */\n        var activePartsArray = Array.isArray(activePartsClone) ? activePartsClone : [activePartsClone];\n\n        if (removeDate) {\n          _this.activeParts = activePartsArray.filter(function (p) {\n            return !isSameDay(p, parts);\n          });\n        } else if (highlightActiveParts) {\n          _this.activeParts = [].concat(_toConsumableArray(activePartsArray), [parts]);\n        } else {\n          /**\n           * If highlightActiveParts is false, that means we just have a\n           * default value of today in activeParts; we need to replace that\n           * rather than adding to it since it's just a placeholder.\n           */\n          _this.activeParts = [parts];\n        }\n      } else {\n        _this.activeParts = Object.assign({}, parts);\n      }\n      /**\n       * Now that the user has interacted somehow to select something, we can\n       * show the solid highlight. This needs to be done after checking it above,\n       * but before the confirm call below.\n       *\n       * Note that for datetimes with confirm/cancel buttons, the value\n       * isn't updated until you call confirm(). We need to bring the\n       * solid circle back on day click for UX reasons, rather than only\n       * show the circle if `value` is truthy.\n       */\n\n\n      _this.highlightActiveParts = true;\n      var hasSlottedButtons = _this.el.querySelector('[slot=\"buttons\"]') !== null;\n\n      if (hasSlottedButtons || _this.showDefaultButtons) {\n        return;\n      }\n\n      _this.confirm();\n    };\n\n    _this.initializeKeyboardListeners = function () {\n      var calendarBodyRef = _this.calendarBodyRef;\n\n      if (!calendarBodyRef) {\n        return;\n      }\n\n      var root = _this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n\n      var currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n\n      var checkCalendarBodyFocus = function checkCalendarBodyFocus(ev) {\n        var _a;\n\n        var record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n\n        _this.focusWorkingDay(currentMonth);\n      };\n\n      var mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, {\n        attributeFilter: ['class'],\n        attributeOldValue: true\n      });\n\n      _this.destroyKeyboardMO = function () {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n\n\n      calendarBodyRef.addEventListener('keydown', function (ev) {\n        var activeElement = root.activeElement;\n\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n\n        var parts = getPartsFromCalendarDay(activeElement);\n        var partsToFocus;\n\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n\n\n        if (isDayDisabled(partsToFocus, _this.minParts, _this.maxParts)) {\n          return;\n        }\n\n        _this.setWorkingParts(Object.assign(Object.assign({}, _this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n\n\n        requestAnimationFrame(function () {\n          return _this.focusWorkingDay(currentMonth);\n        });\n      });\n    };\n\n    _this.focusWorkingDay = function (currentMonth) {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      var padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      var day = _this.workingParts.day;\n\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n\n\n      var dayEl = currentMonth.querySelector(\".calendar-day:nth-of-type(\".concat(padding.length + day, \")\"));\n\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n\n    _this.processMinParts = function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          min = _assertThisInitialize2.min,\n          todayParts = _assertThisInitialize2.todayParts;\n\n      if (min === undefined) {\n        _this.minParts = undefined;\n        return;\n      }\n\n      _this.minParts = parseMinParts(min, todayParts);\n    };\n\n    _this.processMaxParts = function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          max = _assertThisInitialize3.max,\n          todayParts = _assertThisInitialize3.todayParts;\n\n      if (max === undefined) {\n        _this.maxParts = undefined;\n        return;\n      }\n\n      _this.maxParts = parseMaxParts(max, todayParts);\n    };\n\n    _this.initializeCalendarListener = function () {\n      var calendarBodyRef = _this.calendarBodyRef;\n\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n\n\n      var months = calendarBodyRef.querySelectorAll('.calendar-month');\n      var startMonth = months[0];\n      var workingMonth = months[1];\n      var endMonth = months[2];\n      var mode = getIonMode(_assertThisInitialized(_this));\n      var needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n\n      writeTask(function () {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(_this.el) ? -1 : 1);\n\n        var getChangedMonth = function getChangedMonth(parts) {\n          var box = calendarBodyRef.getBoundingClientRect();\n          var root = _this.el.shadowRoot;\n          /**\n           * Get the element that is in the center of the calendar body.\n           * This will be an element inside of the active month.\n           */\n\n          var elementAtCenter = root.elementFromPoint(box.x + box.width / 2, box.y + box.height / 2);\n          /**\n           * If there is no element then the\n           * component may be re-rendering on a slow device.\n           */\n\n          if (!elementAtCenter) return;\n          var month = elementAtCenter.closest('.calendar-month');\n          if (!month) return;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n\n          var monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2) return;\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          } else if (month === endMonth) {\n            return getNextMonth(parts);\n          } else {\n            return;\n          }\n        };\n\n        var updateActiveMonth = function updateActiveMonth() {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n\n\n          var newDate = getChangedMonth(_this.workingParts);\n          if (!newDate) return;\n          var month = newDate.month,\n              day = newDate.day,\n              year = newDate.year;\n\n          if (isMonthDisabled({\n            month: month,\n            year: year,\n            day: null\n          }, {\n            minParts: Object.assign(Object.assign({}, _this.minParts), {\n              day: null\n            }),\n            maxParts: Object.assign(Object.assign({}, _this.maxParts), {\n              day: null\n            })\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n\n\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n\n          writeTask(function () {\n            _this.setWorkingParts(Object.assign(Object.assign({}, _this.workingParts), {\n              month: month,\n              day: day,\n              year: year\n            }));\n\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(_this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n\n\n        var scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n\n        var appliediOSRubberBandFix = false;\n\n        var scrollCallback = function scrollCallback() {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n\n\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          } // Wait ~3 frames\n\n\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n\n        _this.destroyCalendarListener = function () {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n\n\n    _this.destroyInteractionListeners = function () {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          destroyCalendarListener = _assertThisInitialize4.destroyCalendarListener,\n          destroyKeyboardMO = _assertThisInitialize4.destroyKeyboardMO;\n\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n\n    _this.processValue = function (value) {\n      var hasValue = !!value;\n      _this.highlightActiveParts = hasValue;\n      var valueToProcess = parseDate(value || getToday());\n\n      var _assertThisInitialize5 = _assertThisInitialized(_this),\n          minParts = _assertThisInitialize5.minParts,\n          maxParts = _assertThisInitialize5.maxParts,\n          multiple = _assertThisInitialize5.multiple;\n\n      if (!multiple && Array.isArray(value)) {\n        _this.value = value[0];\n        valueToProcess = valueToProcess[0];\n      }\n      /**\n       * Datetime should only warn of out of bounds values\n       * if set by the user. If the `value` is undefined,\n       * we will default to today's date which may be out\n       * of bounds. In this case, the warning makes it look\n       * like the developer did something wrong which is\n       * not true.\n       */\n\n\n      if (hasValue) {\n        warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      }\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n\n\n      var singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n\n      var _clampDate = clampDate(singleValue, minParts, maxParts),\n          month = _clampDate.month,\n          day = _clampDate.day,\n          year = _clampDate.year,\n          hour = _clampDate.hour,\n          minute = _clampDate.minute,\n          tzOffset = _clampDate.tzOffset;\n\n      var ampm = parseAmPm(hour);\n\n      _this.setWorkingParts({\n        month: month,\n        day: day,\n        year: year,\n        hour: hour,\n        minute: minute,\n        tzOffset: tzOffset,\n        ampm: ampm\n      });\n\n      if (Array.isArray(valueToProcess)) {\n        _this.activeParts = _toConsumableArray(valueToProcess);\n      } else {\n        _this.activeParts = {\n          month: month,\n          day: day,\n          year: year,\n          hour: hour,\n          minute: minute,\n          tzOffset: tzOffset,\n          ampm: ampm\n        };\n      }\n    };\n\n    _this.onFocus = function () {\n      _this.ionFocus.emit();\n    };\n\n    _this.onBlur = function () {\n      _this.ionBlur.emit();\n    };\n\n    _this.hasValue = function () {\n      return _this.value != null && _this.value !== '';\n    };\n\n    _this.nextMonth = function () {\n      var calendarBodyRef = _this.calendarBodyRef;\n\n      if (!calendarBodyRef) {\n        return;\n      }\n\n      var nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n\n      if (!nextMonth) {\n        return;\n      }\n\n      var left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(_this.el) ? -1 : 1),\n        behavior: 'smooth'\n      });\n    };\n\n    _this.prevMonth = function () {\n      var calendarBodyRef = _this.calendarBodyRef;\n\n      if (!calendarBodyRef) {\n        return;\n      }\n\n      var prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n\n      if (!prevMonth) {\n        return;\n      }\n\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    };\n\n    _this.toggleMonthAndYearView = function () {\n      _this.showMonthAndYear = !_this.showMonthAndYear;\n    };\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"minChanged\",\n    value: function minChanged() {\n      this.processMinParts();\n    }\n  }, {\n    key: \"maxChanged\",\n    value: function maxChanged() {\n      this.processMaxParts();\n    }\n  }, {\n    key: \"yearValuesChanged\",\n    value: function yearValuesChanged() {\n      this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    }\n  }, {\n    key: \"monthValuesChanged\",\n    value: function monthValuesChanged() {\n      this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    }\n  }, {\n    key: \"dayValuesChanged\",\n    value: function dayValuesChanged() {\n      this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    }\n  }, {\n    key: \"hourValuesChanged\",\n    value: function hourValuesChanged() {\n      this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    }\n  }, {\n    key: \"minuteValuesChanged\",\n    value: function minuteValuesChanged() {\n      this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    }\n  }, {\n    key: \"activePartsChanged\",\n    value: function activePartsChanged() {\n      this.activePartsClone = this.activeParts;\n    }\n    /**\n     * Update the datetime value when the value changes\n     */\n\n  }, {\n    key: \"valueChanged\",\n    value: function valueChanged() {\n      var value = this.value,\n          minParts = this.minParts,\n          maxParts = this.maxParts,\n          workingParts = this.workingParts,\n          multiple = this.multiple;\n\n      if (this.hasValue()) {\n        if (!multiple && Array.isArray(value)) {\n          this.value = value[0];\n          return; // setting this.value will trigger re-run of this function\n        }\n        /**\n         * Clones the value of the `activeParts` to the private clone, to update\n         * the date display on the current render cycle without causing another render.\n         *\n         * This allows us to update the current value's date/time display without\n         * refocusing or shifting the user's display (leaves the user in place).\n         */\n\n\n        var valueDateParts = parseDate(value);\n\n        if (valueDateParts) {\n          warnIfValueOutOfBounds(valueDateParts, minParts, maxParts);\n\n          if (Array.isArray(valueDateParts)) {\n            this.activePartsClone = _toConsumableArray(valueDateParts);\n          } else {\n            var month = valueDateParts.month,\n                day = valueDateParts.day,\n                year = valueDateParts.year,\n                hour = valueDateParts.hour,\n                minute = valueDateParts.minute;\n            var ampm = hour != null ? hour >= 12 ? 'pm' : 'am' : undefined;\n            this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), {\n              month: month,\n              day: day,\n              year: year,\n              hour: hour,\n              minute: minute,\n              ampm: ampm\n            });\n            /**\n             * The working parts am/pm value must be updated when the value changes, to\n             * ensure the time picker hour column values are generated correctly.\n             *\n             * Note that we don't need to do this if valueDateParts is an array, since\n             * multiple=\"true\" does not apply to time pickers.\n             */\n\n            this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n              ampm: ampm\n            }));\n          }\n        } else {\n          printIonWarning(\"Unable to parse date string: \".concat(value, \". Please provide a valid ISO 8601 datetime string.\"));\n        }\n      }\n\n      this.emitStyle();\n      this.ionChange.emit({\n        value: value\n      });\n    }\n    /**\n     * Confirms the selected datetime value, updates the\n     * `value` property, and optionally closes the popover\n     * or modal that the datetime was presented in.\n     */\n\n  }, {\n    key: \"confirm\",\n    value: function () {\n      var _confirm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var closeOverlay,\n            highlightActiveParts,\n            isCalendarPicker,\n            activeParts,\n            activePartsIsArray,\n            dates,\n            i,\n            date,\n            _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                closeOverlay = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n                highlightActiveParts = this.highlightActiveParts, isCalendarPicker = this.isCalendarPicker, activeParts = this.activeParts;\n                /**\n                 * We only update the value if the presentation is not a calendar picker,\n                 * or if `highlightActiveParts` is true; indicating that the user\n                 * has selected a date from the calendar picker.\n                 *\n                 * Otherwise \"today\" would accidentally be set as the value.\n                 */\n\n                if (highlightActiveParts || !isCalendarPicker) {\n                  activePartsIsArray = Array.isArray(activeParts);\n\n                  if (activePartsIsArray && activeParts.length === 0) {\n                    this.value = undefined;\n                  } else {\n                    /**\n                     * Prevent convertDataToISO from doing any\n                     * kind of transformation based on timezone\n                     * This cancels out any change it attempts to make\n                     *\n                     * Important: Take the timezone offset based on\n                     * the date that is currently selected, otherwise\n                     * there can be 1 hr difference when dealing w/ DST\n                     */\n                    if (activePartsIsArray) {\n                      dates = convertDataToISO(activeParts).map(function (str) {\n                        return new Date(str);\n                      });\n\n                      for (i = 0; i < dates.length; i++) {\n                        activeParts[i].tzOffset = dates[i].getTimezoneOffset() * -1;\n                      }\n                    } else {\n                      date = new Date(convertDataToISO(activeParts));\n                      activeParts.tzOffset = date.getTimezoneOffset() * -1;\n                    }\n\n                    this.value = convertDataToISO(activeParts);\n                  }\n                }\n\n                if (closeOverlay) {\n                  this.closeParentOverlay();\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function confirm() {\n        return _confirm.apply(this, arguments);\n      }\n\n      return confirm;\n    }()\n    /**\n     * Resets the internal state of the datetime but does not update the value.\n     * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n     * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n     */\n\n  }, {\n    key: \"reset\",\n    value: function () {\n      var _reset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(startDate) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.processValue(startDate);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function reset(_x) {\n        return _reset.apply(this, arguments);\n      }\n\n      return reset;\n    }()\n    /**\n     * Emits the ionCancel event and\n     * optionally closes the popover\n     * or modal that the datetime was\n     * presented in.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function () {\n      var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var closeOverlay,\n            _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                closeOverlay = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : false;\n                this.ionCancel.emit();\n\n                if (closeOverlay) {\n                  this.closeParentOverlay();\n                }\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function cancel() {\n        return _cancel.apply(this, arguments);\n      }\n\n      return cancel;\n    }()\n  }, {\n    key: \"isCalendarPicker\",\n    get: function get() {\n      var presentation = this.presentation;\n      return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.clearFocusVisible = startFocusVisible(this.el).destroy;\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      if (this.clearFocusVisible) {\n        this.clearFocusVisible();\n        this.clearFocusVisible = undefined;\n      }\n    }\n  }, {\n    key: \"initializeListeners\",\n    value: function initializeListeners() {\n      this.initializeCalendarListener();\n      this.initializeKeyboardListeners();\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      var _this2 = this;\n\n      /**\n       * If a scrollable element is hidden using `display: none`,\n       * it will not have a scroll height meaning we cannot scroll elements\n       * into view. As a result, we will need to wait for the datetime to become\n       * visible if used inside of a modal or a popover otherwise the scrollable\n       * areas will not have the correct values snapped into place.\n       */\n      var visibleCallback = function visibleCallback(entries) {\n        var ev = entries[0];\n\n        if (!ev.isIntersecting) {\n          return;\n        }\n\n        _this2.initializeListeners();\n        /**\n         * TODO: Datetime needs a frame to ensure that it\n         * can properly scroll contents into view. As a result\n         * we hide the scrollable content until after that frame\n         * so users do not see the content quickly shifting. The downside\n         * is that the content will pop into view a frame after. Maybe there\n         * is a better way to handle this?\n         */\n\n\n        writeTask(function () {\n          _this2.el.classList.add('datetime-ready');\n        });\n      };\n\n      var visibleIO = new IntersectionObserver(visibleCallback, {\n        threshold: 0.01\n      });\n      /**\n       * Use raf to avoid a race condition between the component loading and\n       * its display animation starting (such as when shown in a modal). This\n       * could cause the datetime to start at a visibility of 0, erroneously\n       * triggering the `hiddenIO` observer below.\n       */\n\n      raf(function () {\n        return visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(_this2.el);\n      });\n      /**\n       * We need to clean up listeners when the datetime is hidden\n       * in a popover/modal so that we can properly scroll containers\n       * back into view if they are re-presented. When the datetime is hidden\n       * the scroll areas have scroll widths/heights of 0px, so any snapping\n       * we did originally has been lost.\n       */\n\n      var hiddenCallback = function hiddenCallback(entries) {\n        var ev = entries[0];\n\n        if (ev.isIntersecting) {\n          return;\n        }\n\n        _this2.destroyInteractionListeners();\n        /**\n         * When datetime is hidden, we need to make sure that\n         * the month/year picker is closed. Otherwise,\n         * it will be open when the datetime re-appears\n         * and the scroll area of the calendar grid will be 0.\n         * As a result, the wrong month will be shown.\n         */\n\n\n        _this2.showMonthAndYear = false;\n        writeTask(function () {\n          _this2.el.classList.remove('datetime-ready');\n        });\n      };\n\n      var hiddenIO = new IntersectionObserver(hiddenCallback, {\n        threshold: 0\n      });\n      raf(function () {\n        return hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(_this2.el);\n      });\n      /**\n       * Datetime uses Ionic components that emit\n       * ionFocus and ionBlur. These events are\n       * composed meaning they will cross\n       * the shadow dom boundary. We need to\n       * stop propagation on these events otherwise\n       * developers will see 2 ionFocus or 2 ionBlur\n       * events at a time.\n       */\n\n      var root = getElementRoot(this.el);\n      root.addEventListener('ionFocus', function (ev) {\n        return ev.stopPropagation();\n      });\n      root.addEventListener('ionBlur', function (ev) {\n        return ev.stopPropagation();\n      });\n    }\n    /**\n     * When the presentation is changed, all calendar content is recreated,\n     * so we need to re-init behavior with the new elements.\n     */\n\n  }, {\n    key: \"componentDidRender\",\n    value: function componentDidRender() {\n      var _this3 = this;\n\n      var presentation = this.presentation,\n          prevPresentation = this.prevPresentation,\n          calendarBodyRef = this.calendarBodyRef,\n          minParts = this.minParts,\n          preferWheel = this.preferWheel;\n      /**\n       * TODO(FW-2165)\n       * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n       * When using `min`, we add `scroll-snap-align: none`\n       * to the disabled month so that users cannot scroll to it.\n       * This triggers a bug in WebKit where the scroll position is reset.\n       * Since the month change logic is handled by a scroll listener,\n       * this causes the month to change leading to `scroll-snap-align`\n       * changing again, thus changing the scroll position again and causing\n       * an infinite loop.\n       * This issue only applies to the calendar grid, so we can disable\n       * it if the calendar grid is not being used.\n       */\n\n      var hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n\n      if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n        var workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n\n        if (workingMonth) {\n          calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        }\n      }\n\n      if (prevPresentation === null) {\n        this.prevPresentation = presentation;\n        return;\n      }\n\n      if (presentation === prevPresentation) {\n        return;\n      }\n\n      this.prevPresentation = presentation;\n      this.destroyInteractionListeners();\n      this.initializeListeners();\n      /**\n       * The month/year picker from the date interface\n       * should be closed as it is not available in non-date\n       * interfaces.\n       */\n\n      this.showMonthAndYear = false;\n      raf(function () {\n        _this3.ionRender.emit();\n      });\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      var el = this.el,\n          multiple = this.multiple,\n          presentation = this.presentation,\n          preferWheel = this.preferWheel;\n\n      if (multiple) {\n        if (presentation !== 'date') {\n          printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n        }\n\n        if (preferWheel) {\n          printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n        }\n      }\n\n      this.processMinParts();\n      this.processMaxParts();\n      this.processValue(this.value);\n      this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n      this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n      this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n      this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n      this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n      this.emitStyle();\n    }\n  }, {\n    key: \"emitStyle\",\n    value: function emitStyle() {\n      this.ionStyle.emit({\n        interactive: true,\n        datetime: true,\n        'interactive-disabled': this.disabled\n      });\n    }\n    /**\n     * Universal render methods\n     * These are pieces of datetime that\n     * are rendered independently of presentation.\n     */\n\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      var _this4 = this,\n          _class2;\n\n      var showDefaultButtons = this.showDefaultButtons,\n          showClearButton = this.showClearButton;\n      var hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n\n      if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n        return;\n      }\n\n      var clearButtonClick = function clearButtonClick() {\n        _this4.reset();\n\n        _this4.value = undefined;\n      };\n      /**\n       * By default we render two buttons:\n       * Cancel - Dismisses the datetime and\n       * does not update the `value` prop.\n       * OK - Dismisses the datetime and\n       * updates the `value` prop.\n       */\n\n\n      return h(\"div\", {\n        class: \"datetime-footer\"\n      }, h(\"div\", {\n        class: \"datetime-buttons\"\n      }, h(\"div\", {\n        class: (_class2 = {}, _defineProperty(_class2, 'datetime-action-buttons', true), _defineProperty(_class2, 'has-clear-button', this.showClearButton), _class2)\n      }, h(\"slot\", {\n        name: \"buttons\"\n      }, h(\"ion-buttons\", null, showDefaultButtons && h(\"ion-button\", {\n        id: \"cancel-button\",\n        color: this.color,\n        onClick: function onClick() {\n          return _this4.cancel(true);\n        }\n      }, this.cancelText), h(\"div\", null, showClearButton && h(\"ion-button\", {\n        id: \"clear-button\",\n        color: this.color,\n        onClick: function onClick() {\n          return clearButtonClick();\n        }\n      }, this.clearText), showDefaultButtons && h(\"ion-button\", {\n        id: \"confirm-button\",\n        color: this.color,\n        onClick: function onClick() {\n          return _this4.confirm(true);\n        }\n      }, this.doneText)))))));\n    }\n    /**\n     * Wheel picker render methods\n     */\n\n  }, {\n    key: \"renderWheelPicker\",\n    value: function renderWheelPicker() {\n      var forcePresentation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.presentation;\n\n      /**\n       * If presentation=\"time-date\" we switch the\n       * order of the render array here instead of\n       * manually reordering each date/time picker\n       * column with CSS. This allows for additional\n       * flexibility if we need to render subsets\n       * of the date/time data or do additional ordering\n       * within the child render functions.\n       */\n      var renderArray = forcePresentation === 'time-date' ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)] : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n      return h(\"ion-picker-internal\", null, renderArray);\n    }\n  }, {\n    key: \"renderDatePickerColumns\",\n    value: function renderDatePickerColumns(forcePresentation) {\n      return forcePresentation === 'date-time' || forcePresentation === 'time-date' ? this.renderCombinedDatePickerColumn() : this.renderIndividualDatePickerColumns(forcePresentation);\n    }\n  }, {\n    key: \"renderCombinedDatePickerColumn\",\n    value: function renderCombinedDatePickerColumn() {\n      var _this5 = this;\n\n      var activeParts = this.activeParts,\n          workingParts = this.workingParts,\n          locale = this.locale,\n          minParts = this.minParts,\n          maxParts = this.maxParts,\n          todayParts = this.todayParts,\n          isDateEnabled = this.isDateEnabled;\n      /**\n       * By default, generate a range of 3 months:\n       * Previous month, current month, and next month\n       */\n\n      var monthsToRender = generateMonths(workingParts);\n      /**\n       * generateMonths returns the day data as well,\n       * but we do not want the day value to act as a max/min\n       * on the data we are going to generate.\n       */\n\n      for (var i = 0; i <= monthsToRender.length - 1; i++) {\n        monthsToRender[i].day = null;\n      }\n      /**\n       * If developers have provided their own\n       * min/max values, use that instead. Otherwise,\n       * fallback to the default range of 3 months.\n       */\n\n\n      var min = minParts || monthsToRender[0];\n      var max = maxParts || monthsToRender[monthsToRender.length - 1];\n      var result = getCombinedDateColumnData(locale, workingParts, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n      var items = result.items;\n      var parts = result.parts;\n\n      if (isDateEnabled) {\n        items = items.map(function (itemObject, index) {\n          var referenceParts = parts[index];\n          var disabled;\n\n          try {\n            /**\n             * The `isDateEnabled` implementation is try-catch wrapped\n             * to prevent exceptions in the user's function from\n             * interrupting the calendar rendering.\n             */\n            disabled = !isDateEnabled(convertDataToISO(referenceParts));\n          } catch (e) {\n            printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n          }\n\n          return Object.assign(Object.assign({}, itemObject), {\n            disabled: disabled\n          });\n        });\n      }\n      /**\n       * If we have selected a day already, then default the column\n       * to that value. Otherwise, default it to today.\n       */\n\n\n      var todayString = workingParts.day ? \"\".concat(workingParts.year, \"-\").concat(workingParts.month, \"-\").concat(workingParts.day) : \"\".concat(todayParts.year, \"-\").concat(todayParts.month, \"-\").concat(todayParts.day);\n      return h(\"ion-picker-column-internal\", {\n        class: \"date-column\",\n        color: this.color,\n        items: items,\n        value: todayString,\n        onIonChange: function onIonChange(ev) {\n          // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n          // Due to a Safari 14 issue we need to destroy\n          // the scroll listener before we update state\n          // and trigger a re-render.\n          if (_this5.destroyCalendarListener) {\n            _this5.destroyCalendarListener();\n          }\n\n          var value = ev.detail.value;\n          var findPart = parts.find(function (_ref2) {\n            var month = _ref2.month,\n                day = _ref2.day,\n                year = _ref2.year;\n            return value === \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n          });\n\n          _this5.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n\n          if (!Array.isArray(activeParts)) {\n            _this5.setActiveParts(Object.assign(Object.assign({}, activeParts), findPart));\n          } // We can re-attach the scroll listener after\n          // the working parts have been updated.\n\n\n          _this5.initializeCalendarListener();\n\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderIndividualDatePickerColumns\",\n    value: function renderIndividualDatePickerColumns(forcePresentation) {\n      var workingParts = this.workingParts,\n          isDateEnabled = this.isDateEnabled;\n      var shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n      var months = shouldRenderMonths ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues) : [];\n      var shouldRenderDays = forcePresentation === 'date';\n      var days = shouldRenderDays ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues) : [];\n\n      if (isDateEnabled) {\n        days = days.map(function (dayObject) {\n          var value = dayObject.value;\n          var valueNum = typeof value === 'string' ? parseInt(value) : value;\n          var referenceParts = {\n            month: workingParts.month,\n            day: valueNum,\n            year: workingParts.year\n          };\n          var disabled;\n\n          try {\n            /**\n             * The `isDateEnabled` implementation is try-catch wrapped\n             * to prevent exceptions in the user's function from\n             * interrupting the calendar rendering.\n             */\n            disabled = !isDateEnabled(convertDataToISO(referenceParts));\n          } catch (e) {\n            printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n          }\n\n          return Object.assign(Object.assign({}, dayObject), {\n            disabled: disabled\n          });\n        });\n      }\n\n      var shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n      var years = shouldRenderYears ? getYearColumnData(this.locale, this.todayParts, this.minParts, this.maxParts, this.parsedYearValues) : [];\n      /**\n       * Certain locales show the day before the month.\n       */\n\n      var showMonthFirst = isMonthFirstLocale(this.locale, {\n        month: 'numeric',\n        day: 'numeric'\n      });\n      var renderArray = [];\n\n      if (showMonthFirst) {\n        renderArray = [this.renderMonthPickerColumn(months), this.renderDayPickerColumn(days), this.renderYearPickerColumn(years)];\n      } else {\n        renderArray = [this.renderDayPickerColumn(days), this.renderMonthPickerColumn(months), this.renderYearPickerColumn(years)];\n      }\n\n      return renderArray;\n    }\n  }, {\n    key: \"renderDayPickerColumn\",\n    value: function renderDayPickerColumn(days) {\n      var _this6 = this;\n\n      var _a;\n\n      if (days.length === 0) {\n        return [];\n      }\n\n      var activeParts = this.activeParts,\n          workingParts = this.workingParts;\n      return h(\"ion-picker-column-internal\", {\n        class: \"day-column\",\n        color: this.color,\n        items: days,\n        value: (_a = workingParts.day || this.todayParts.day) !== null && _a !== void 0 ? _a : undefined,\n        onIonChange: function onIonChange(ev) {\n          // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n          // Due to a Safari 14 issue we need to destroy\n          // the scroll listener before we update state\n          // and trigger a re-render.\n          if (_this6.destroyCalendarListener) {\n            _this6.destroyCalendarListener();\n          }\n\n          _this6.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            day: ev.detail.value\n          }));\n\n          if (!Array.isArray(activeParts)) {\n            _this6.setActiveParts(Object.assign(Object.assign({}, activeParts), {\n              day: ev.detail.value\n            }));\n          } // We can re-attach the scroll listener after\n          // the working parts have been updated.\n\n\n          _this6.initializeCalendarListener();\n\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderMonthPickerColumn\",\n    value: function renderMonthPickerColumn(months) {\n      var _this7 = this;\n\n      if (months.length === 0) {\n        return [];\n      }\n\n      var activeParts = this.activeParts,\n          workingParts = this.workingParts;\n      return h(\"ion-picker-column-internal\", {\n        class: \"month-column\",\n        color: this.color,\n        items: months,\n        value: workingParts.month,\n        onIonChange: function onIonChange(ev) {\n          // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n          // Due to a Safari 14 issue we need to destroy\n          // the scroll listener before we update state\n          // and trigger a re-render.\n          if (_this7.destroyCalendarListener) {\n            _this7.destroyCalendarListener();\n          }\n\n          _this7.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            month: ev.detail.value\n          }));\n\n          if (!Array.isArray(activeParts)) {\n            _this7.setActiveParts(Object.assign(Object.assign({}, activeParts), {\n              month: ev.detail.value\n            }));\n          } // We can re-attach the scroll listener after\n          // the working parts have been updated.\n\n\n          _this7.initializeCalendarListener();\n\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderYearPickerColumn\",\n    value: function renderYearPickerColumn(years) {\n      var _this8 = this;\n\n      if (years.length === 0) {\n        return [];\n      }\n\n      var activeParts = this.activeParts,\n          workingParts = this.workingParts;\n      return h(\"ion-picker-column-internal\", {\n        class: \"year-column\",\n        color: this.color,\n        items: years,\n        value: workingParts.year,\n        onIonChange: function onIonChange(ev) {\n          // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n          // Due to a Safari 14 issue we need to destroy\n          // the scroll listener before we update state\n          // and trigger a re-render.\n          if (_this8.destroyCalendarListener) {\n            _this8.destroyCalendarListener();\n          }\n\n          _this8.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            year: ev.detail.value\n          }));\n\n          if (!Array.isArray(activeParts)) {\n            _this8.setActiveParts(Object.assign(Object.assign({}, activeParts), {\n              year: ev.detail.value\n            }));\n          } // We can re-attach the scroll listener after\n          // the working parts have been updated.\n\n\n          _this8.initializeCalendarListener();\n\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderTimePickerColumns\",\n    value: function renderTimePickerColumns(forcePresentation) {\n      if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n        return [];\n      }\n\n      var _getTimeColumnsData = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, this.value ? this.minParts : undefined, this.value ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues),\n          hoursData = _getTimeColumnsData.hoursData,\n          minutesData = _getTimeColumnsData.minutesData,\n          dayPeriodData = _getTimeColumnsData.dayPeriodData;\n\n      return [this.renderHourPickerColumn(hoursData), this.renderMinutePickerColumn(minutesData), this.renderDayPeriodPickerColumn(dayPeriodData)];\n    }\n  }, {\n    key: \"renderHourPickerColumn\",\n    value: function renderHourPickerColumn(hoursData) {\n      var _this9 = this;\n\n      var workingParts = this.workingParts,\n          activePartsClone = this.activePartsClone;\n      if (hoursData.length === 0) return [];\n      return h(\"ion-picker-column-internal\", {\n        color: this.color,\n        value: activePartsClone.hour,\n        items: hoursData,\n        numericInput: true,\n        onIonChange: function onIonChange(ev) {\n          _this9.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            hour: ev.detail.value\n          }));\n\n          if (!Array.isArray(activePartsClone)) {\n            _this9.setActiveParts(Object.assign(Object.assign({}, activePartsClone), {\n              hour: ev.detail.value\n            }));\n          }\n\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderMinutePickerColumn\",\n    value: function renderMinutePickerColumn(minutesData) {\n      var _this10 = this;\n\n      var workingParts = this.workingParts,\n          activePartsClone = this.activePartsClone;\n      if (minutesData.length === 0) return [];\n      return h(\"ion-picker-column-internal\", {\n        color: this.color,\n        value: activePartsClone.minute,\n        items: minutesData,\n        numericInput: true,\n        onIonChange: function onIonChange(ev) {\n          _this10.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            minute: ev.detail.value\n          }));\n\n          if (!Array.isArray(activePartsClone)) {\n            _this10.setActiveParts(Object.assign(Object.assign({}, activePartsClone), {\n              minute: ev.detail.value\n            }));\n          }\n\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderDayPeriodPickerColumn\",\n    value: function renderDayPeriodPickerColumn(dayPeriodData) {\n      var _this11 = this;\n\n      var workingParts = this.workingParts,\n          activePartsClone = this.activePartsClone;\n\n      if (dayPeriodData.length === 0) {\n        return [];\n      }\n\n      var isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n      return h(\"ion-picker-column-internal\", {\n        style: isDayPeriodRTL ? {\n          order: '-1'\n        } : {},\n        color: this.color,\n        value: activePartsClone.ampm,\n        items: dayPeriodData,\n        onIonChange: function onIonChange(ev) {\n          var hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n\n          _this11.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            ampm: ev.detail.value,\n            hour: hour\n          }));\n\n          if (!Array.isArray(activePartsClone)) {\n            _this11.setActiveParts(Object.assign(Object.assign({}, activePartsClone), {\n              ampm: ev.detail.value,\n              hour: hour\n            }));\n          }\n\n          ev.stopPropagation();\n        }\n      });\n    }\n  }, {\n    key: \"renderWheelView\",\n    value: function renderWheelView(forcePresentation) {\n      var locale = this.locale;\n      var showMonthFirst = isMonthFirstLocale(locale);\n      var columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n      return h(\"div\", {\n        class: _defineProperty({}, \"wheel-order-\".concat(columnOrder), true)\n      }, this.renderWheelPicker(forcePresentation));\n    }\n    /**\n     * Grid Render Methods\n     */\n\n  }, {\n    key: \"renderCalendarHeader\",\n    value: function renderCalendarHeader(mode) {\n      var _this12 = this;\n\n      var expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n      var collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n      var prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n      var nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n      return h(\"div\", {\n        class: \"calendar-header\"\n      }, h(\"div\", {\n        class: \"calendar-action-buttons\"\n      }, h(\"div\", {\n        class: \"calendar-month-year\"\n      }, h(\"ion-item\", {\n        button: true,\n        detail: false,\n        lines: \"none\",\n        onClick: function onClick() {\n          return _this12.toggleMonthAndYearView();\n        }\n      }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), ' ', h(\"ion-icon\", {\n        icon: this.showMonthAndYear ? expandedIcon : collapsedIcon,\n        lazy: false\n      })))), h(\"div\", {\n        class: \"calendar-next-prev\"\n      }, h(\"ion-buttons\", null, h(\"ion-button\", {\n        \"aria-label\": \"previous month\",\n        disabled: prevMonthDisabled,\n        onClick: function onClick() {\n          return _this12.prevMonth();\n        }\n      }, h(\"ion-icon\", {\n        \"aria-hidden\": \"true\",\n        slot: \"icon-only\",\n        icon: chevronBack,\n        lazy: false,\n        flipRtl: true\n      })), h(\"ion-button\", {\n        \"aria-label\": \"next month\",\n        disabled: nextMonthDisabled,\n        onClick: function onClick() {\n          return _this12.nextMonth();\n        }\n      }, h(\"ion-icon\", {\n        \"aria-hidden\": \"true\",\n        slot: \"icon-only\",\n        icon: chevronForward,\n        lazy: false,\n        flipRtl: true\n      }))))), h(\"div\", {\n        class: \"calendar-days-of-week\"\n      }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map(function (d) {\n        return h(\"div\", {\n          class: \"day-of-week\"\n        }, d);\n      })));\n    }\n  }, {\n    key: \"renderMonth\",\n    value: function renderMonth(month, year) {\n      var _this13 = this;\n\n      var highlightActiveParts = this.highlightActiveParts;\n      var yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n      var monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n      var isCalMonthDisabled = !yearAllowed || !monthAllowed;\n      var swipeDisabled = isMonthDisabled({\n        month: month,\n        year: year,\n        day: null\n      }, {\n        // The day is not used when checking if a month is disabled.\n        // Users should be able to access the min or max month, even if the\n        // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n        minParts: Object.assign(Object.assign({}, this.minParts), {\n          day: null\n        }),\n        maxParts: Object.assign(Object.assign({}, this.maxParts), {\n          day: null\n        })\n      }); // The working month should never have swipe disabled.\n      // Otherwise the CSS scroll snap will not work and the user\n      // can free-scroll the calendar.\n\n      var isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n      return h(\"div\", {\n        class: {\n          'calendar-month': true,\n          // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n          'calendar-month-disabled': !isWorkingMonth && swipeDisabled\n        }\n      }, h(\"div\", {\n        class: \"calendar-month-grid\"\n      }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map(function (dateObject, index) {\n        var day = dateObject.day,\n            dayOfWeek = dateObject.dayOfWeek;\n        var isDateEnabled = _this13.isDateEnabled,\n            multiple = _this13.multiple;\n        var referenceParts = {\n          month: month,\n          day: day,\n          year: year\n        };\n\n        var _getCalendarDayState = getCalendarDayState(_this13.locale, referenceParts, _this13.activePartsClone, _this13.todayParts, _this13.minParts, _this13.maxParts, _this13.parsedDayValues),\n            isActive = _getCalendarDayState.isActive,\n            isToday = _getCalendarDayState.isToday,\n            ariaLabel = _getCalendarDayState.ariaLabel,\n            ariaSelected = _getCalendarDayState.ariaSelected,\n            disabled = _getCalendarDayState.disabled,\n            text = _getCalendarDayState.text;\n\n        var isCalDayDisabled = isCalMonthDisabled || disabled;\n\n        if (!isCalDayDisabled && isDateEnabled !== undefined) {\n          try {\n            /**\n             * The `isDateEnabled` implementation is try-catch wrapped\n             * to prevent exceptions in the user's function from\n             * interrupting the calendar rendering.\n             */\n            isCalDayDisabled = !isDateEnabled(convertDataToISO(referenceParts));\n          } catch (e) {\n            printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n          }\n        }\n\n        return h(\"button\", {\n          tabindex: \"-1\",\n          \"data-day\": day,\n          \"data-month\": month,\n          \"data-year\": year,\n          \"data-index\": index,\n          \"data-day-of-week\": dayOfWeek,\n          disabled: isCalDayDisabled,\n          class: {\n            'calendar-day-padding': day === null,\n            'calendar-day': true,\n            'calendar-day-active': isActive && highlightActiveParts,\n            'calendar-day-today': isToday\n          },\n          \"aria-selected\": ariaSelected,\n          \"aria-label\": ariaLabel,\n          onClick: function onClick() {\n            if (day === null) {\n              return;\n            }\n\n            _this13.setWorkingParts(Object.assign(Object.assign({}, _this13.workingParts), {\n              month: month,\n              day: day,\n              year: year\n            })); // multiple only needs date info, so we can wipe out other fields like time\n\n\n            if (multiple) {\n              _this13.setActiveParts({\n                month: month,\n                day: day,\n                year: year\n              }, isActive && highlightActiveParts);\n            } else {\n              _this13.setActiveParts(Object.assign(Object.assign({}, _this13.activeParts), {\n                month: month,\n                day: day,\n                year: year\n              }));\n            }\n          }\n        }, text);\n      })));\n    }\n  }, {\n    key: \"renderCalendarBody\",\n    value: function renderCalendarBody() {\n      var _this14 = this;\n\n      return h(\"div\", {\n        class: \"calendar-body ion-focusable\",\n        ref: function ref(el) {\n          return _this14.calendarBodyRef = el;\n        },\n        tabindex: \"0\"\n      }, generateMonths(this.workingParts).map(function (_ref3) {\n        var month = _ref3.month,\n            year = _ref3.year;\n        return _this14.renderMonth(month, year);\n      }));\n    }\n  }, {\n    key: \"renderCalendar\",\n    value: function renderCalendar(mode) {\n      return h(\"div\", {\n        class: \"datetime-calendar\",\n        key: \"datetime-calendar\"\n      }, this.renderCalendarHeader(mode), this.renderCalendarBody());\n    }\n  }, {\n    key: \"renderTimeLabel\",\n    value: function renderTimeLabel() {\n      var hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n\n      if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n        return;\n      }\n\n      return h(\"slot\", {\n        name: \"time-label\"\n      }, \"Time\");\n    }\n  }, {\n    key: \"renderTimeOverlay\",\n    value: function renderTimeOverlay() {\n      var _this15 = this;\n\n      var use24Hour = is24Hour(this.locale, this.hourCycle);\n      return [h(\"div\", {\n        class: \"time-header\"\n      }, this.renderTimeLabel()), h(\"button\", {\n        class: {\n          'time-body': true,\n          'time-body-active': this.isTimePopoverOpen\n        },\n        \"aria-expanded\": \"false\",\n        \"aria-haspopup\": \"true\",\n        onClick: function () {\n          var _onClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(ev) {\n            var popoverRef;\n            return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    popoverRef = _this15.popoverRef;\n\n                    if (!popoverRef) {\n                      _context4.next = 7;\n                      break;\n                    }\n\n                    _this15.isTimePopoverOpen = true;\n                    popoverRef.present(new CustomEvent('ionShadowTarget', {\n                      detail: {\n                        ionShadowTarget: ev.target\n                      }\n                    }));\n                    _context4.next = 6;\n                    return popoverRef.onWillDismiss();\n\n                  case 6:\n                    _this15.isTimePopoverOpen = false;\n\n                  case 7:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4);\n          }));\n\n          function onClick(_x2) {\n            return _onClick.apply(this, arguments);\n          }\n\n          return onClick;\n        }()\n      }, getLocalizedTime(this.locale, this.activePartsClone, use24Hour)), h(\"ion-popover\", {\n        alignment: \"center\",\n        translucent: true,\n        overlayIndex: 1,\n        arrow: false,\n        onWillPresent: function onWillPresent(ev) {\n          /**\n           * Intersection Observers do not consistently fire between Blink and Webkit\n           * when toggling the visibility of the popover and trying to scroll the picker\n           * column to the correct time value.\n           *\n           * This will correctly scroll the element position to the correct time value,\n           * before the popover is fully presented.\n           */\n          var cols = ev.target.querySelectorAll('ion-picker-column-internal'); // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n\n          cols.forEach(function (col) {\n            return col.scrollActiveItemIntoView();\n          });\n        },\n        style: {\n          '--offset-y': '-10px',\n          '--min-width': 'fit-content'\n        },\n        // Allow native browser keyboard events to support up/down/home/end key\n        // navigation within the time picker.\n        keyboardEvents: true,\n        ref: function ref(el) {\n          return _this15.popoverRef = el;\n        }\n      }, this.renderWheelPicker('time'))];\n    }\n  }, {\n    key: \"renderCalendarViewHeader\",\n    value: function renderCalendarViewHeader(mode) {\n      var hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n\n      if (!hasSlottedTitle && !this.showDefaultTitle) {\n        return;\n      }\n\n      return h(\"div\", {\n        class: \"datetime-header\"\n      }, h(\"div\", {\n        class: \"datetime-title\"\n      }, h(\"slot\", {\n        name: \"title\"\n      }, \"Select Date\")), mode === 'md' && !this.multiple && h(\"div\", {\n        class: \"datetime-selected-date\"\n      }, getMonthAndDay(this.locale, this.activeParts)));\n    }\n    /**\n     * Render time picker inside of datetime.\n     * Do not pass color prop to segment on\n     * iOS mode. MD segment has been customized and\n     * should take on the color prop, but iOS\n     * should just be the default segment.\n     */\n\n  }, {\n    key: \"renderTime\",\n    value: function renderTime() {\n      var presentation = this.presentation;\n      var timeOnlyPresentation = presentation === 'time';\n      return h(\"div\", {\n        class: \"datetime-time\"\n      }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay());\n    }\n    /**\n     * Renders the month/year picker that is\n     * displayed on the calendar grid.\n     * The .datetime-year class has additional\n     * styles that let us show/hide the\n     * picker when the user clicks on the\n     * toggle in the calendar header.\n     */\n\n  }, {\n    key: \"renderCalendarViewMonthYearPicker\",\n    value: function renderCalendarViewMonthYearPicker() {\n      return h(\"div\", {\n        class: \"datetime-year\"\n      }, this.renderWheelView('month-year'));\n    }\n    /**\n     * Render entry point\n     * All presentation types are rendered from here.\n     */\n\n  }, {\n    key: \"renderDatetime\",\n    value: function renderDatetime(mode) {\n      var presentation = this.presentation,\n          preferWheel = this.preferWheel;\n      /**\n       * Certain presentation types have separate grid and wheel displays.\n       * If preferWheel is true then we should show a wheel picker instead.\n       */\n\n      var hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n\n      if (preferWheel && hasWheelVariant) {\n        return [this.renderWheelView(), this.renderFooter()];\n      }\n\n      switch (presentation) {\n        case 'date-time':\n          return [this.renderCalendarViewHeader(mode), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderTime(), this.renderFooter()];\n\n        case 'time-date':\n          return [this.renderCalendarViewHeader(mode), this.renderTime(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n\n        case 'time':\n          return [this.renderTime(), this.renderFooter()];\n\n        case 'month':\n        case 'month-year':\n        case 'year':\n          return [this.renderWheelView(), this.renderFooter()];\n\n        default:\n          return [this.renderCalendarViewHeader(mode), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _createColorClasses;\n\n      var name = this.name,\n          value = this.value,\n          disabled = this.disabled,\n          el = this.el,\n          color = this.color,\n          isPresented = this.isPresented,\n          readonly = this.readonly,\n          showMonthAndYear = this.showMonthAndYear,\n          preferWheel = this.preferWheel,\n          presentation = this.presentation,\n          size = this.size;\n      var mode = getIonMode(this);\n      var isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n      var shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n      var monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n      var hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n      var hasWheelVariant = hasDatePresentation && preferWheel;\n      var hasGrid = hasDatePresentation && !preferWheel;\n      renderHiddenInput(true, el, name, formatValue(value), disabled);\n      return h(Host, {\n        \"aria-disabled\": disabled ? 'true' : null,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        class: Object.assign({}, createColorClasses(color, (_createColorClasses = {}, _defineProperty(_createColorClasses, mode, true), _defineProperty(_createColorClasses, 'datetime-presented', isPresented), _defineProperty(_createColorClasses, 'datetime-readonly', readonly), _defineProperty(_createColorClasses, 'datetime-disabled', disabled), _defineProperty(_createColorClasses, 'show-month-and-year', shouldShowMonthAndYear), _defineProperty(_createColorClasses, 'month-year-picker-open', monthYearPickerOpen), _defineProperty(_createColorClasses, \"datetime-presentation-\".concat(presentation), true), _defineProperty(_createColorClasses, \"datetime-size-\".concat(size), true), _defineProperty(_createColorClasses, \"datetime-prefer-wheel\", hasWheelVariant), _defineProperty(_createColorClasses, \"datetime-grid\", hasGrid), _createColorClasses)))\n      }, this.renderDatetime(mode));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"disabled\": [\"disabledChanged\"],\n        \"min\": [\"minChanged\"],\n        \"max\": [\"maxChanged\"],\n        \"yearValues\": [\"yearValuesChanged\"],\n        \"monthValues\": [\"monthValuesChanged\"],\n        \"dayValues\": [\"dayValuesChanged\"],\n        \"hourValues\": [\"hourValuesChanged\"],\n        \"minuteValues\": [\"minuteValuesChanged\"],\n        \"activeParts\": [\"activePartsChanged\"],\n        \"value\": [\"valueChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return {\n        ios: datetimeIosCss,\n        md: datetimeMdCss\n      };\n    }\n  }]);\n\n  return _class;\n}(HTMLElement), [33, \"ion-datetime\", {\n  \"color\": [1],\n  \"name\": [1],\n  \"disabled\": [4],\n  \"readonly\": [4],\n  \"isDateEnabled\": [16],\n  \"min\": [1025],\n  \"max\": [1025],\n  \"presentation\": [1],\n  \"cancelText\": [1, \"cancel-text\"],\n  \"doneText\": [1, \"done-text\"],\n  \"clearText\": [1, \"clear-text\"],\n  \"yearValues\": [8, \"year-values\"],\n  \"monthValues\": [8, \"month-values\"],\n  \"dayValues\": [8, \"day-values\"],\n  \"hourValues\": [8, \"hour-values\"],\n  \"minuteValues\": [8, \"minute-values\"],\n  \"locale\": [1],\n  \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n  \"multiple\": [4],\n  \"value\": [1025],\n  \"showDefaultTitle\": [4, \"show-default-title\"],\n  \"showDefaultButtons\": [4, \"show-default-buttons\"],\n  \"showClearButton\": [4, \"show-clear-button\"],\n  \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n  \"hourCycle\": [1, \"hour-cycle\"],\n  \"size\": [1],\n  \"preferWheel\": [4, \"prefer-wheel\"],\n  \"showMonthAndYear\": [32],\n  \"activeParts\": [32],\n  \"workingParts\": [32],\n  \"isPresented\": [32],\n  \"isTimePopoverOpen\": [32],\n  \"confirm\": [64],\n  \"reset\": [64],\n  \"cancel\": [64]\n}]);\nvar datetimeIds = 0;\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  var components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-datetime\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Datetime);\n        }\n\n        break;\n\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$c();\n        }\n\n        break;\n\n      case \"ion-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$b();\n        }\n\n        break;\n\n      case \"ion-buttons\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$a();\n        }\n\n        break;\n\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$9();\n        }\n\n        break;\n\n      case \"ion-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$8();\n        }\n\n        break;\n\n      case \"ion-label\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$7();\n        }\n\n        break;\n\n      case \"ion-note\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$6();\n        }\n\n        break;\n\n      case \"ion-picker-column-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n\n        break;\n\n      case \"ion-picker-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n\n        break;\n\n      case \"ion-popover\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n\n        break;\n\n      case \"ion-ripple-effect\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n\n        break;\n    }\n  });\n}\n\nvar IonDatetime = Datetime;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonDatetime, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","writeTask","h","Host","a","chevronBack","f","chevronForward","c","chevronDown","g","caretUpSharp","caretDownSharp","b","getIonMode","startFocusVisible","r","raf","d","renderHiddenInput","getElementRoot","p","printIonWarning","printIonError","i","isRTL","createColorClasses","generateDayAriaLabel","getDay","isBefore","isAfter","isSameDay","getPreviousMonth","e","getNextMonth","parseDate","getToday","getPartsFromCalendarDay","j","getEndOfWeek","k","getStartOfWeek","l","getPreviousDay","m","getNextDay","n","getPreviousWeek","o","getNextWeek","q","parseMinParts","parseMaxParts","w","warnIfValueOutOfBounds","s","convertToArrayOfNumbers","t","convertDataToISO","u","getCombinedDateColumnData","v","getMonthColumnData","x","getDayColumnData","y","getYearColumnData","z","isMonthFirstLocale","A","getTimeColumnsData","B","isLocaleDayPeriodRTL","C","getMonthAndYear","D","getDaysOfWeek","E","getDaysOfMonth","F","generateMonths","G","is24Hour","H","getLocalizedTime","I","getMonthAndDay","J","formatValue","K","getNextYear","L","getPreviousYear","M","clampDate","N","parseAmPm","O","calculateHourFromAMPM","defineCustomElement$c","defineCustomElement$b","defineCustomElement$a","defineCustomElement$9","defineCustomElement$8","defineCustomElement$7","defineCustomElement$6","defineCustomElement$5","defineCustomElement$4","defineCustomElement$3","defineCustomElement$2","isYearDisabled","refYear","minParts","maxParts","year","isDayDisabled","refParts","dayValues","day","undefined","includes","getCalendarDayState","locale","activeParts","todayParts","activePartsArray","Array","isArray","isActive","find","parts","isToday","disabled","ariaSelected","ariaLabel","text","isMonthDisabled","isPrevMonthDisabled","prevMonth","Object","assign","isNextMonthDisabled","nextMonth","datetimeIosCss","datetimeMdCss","Datetime","__registerHost","__attachShadow","ionCancel","ionChange","ionFocus","ionBlur","ionStyle","ionRender","inputId","datetimeIds","highlightActiveParts","prevPresentation","showMonthAndYear","month","hour","minute","ampm","workingParts","isPresented","isTimePopoverOpen","color","name","readonly","presentation","cancelText","doneText","clearText","firstDayOfWeek","multiple","showDefaultTitle","showDefaultButtons","showClearButton","showDefaultTimeLabel","size","preferWheel","closeParentOverlay","popoverOrModal","el","closest","dismiss","setWorkingParts","setActiveParts","removeDate","activePartsClone","filter","hasSlottedButtons","querySelector","confirm","initializeKeyboardListeners","calendarBodyRef","root","shadowRoot","currentMonth","checkCalendarBodyFocus","ev","_a","record","oldValue","classList","contains","focusWorkingDay","mo","MutationObserver","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","partsToFocus","key","preventDefault","shiftKey","requestAnimationFrame","padding","querySelectorAll","dayEl","length","focus","processMinParts","min","processMaxParts","max","initializeCalendarListener","months","startMonth","workingMonth","endMonth","mode","needsiOSRubberBandFix","navigator","maxTouchPoints","scrollLeft","clientWidth","getChangedMonth","box","getBoundingClientRect","elementAtCenter","elementFromPoint","width","height","monthBox","Math","abs","updateActiveMonth","style","removeProperty","appliediOSRubberBandFix","newDate","setProperty","scrollTimeout","scrollCallback","clearTimeout","setTimeout","destroyCalendarListener","removeEventListener","destroyInteractionListeners","processValue","value","hasValue","valueToProcess","singleValue","tzOffset","onFocus","emit","onBlur","left","offsetWidth","scrollTo","top","behavior","toggleMonthAndYearView","emitStyle","parsedYearValues","yearValues","parsedMonthValues","monthValues","parsedDayValues","parsedHourValues","hourValues","parsedMinuteValues","minuteValues","valueDateParts","closeOverlay","isCalendarPicker","activePartsIsArray","dates","map","str","Date","getTimezoneOffset","date","startDate","clearFocusVisible","destroy","visibleCallback","entries","isIntersecting","initializeListeners","add","visibleIO","IntersectionObserver","threshold","hiddenCallback","remove","hiddenIO","stopPropagation","hasCalendarGrid","interactive","datetime","clearButtonClick","reset","class","id","onClick","cancel","forcePresentation","renderArray","renderTimePickerColumns","renderDatePickerColumns","renderCombinedDatePickerColumn","renderIndividualDatePickerColumns","isDateEnabled","monthsToRender","result","items","itemObject","index","referenceParts","todayString","onIonChange","detail","findPart","shouldRenderMonths","shouldRenderDays","days","dayObject","valueNum","parseInt","shouldRenderYears","years","showMonthFirst","renderMonthPickerColumn","renderDayPickerColumn","renderYearPickerColumn","hourCycle","hoursData","minutesData","dayPeriodData","renderHourPickerColumn","renderMinutePickerColumn","renderDayPeriodPickerColumn","numericInput","isDayPeriodRTL","order","columnOrder","renderWheelPicker","expandedIcon","collapsedIcon","prevMonthDisabled","nextMonthDisabled","button","lines","icon","lazy","slot","flipRtl","yearAllowed","monthAllowed","isCalMonthDisabled","swipeDisabled","isWorkingMonth","dateObject","dayOfWeek","isCalDayDisabled","tabindex","ref","renderMonth","renderCalendarHeader","renderCalendarBody","hasSlottedTimeLabel","use24Hour","renderTimeLabel","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","alignment","translucent","overlayIndex","arrow","onWillPresent","cols","forEach","col","scrollActiveItemIntoView","keyboardEvents","hasSlottedTitle","timeOnlyPresentation","renderTimeOverlay","renderWheelView","hasWheelVariant","renderFooter","renderCalendarViewHeader","renderCalendar","renderCalendarViewMonthYearPicker","renderTime","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","hasDatePresentation","hasGrid","renderDatetime","ios","md","defineCustomElement$1","customElements","components","tagName","get","define","IonDatetime","defineCustomElement"],"sources":["/home/shama/webapps/ionicblog/node_modules/@ionic/core/components/ion-datetime.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index6.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, d as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { p as printIonWarning, a as printIonError } from './index7.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, p as parseDate, f as getToday, h as getPartsFromCalendarDay, j as getEndOfWeek, k as getStartOfWeek, l as getPreviousDay, m as getNextDay, n as getPreviousWeek, o as getNextWeek, q as parseMinParts, r as parseMaxParts, w as warnIfValueOutOfBounds, s as convertToArrayOfNumbers, t as convertDataToISO, u as getCombinedDateColumnData, v as getMonthColumnData, x as getDayColumnData, y as getYearColumnData, z as isMonthFirstLocale, A as getTimeColumnsData, B as isLocaleDayPeriodRTL, C as getMonthAndYear, D as getDaysOfWeek, E as getDaysOfMonth, F as generateMonths, G as is24Hour, H as getLocalizedTime, I as getMonthAndDay, J as formatValue, K as getNextYear, L as getPreviousYear, M as clampDate, N as parseAmPm, O as calculateHourFromAMPM } from './parse.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\n\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n  const isActive = activePartsArray.find((parts) => isSameDay(refParts, parts)) !== undefined;\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n    text: refParts.day != null ? getDay(locale, refParts) : null,\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts,\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n  return isMonthDisabled(nextMonth, {\n    maxParts,\n  });\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color);font-size:14px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}:host .calendar-day:after{opacity:0.2}:host .calendar-day:focus:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-active:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-today.calendar-day-active:after{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:3px;padding-bottom:0px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-day:focus:after{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-today:after{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-active:after{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\n\nconst Datetime = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionRender = createEvent(this, \"ionRender\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    /**\n     * Whether to highlight the active day with a solid circle (as opposed\n     * to the outline circle around today). If you don't specify an initial\n     * value for the datetime, it doesn't automatically init to a default to\n     * avoid unwanted change events firing. If the solid circle were still\n     * shown then, it would look like a date had already been selected, which\n     * is misleading UX.\n     */\n    this.highlightActiveParts = false;\n    this.todayParts = parseDate(getToday());\n    this.prevPresentation = null;\n    this.showMonthAndYear = false;\n    this.activeParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm',\n    };\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm',\n    };\n    this.isPresented = false;\n    this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n    this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n    this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n    this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n    this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n    this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n    this.firstDayOfWeek = 0;\n    /**\n     * If `true`, multiple dates can be selected at once. Only\n     * applies to `presentation=\"date\"` and `preferWheel=\"false\"`.\n     */\n    this.multiple = false;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. On `ios` mode this will include the\n     * slotted title, and on `md` mode this will include\n     * the slotted title and the selected date.\n     */\n    this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n    this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n    this.size = 'fixed';\n    /**\n     * If `true`, a wheel picker will be rendered instead of a calendar grid\n     * where possible. If `false`, a calendar grid will be rendered instead of\n     * a wheel picker where possible.\n     *\n     * A wheel picker can be rendered instead of a grid when `presentation` is\n     * one of the following values: `'date'`, `'date-time'`, or `'time-date'`.\n     *\n     * A wheel picker will always be rendered regardless of\n     * the `preferWheel` value when `presentation` is one of the following values:\n     * `'time'`, `'month'`, `'month-year'`, or `'year'`.\n     */\n    this.preferWheel = false;\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = (parts) => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts, removeDate = false) => {\n      const { multiple, activePartsClone, highlightActiveParts } = this;\n      if (multiple) {\n        /**\n         * We read from activePartsClone here because valueChanged() only updates that,\n         * so it's the more reliable source of truth. If we read from activeParts, then\n         * if you click July 1, manually set the value to July 2, and then click July 3,\n         * the new value would be [July 1, July 3], ignoring the value set.\n         *\n         * We can then pass the new value to activeParts (rather than activePartsClone)\n         * since the clone will be updated automatically by activePartsChanged().\n         */\n        const activePartsArray = Array.isArray(activePartsClone) ? activePartsClone : [activePartsClone];\n        if (removeDate) {\n          this.activeParts = activePartsArray.filter((p) => !isSameDay(p, parts));\n        }\n        else if (highlightActiveParts) {\n          this.activeParts = [...activePartsArray, parts];\n        }\n        else {\n          /**\n           * If highlightActiveParts is false, that means we just have a\n           * default value of today in activeParts; we need to replace that\n           * rather than adding to it since it's just a placeholder.\n           */\n          this.activeParts = [parts];\n        }\n      }\n      else {\n        this.activeParts = Object.assign({}, parts);\n      }\n      /**\n       * Now that the user has interacted somehow to select something, we can\n       * show the solid highlight. This needs to be done after checking it above,\n       * but before the confirm call below.\n       *\n       * Note that for datetimes with confirm/cancel buttons, the value\n       * isn't updated until you call confirm(). We need to bring the\n       * solid circle back on day click for UX reasons, rather than only\n       * show the circle if `value` is truthy.\n       */\n      this.highlightActiveParts = true;\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = (ev) => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', (ev) => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = (currentMonth) => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const { day } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day:nth-of-type(${padding.length + day})`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      const { min, todayParts } = this;\n      if (min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      this.minParts = parseMinParts(min, todayParts);\n    };\n    this.processMaxParts = () => {\n      const { max, todayParts } = this;\n      if (max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      this.maxParts = parseMaxParts(max, todayParts);\n    };\n    this.initializeCalendarListener = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      const mode = getIonMode(this);\n      const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        const getChangedMonth = (parts) => {\n          const box = calendarBodyRef.getBoundingClientRect();\n          const root = this.el.shadowRoot;\n          /**\n           * Get the element that is in the center of the calendar body.\n           * This will be an element inside of the active month.\n           */\n          const elementAtCenter = root.elementFromPoint(box.x + box.width / 2, box.y + box.height / 2);\n          /**\n           * If there is no element then the\n           * component may be re-rendering on a slow device.\n           */\n          if (!elementAtCenter)\n            return;\n          const month = elementAtCenter.closest('.calendar-month');\n          if (!month)\n            return;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n          const monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2)\n            return;\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          }\n          else if (month === endMonth) {\n            return getNextMonth(parts);\n          }\n          else {\n            return;\n          }\n        };\n        const updateActiveMonth = () => {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n          const newDate = getChangedMonth(this.workingParts);\n          if (!newDate)\n            return;\n          const { month, day, year } = newDate;\n          if (isMonthDisabled({ month, year, day: null }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n        let scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n        let appliediOSRubberBandFix = false;\n        const scrollCallback = () => {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          }\n          // Wait ~3 frames\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n        this.destroyCalendarListener = () => {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyInteractionListeners = () => {\n      const { destroyCalendarListener, destroyKeyboardMO } = this;\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    this.processValue = (value) => {\n      const hasValue = !!value;\n      this.highlightActiveParts = hasValue;\n      let valueToProcess = parseDate(value || getToday());\n      const { minParts, maxParts, multiple } = this;\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        valueToProcess = valueToProcess[0];\n      }\n      /**\n       * Datetime should only warn of out of bounds values\n       * if set by the user. If the `value` is undefined,\n       * we will default to today's date which may be out\n       * of bounds. In this case, the warning makes it look\n       * like the developer did something wrong which is\n       * not true.\n       */\n      if (hasValue) {\n        warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      }\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n      const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n      const { month, day, year, hour, minute, tzOffset } = clampDate(singleValue, minParts, maxParts);\n      const ampm = parseAmPm(hour);\n      this.setWorkingParts({\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm,\n      });\n      if (Array.isArray(valueToProcess)) {\n        this.activeParts = [...valueToProcess];\n      }\n      else {\n        this.activeParts = {\n          month,\n          day,\n          year,\n          hour,\n          minute,\n          tzOffset,\n          ampm,\n        };\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null && this.value !== '';\n    };\n    this.nextMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth',\n      });\n    };\n    this.prevMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  activePartsChanged() {\n    this.activePartsClone = this.activeParts;\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  valueChanged() {\n    const { value, minParts, maxParts, workingParts, multiple } = this;\n    if (this.hasValue()) {\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        return; // setting this.value will trigger re-run of this function\n      }\n      /**\n       * Clones the value of the `activeParts` to the private clone, to update\n       * the date display on the current render cycle without causing another render.\n       *\n       * This allows us to update the current value's date/time display without\n       * refocusing or shifting the user's display (leaves the user in place).\n       */\n      const valueDateParts = parseDate(value);\n      if (valueDateParts) {\n        warnIfValueOutOfBounds(valueDateParts, minParts, maxParts);\n        if (Array.isArray(valueDateParts)) {\n          this.activePartsClone = [...valueDateParts];\n        }\n        else {\n          const { month, day, year, hour, minute } = valueDateParts;\n          const ampm = hour != null ? (hour >= 12 ? 'pm' : 'am') : undefined;\n          this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), { month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm });\n          /**\n           * The working parts am/pm value must be updated when the value changes, to\n           * ensure the time picker hour column values are generated correctly.\n           *\n           * Note that we don't need to do this if valueDateParts is an array, since\n           * multiple=\"true\" does not apply to time pickers.\n           */\n          this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm }));\n        }\n      }\n      else {\n        printIonWarning(`Unable to parse date string: ${value}. Please provide a valid ISO 8601 datetime string.`);\n      }\n    }\n    this.emitStyle();\n    this.ionChange.emit({ value });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  async confirm(closeOverlay = false) {\n    const { highlightActiveParts, isCalendarPicker, activeParts } = this;\n    /**\n     * We only update the value if the presentation is not a calendar picker,\n     * or if `highlightActiveParts` is true; indicating that the user\n     * has selected a date from the calendar picker.\n     *\n     * Otherwise \"today\" would accidentally be set as the value.\n     */\n    if (highlightActiveParts || !isCalendarPicker) {\n      const activePartsIsArray = Array.isArray(activeParts);\n      if (activePartsIsArray && activeParts.length === 0) {\n        this.value = undefined;\n      }\n      else {\n        /**\n         * Prevent convertDataToISO from doing any\n         * kind of transformation based on timezone\n         * This cancels out any change it attempts to make\n         *\n         * Important: Take the timezone offset based on\n         * the date that is currently selected, otherwise\n         * there can be 1 hr difference when dealing w/ DST\n         */\n        if (activePartsIsArray) {\n          const dates = convertDataToISO(activeParts).map((str) => new Date(str));\n          for (let i = 0; i < dates.length; i++) {\n            activeParts[i].tzOffset = dates[i].getTimezoneOffset() * -1;\n          }\n        }\n        else {\n          const date = new Date(convertDataToISO(activeParts));\n          activeParts.tzOffset = date.getTimezoneOffset() * -1;\n        }\n        this.value = convertDataToISO(activeParts);\n      }\n    }\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   */\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  async cancel(closeOverlay = false) {\n    this.ionCancel.emit();\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  get isCalendarPicker() {\n    const { presentation } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  initializeListeners() {\n    this.initializeCalendarListener();\n    this.initializeKeyboardListeners();\n  }\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = (entries) => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeListeners();\n      /**\n       * TODO: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01 });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(this.el));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    const hiddenCallback = (entries) => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyInteractionListeners();\n      /**\n       * When datetime is hidden, we need to make sure that\n       * the month/year picker is closed. Otherwise,\n       * it will be open when the datetime re-appears\n       * and the scroll area of the calendar grid will be 0.\n       * As a result, the wrong month will be shown.\n       */\n      this.showMonthAndYear = false;\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0 });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(this.el));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n    root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n  componentDidRender() {\n    const { presentation, prevPresentation, calendarBodyRef, minParts, preferWheel } = this;\n    /**\n     * TODO(FW-2165)\n     * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n     * When using `min`, we add `scroll-snap-align: none`\n     * to the disabled month so that users cannot scroll to it.\n     * This triggers a bug in WebKit where the scroll position is reset.\n     * Since the month change logic is handled by a scroll listener,\n     * this causes the month to change leading to `scroll-snap-align`\n     * changing again, thus changing the scroll position again and causing\n     * an infinite loop.\n     * This issue only applies to the calendar grid, so we can disable\n     * it if the calendar grid is not being used.\n     */\n    const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n    if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n      const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n      if (workingMonth) {\n        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n      }\n    }\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n    if (presentation === prevPresentation) {\n      return;\n    }\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    this.initializeListeners();\n    /**\n     * The month/year picker from the date interface\n     * should be closed as it is not available in non-date\n     * interfaces.\n     */\n    this.showMonthAndYear = false;\n    raf(() => {\n      this.ionRender.emit();\n    });\n  }\n  componentWillLoad() {\n    const { el, multiple, presentation, preferWheel } = this;\n    if (multiple) {\n      if (presentation !== 'date') {\n        printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n      }\n      if (preferWheel) {\n        printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    this.processMinParts();\n    this.processMaxParts();\n    this.processValue(this.value);\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  /**\n   * Universal render methods\n   * These are pieces of datetime that\n   * are rendered independently of presentation.\n   */\n  renderFooter() {\n    const { showDefaultButtons, showClearButton } = this;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.value = undefined;\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton,\n      } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true) }, this.cancelText)), h(\"div\", null, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick() }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true) }, this.doneText)))))))));\n  }\n  /**\n   * Wheel picker render methods\n   */\n  renderWheelPicker(forcePresentation = this.presentation) {\n    /**\n     * If presentation=\"time-date\" we switch the\n     * order of the render array here instead of\n     * manually reordering each date/time picker\n     * column with CSS. This allows for additional\n     * flexibility if we need to render subsets\n     * of the date/time data or do additional ordering\n     * within the child render functions.\n     */\n    const renderArray = forcePresentation === 'time-date'\n      ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)]\n      : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n    return h(\"ion-picker-internal\", null, renderArray);\n  }\n  renderDatePickerColumns(forcePresentation) {\n    return forcePresentation === 'date-time' || forcePresentation === 'time-date'\n      ? this.renderCombinedDatePickerColumn()\n      : this.renderIndividualDatePickerColumns(forcePresentation);\n  }\n  renderCombinedDatePickerColumn() {\n    const { activeParts, workingParts, locale, minParts, maxParts, todayParts, isDateEnabled } = this;\n    /**\n     * By default, generate a range of 3 months:\n     * Previous month, current month, and next month\n     */\n    const monthsToRender = generateMonths(workingParts);\n    /**\n     * generateMonths returns the day data as well,\n     * but we do not want the day value to act as a max/min\n     * on the data we are going to generate.\n     */\n    for (let i = 0; i <= monthsToRender.length - 1; i++) {\n      monthsToRender[i].day = null;\n    }\n    /**\n     * If developers have provided their own\n     * min/max values, use that instead. Otherwise,\n     * fallback to the default range of 3 months.\n     */\n    const min = minParts || monthsToRender[0];\n    const max = maxParts || monthsToRender[monthsToRender.length - 1];\n    const result = getCombinedDateColumnData(locale, workingParts, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n    let items = result.items;\n    const parts = result.parts;\n    if (isDateEnabled) {\n      items = items.map((itemObject, index) => {\n        const referenceParts = parts[index];\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, itemObject), { disabled });\n      });\n    }\n    /**\n     * If we have selected a day already, then default the column\n     * to that value. Otherwise, default it to today.\n     */\n    const todayString = workingParts.day\n      ? `${workingParts.year}-${workingParts.month}-${workingParts.day}`\n      : `${todayParts.year}-${todayParts.month}-${todayParts.day}`;\n    return (h(\"ion-picker-column-internal\", { class: \"date-column\", color: this.color, items: items, value: todayString, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        const { value } = ev.detail;\n        const findPart = parts.find(({ month, day, year }) => value === `${year}-${month}-${day}`);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), findPart));\n        }\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderIndividualDatePickerColumns(forcePresentation) {\n    const { workingParts, isDateEnabled } = this;\n    const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n    const months = shouldRenderMonths\n      ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues)\n      : [];\n    const shouldRenderDays = forcePresentation === 'date';\n    let days = shouldRenderDays\n      ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues)\n      : [];\n    if (isDateEnabled) {\n      days = days.map((dayObject) => {\n        const { value } = dayObject;\n        const valueNum = typeof value === 'string' ? parseInt(value) : value;\n        const referenceParts = {\n          month: workingParts.month,\n          day: valueNum,\n          year: workingParts.year,\n        };\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, dayObject), { disabled });\n      });\n    }\n    const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n    const years = shouldRenderYears\n      ? getYearColumnData(this.locale, this.todayParts, this.minParts, this.maxParts, this.parsedYearValues)\n      : [];\n    /**\n     * Certain locales show the day before the month.\n     */\n    const showMonthFirst = isMonthFirstLocale(this.locale, { month: 'numeric', day: 'numeric' });\n    let renderArray = [];\n    if (showMonthFirst) {\n      renderArray = [\n        this.renderMonthPickerColumn(months),\n        this.renderDayPickerColumn(days),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    else {\n      renderArray = [\n        this.renderDayPickerColumn(days),\n        this.renderMonthPickerColumn(months),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    return renderArray;\n  }\n  renderDayPickerColumn(days) {\n    var _a;\n    if (days.length === 0) {\n      return [];\n    }\n    const { activeParts, workingParts } = this;\n    return (h(\"ion-picker-column-internal\", { class: \"day-column\", color: this.color, items: days, value: (_a = (workingParts.day || this.todayParts.day)) !== null && _a !== void 0 ? _a : undefined, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { day: ev.detail.value }));\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), { day: ev.detail.value }));\n        }\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderMonthPickerColumn(months) {\n    if (months.length === 0) {\n      return [];\n    }\n    const { activeParts, workingParts } = this;\n    return (h(\"ion-picker-column-internal\", { class: \"month-column\", color: this.color, items: months, value: workingParts.month, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { month: ev.detail.value }));\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), { month: ev.detail.value }));\n        }\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderYearPickerColumn(years) {\n    if (years.length === 0) {\n      return [];\n    }\n    const { activeParts, workingParts } = this;\n    return (h(\"ion-picker-column-internal\", { class: \"year-column\", color: this.color, items: years, value: workingParts.year, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { year: ev.detail.value }));\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), { year: ev.detail.value }));\n        }\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderTimePickerColumns(forcePresentation) {\n    if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n      return [];\n    }\n    const { hoursData, minutesData, dayPeriodData } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, this.value ? this.minParts : undefined, this.value ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    return [\n      this.renderHourPickerColumn(hoursData),\n      this.renderMinutePickerColumn(minutesData),\n      this.renderDayPeriodPickerColumn(dayPeriodData),\n    ];\n  }\n  renderHourPickerColumn(hoursData) {\n    const { workingParts, activePartsClone } = this;\n    if (hoursData.length === 0)\n      return [];\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePartsClone.hour, items: hoursData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n        if (!Array.isArray(activePartsClone)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { hour: ev.detail.value }));\n        }\n        ev.stopPropagation();\n      } }));\n  }\n  renderMinutePickerColumn(minutesData) {\n    const { workingParts, activePartsClone } = this;\n    if (minutesData.length === 0)\n      return [];\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePartsClone.minute, items: minutesData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n        if (!Array.isArray(activePartsClone)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { minute: ev.detail.value }));\n        }\n        ev.stopPropagation();\n      } }));\n  }\n  renderDayPeriodPickerColumn(dayPeriodData) {\n    const { workingParts, activePartsClone } = this;\n    if (dayPeriodData.length === 0) {\n      return [];\n    }\n    const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n    return (h(\"ion-picker-column-internal\", { style: isDayPeriodRTL ? { order: '-1' } : {}, color: this.color, value: activePartsClone.ampm, items: dayPeriodData, onIonChange: (ev) => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n        if (!Array.isArray(activePartsClone)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { ampm: ev.detail.value, hour }));\n        }\n        ev.stopPropagation();\n      } }));\n  }\n  renderWheelView(forcePresentation) {\n    const { locale } = this;\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return (h(\"div\", { class: {\n        [`wheel-order-${columnOrder}`]: true,\n      } }, this.renderWheelPicker(forcePresentation)));\n  }\n  /**\n   * Grid Render Methods\n   */\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n    return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"ion-item\", { button: true, detail: false, lines: \"none\", onClick: () => this.toggleMonthAndYearView() }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), ' ', h(\"ion-icon\", { icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false })))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { \"aria-label\": \"previous month\", disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { \"aria-label\": \"next month\", disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n      return h(\"div\", { class: \"day-of-week\" }, d);\n    }))));\n  }\n  renderMonth(month, year) {\n    const { highlightActiveParts } = this;\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const swipeDisabled = isMonthDisabled({\n      month,\n      year,\n      day: null,\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n    });\n    // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    return (h(\"div\", { class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n      } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const { day, dayOfWeek } = dateObject;\n      const { isDateEnabled, multiple } = this;\n      const referenceParts = { month, day, year };\n      const { isActive, isToday, ariaLabel, ariaSelected, disabled, text } = getCalendarDayState(this.locale, referenceParts, this.activePartsClone, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      let isCalDayDisabled = isCalMonthDisabled || disabled;\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n      }\n      return (h(\"button\", { tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isCalDayDisabled, class: {\n          'calendar-day-padding': day === null,\n          'calendar-day': true,\n          'calendar-day-active': isActive && highlightActiveParts,\n          'calendar-day-today': isToday,\n        }, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n          if (day === null) {\n            return;\n          }\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n            day,\n            year }));\n          // multiple only needs date info, so we can wipe out other fields like time\n          if (multiple) {\n            this.setActiveParts({\n              month,\n              day,\n              year,\n            }, isActive && highlightActiveParts);\n          }\n          else {\n            this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { month,\n              day,\n              year }));\n          }\n        } }, text));\n    }))));\n  }\n  renderCalendarBody() {\n    return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts).map(({ month, year }) => {\n      return this.renderMonth(month, year);\n    })));\n  }\n  renderCalendar(mode) {\n    return (h(\"div\", { class: \"datetime-calendar\", key: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return h(\"slot\", { name: \"time-label\" }, \"Time\");\n  }\n  renderTimeOverlay() {\n    const use24Hour = is24Hour(this.locale, this.hourCycle);\n    return [\n      h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n      h(\"button\", { class: {\n          'time-body': true,\n          'time-body-active': this.isTimePopoverOpen,\n        }, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", onClick: async (ev) => {\n          const { popoverRef } = this;\n          if (popoverRef) {\n            this.isTimePopoverOpen = true;\n            popoverRef.present(new CustomEvent('ionShadowTarget', {\n              detail: {\n                ionShadowTarget: ev.target,\n              },\n            }));\n            await popoverRef.onWillDismiss();\n            this.isTimePopoverOpen = false;\n          }\n        } }, getLocalizedTime(this.locale, this.activePartsClone, use24Hour)),\n      h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n          /**\n           * Intersection Observers do not consistently fire between Blink and Webkit\n           * when toggling the visibility of the popover and trying to scroll the picker\n           * column to the correct time value.\n           *\n           * This will correctly scroll the element position to the correct time value,\n           * before the popover is fully presented.\n           */\n          const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n          // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n          cols.forEach((col) => col.scrollActiveItemIntoView());\n        }, style: {\n          '--offset-y': '-10px',\n          '--min-width': 'fit-content',\n        },\n        // Allow native browser keyboard events to support up/down/home/end key\n        // navigation within the time picker.\n        keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderWheelPicker('time')),\n    ];\n  }\n  renderCalendarViewHeader(mode) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), mode === 'md' && !this.multiple && (h(\"div\", { class: \"datetime-selected-date\" }, getMonthAndDay(this.locale, this.activeParts)))));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const { presentation } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay()));\n  }\n  /**\n   * Renders the month/year picker that is\n   * displayed on the calendar grid.\n   * The .datetime-year class has additional\n   * styles that let us show/hide the\n   * picker when the user clicks on the\n   * toggle in the calendar header.\n   */\n  renderCalendarViewMonthYearPicker() {\n    return h(\"div\", { class: \"datetime-year\" }, this.renderWheelView('month-year'));\n  }\n  /**\n   * Render entry point\n   * All presentation types are rendered from here.\n   */\n  renderDatetime(mode) {\n    const { presentation, preferWheel } = this;\n    /**\n     * Certain presentation types have separate grid and wheel displays.\n     * If preferWheel is true then we should show a wheel picker instead.\n     */\n    const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    if (preferWheel && hasWheelVariant) {\n      return [this.renderWheelView(), this.renderFooter()];\n    }\n    switch (presentation) {\n      case 'date-time':\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderTime(),\n          this.renderFooter(),\n        ];\n      case 'time-date':\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderTime(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n      case 'time':\n        return [this.renderTime(), this.renderFooter()];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderWheelView(), this.renderFooter()];\n      default:\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n    }\n  }\n  render() {\n    const { name, value, disabled, el, color, isPresented, readonly, showMonthAndYear, preferWheel, presentation, size, } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    const hasWheelVariant = hasDatePresentation && preferWheel;\n    const hasGrid = hasDatePresentation && !preferWheel;\n    renderHiddenInput(true, el, name, formatValue(value), disabled);\n    return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-presented']: isPresented,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n        [`datetime-prefer-wheel`]: hasWheelVariant,\n        [`datetime-grid`]: hasGrid,\n      })) }, this.renderDatetime(mode)));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"],\n    \"min\": [\"minChanged\"],\n    \"max\": [\"maxChanged\"],\n    \"yearValues\": [\"yearValuesChanged\"],\n    \"monthValues\": [\"monthValuesChanged\"],\n    \"dayValues\": [\"dayValuesChanged\"],\n    \"hourValues\": [\"hourValuesChanged\"],\n    \"minuteValues\": [\"minuteValuesChanged\"],\n    \"activeParts\": [\"activePartsChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n  static get style() { return {\n    ios: datetimeIosCss,\n    md: datetimeMdCss\n  }; }\n}, [33, \"ion-datetime\", {\n    \"color\": [1],\n    \"name\": [1],\n    \"disabled\": [4],\n    \"readonly\": [4],\n    \"isDateEnabled\": [16],\n    \"min\": [1025],\n    \"max\": [1025],\n    \"presentation\": [1],\n    \"cancelText\": [1, \"cancel-text\"],\n    \"doneText\": [1, \"done-text\"],\n    \"clearText\": [1, \"clear-text\"],\n    \"yearValues\": [8, \"year-values\"],\n    \"monthValues\": [8, \"month-values\"],\n    \"dayValues\": [8, \"day-values\"],\n    \"hourValues\": [8, \"hour-values\"],\n    \"minuteValues\": [8, \"minute-values\"],\n    \"locale\": [1],\n    \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n    \"multiple\": [4],\n    \"value\": [1025],\n    \"showDefaultTitle\": [4, \"show-default-title\"],\n    \"showDefaultButtons\": [4, \"show-default-buttons\"],\n    \"showClearButton\": [4, \"show-clear-button\"],\n    \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n    \"hourCycle\": [1, \"hour-cycle\"],\n    \"size\": [1],\n    \"preferWheel\": [4, \"prefer-wheel\"],\n    \"showMonthAndYear\": [32],\n    \"activeParts\": [32],\n    \"workingParts\": [32],\n    \"isPresented\": [32],\n    \"isTimePopoverOpen\": [32],\n    \"confirm\": [64],\n    \"reset\": [64],\n    \"cancel\": [64]\n  }]);\nlet datetimeIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-datetime\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Datetime);\n      }\n      break;\n    case \"ion-backdrop\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$c();\n      }\n      break;\n    case \"ion-button\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$b();\n      }\n      break;\n    case \"ion-buttons\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$a();\n      }\n      break;\n    case \"ion-icon\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$9();\n      }\n      break;\n    case \"ion-item\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$8();\n      }\n      break;\n    case \"ion-label\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$7();\n      }\n      break;\n    case \"ion-note\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$6();\n      }\n      break;\n    case \"ion-picker-column-internal\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$5();\n      }\n      break;\n    case \"ion-picker-internal\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$4();\n      }\n      break;\n    case \"ion-popover\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$3();\n      }\n      break;\n    case \"ion-ripple-effect\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$2();\n      }\n      break;\n  } });\n}\n\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonDatetime, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}