{"ast":null,"code":"var _jsxFileName = \"/home/shama/webapps/ionicblog/src/components/user/blog/Uquiz.tsx\",\n    _s = $RefreshSig$();\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect } from 'react';\nimport baseUrl, { api } from '../../../pages/Urls';\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Uquiz = () => {\n  _s();\n\n  const [quiz, setQuiz] = useState([]);\n  const [quiz_name, setQuiz_name] = useState('');\n  const [quiz_id, setQuiz_id] = useState('');\n  const [level_name, setLevel_name] = useState('');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(1);\n  const history = useHistory();\n  useEffect(() => {\n    fetch(`${baseUrl}${api.quiz}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(resp => resp.json()).then(resp => {\n      setQuiz(resp.reverse());\n    });\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - quiz.length) : 0;\n\n  const showQuiz = id => {\n    history.push(\"/dashboard/quizlevel\");\n    fetch(`${baseUrl}${api.editQuiz}${id}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(res => res.json()).then(result => {\n      setQuiz_name(result.quiz_name);\n      setLevel_name(result.level_name);\n      setQuiz_id(result.quiz_id);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: '100%',\n          mb: 2,\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: (rowsPerPage > 0 ? quiz.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : quiz).map((item, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"text-primary\",\n                      onClick: e => showQuiz(item.id),\n                      children: item.quiz_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 41\n                }, this)\n              }, i.toString(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [1, 2, 7],\n          component: \"div\",\n          count: quiz.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Uquiz, \"oBfQogOp8ZxWiEhk0iv5MvW0aOI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Uquiz;\nexport default Uquiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uquiz\");","map":{"version":3,"names":["Table","TableBody","TableCell","TableContainer","TableRow","Paper","TablePagination","React","useState","useEffect","baseUrl","api","useHistory","Uquiz","quiz","setQuiz","quiz_name","setQuiz_name","quiz_id","setQuiz_id","level_name","setLevel_name","page","setPage","rowsPerPage","setRowsPerPage","history","fetch","method","headers","Accept","localStorage","getItem","then","resp","json","reverse","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","emptyRows","Math","max","length","showQuiz","id","push","editQuiz","res","result","catch","error","console","log","width","mb","mt","slice","map","item","i","e","toString"],"sources":["/home/shama/webapps/ionicblog/src/components/user/blog/Uquiz.tsx"],"sourcesContent":["import {\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonContent,\n    IonItem,\n    IonButtons,\n    IonButton,\n    IonCardContent,\n    IonModal,\n    IonNavLink,\n    IonRouterLink,\n\n} from '@ionic/react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect } from 'react';\nimport baseUrl, { api } from '../../../pages/Urls';\nimport UquizLevel from './UquizLvel';\nimport { useHistory } from \"react-router\";\nconst Uquiz: React.FC = () => {\n\n    const [quiz, setQuiz] = useState([]);\n    const [quiz_name, setQuiz_name] = useState('');\n    const [quiz_id, setQuiz_id] = useState('');\n    const [level_name, setLevel_name] = useState('');\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(1);\n    const history = useHistory();\n    useEffect(() => {\n        fetch(`${baseUrl}${api.quiz}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => {\n                setQuiz(resp.reverse())\n            })\n    }, [])\n\n    const handleChangePage = (event: any, newPage: any) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: any) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - quiz.length) : 0;\n\n    const showQuiz = (id: any) => {\n        history.push(\"/dashboard/quizlevel\");\n        fetch(`${baseUrl}${api.editQuiz}${id}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n            },\n        })\n            .then(res => res.json())\n            .then(result => {\n                setQuiz_name(result.quiz_name);\n                setLevel_name(result.level_name);\n                setQuiz_id(result.quiz_id);\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    };\n    return (\n        <>\n            <div className=\"container mt-3\">\n                <h2>Quiz List</h2>\n                <hr />\n\n                <Paper sx={{ width: '100%', mb: 2, mt: 3 }}>\n\n                    <TableContainer>\n                        <Table aria-label=\"simple table\">\n\n                            <TableBody>\n                                {(rowsPerPage > 0\n                                    ? quiz.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    : quiz\n                                ).map((item: any, i: any) => (\n                                    <TableRow key={i.toString()}>\n                                        <TableCell >\n                                            <div>\n\n                                                <h4 className=\"text-primary\" onClick={(e) => showQuiz(item.id)}>{item.quiz_name}</h4>\n\n                                            </div>\n\n                                        </TableCell>\n\n\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[1, 2, 7]}\n                        component=\"div\"\n                        count={quiz.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n\n                </Paper>\n            </div>\n        </>\n\n    );\n}\nexport default Uquiz;"],"mappings":"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"},"metadata":{},"sourceType":"module"}