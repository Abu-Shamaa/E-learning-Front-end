{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization'; // Translation map for Clock Label\n\nvar timeViews = {\n  hours: 'часы',\n  minutes: 'минуты',\n  seconds: 'секунды'\n}; // maps PickersToolbar[\"viewType\"] to its translation\n\nvar viewTypes = {\n  calendar: 'календарный',\n  clock: 'часовой'\n};\nvar ruRUPickers = {\n  // Calendar navigation\n  previousMonth: 'Предыдущий месяц',\n  nextMonth: 'Следующий месяц',\n  // View navigation\n  openPreviousView: 'открыть предыдущий вид',\n  openNextView: 'открыть следующий вид',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'открыт годовой вид, переключить на календарный вид' : 'открыт календарный вид, переключить на годовой вид';\n  },\n  inputModeToggleButtonAriaLabel: function inputModeToggleButtonAriaLabel(isKeyboardInputOpen, viewType) {\n    return isKeyboardInputOpen ? \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442 \\u0442\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0432\\u0438\\u0434, \\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \".concat(viewTypes[viewType], \" \\u0432\\u0438\\u0434\") : \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442 \".concat(viewTypes[viewType], \" \\u0432\\u0438\\u0434, \\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0442\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0432\\u0438\\u0434\");\n  },\n  // DateRange placeholders\n  start: 'Начало',\n  end: 'Конец',\n  // Action bar\n  cancelButtonLabel: 'Отмена',\n  clearButtonLabel: 'Очистить',\n  okButtonLabel: 'Ок',\n  todayButtonLabel: 'Сегодня',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Выбрать дату',\n  dateTimePickerDefaultToolbarTitle: 'Выбрать дату и время',\n  timePickerDefaultToolbarTitle: 'Выбрать время',\n  dateRangePickerDefaultToolbarTitle: 'Выбрать период',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \".concat(timeViews[view], \". \").concat(time === null ? 'Время не выбрано' : \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043E \\u0432\\u0440\\u0435\\u043C\\u044F \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" \\u0447\\u0430\\u0441\\u043E\\u0432\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" \\u043C\\u0438\\u043D\\u0443\\u0442\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \" \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434\");\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(value, utils) {\n    return value !== null && utils.isValid(value) ? \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443, \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u0430 \\u0434\\u0430\\u0442\\u0430 \".concat(utils.format(value, 'fullDate')) : 'Выберите дату';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(value, utils) {\n    return value !== null && utils.isValid(value) ? \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F, \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043E \\u0432\\u0440\\u0435\\u043C\\u044F \".concat(utils.format(value, 'fullTime')) : 'Выберите время';\n  },\n  // Table labels\n  timeTableLabel: 'выбрать время',\n  dateTableLabel: 'выбрать дату'\n};\nexport var ruRU = getPickersLocalization(ruRUPickers);","map":{"version":3,"names":["getPickersLocalization","timeViews","hours","minutes","seconds","viewTypes","calendar","clock","ruRUPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","inputModeToggleButtonAriaLabel","isKeyboardInputOpen","viewType","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerDefaultToolbarTitle","dateTimePickerDefaultToolbarTitle","timePickerDefaultToolbarTitle","dateRangePickerDefaultToolbarTitle","clockLabelText","time","adapter","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","openDatePickerDialogue","value","utils","isValid","openTimePickerDialogue","timeTableLabel","dateTableLabel","ruRU"],"sources":["/mnt/disk2/ionicapps/elearn/node_modules/@mui/x-date-pickers/locales/ruRU.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization'; // Translation map for Clock Label\n\nconst timeViews = {\n  hours: 'часы',\n  minutes: 'минуты',\n  seconds: 'секунды'\n}; // maps PickersToolbar[\"viewType\"] to its translation\n\nconst viewTypes = {\n  calendar: 'календарный',\n  clock: 'часовой'\n};\nconst ruRUPickers = {\n  // Calendar navigation\n  previousMonth: 'Предыдущий месяц',\n  nextMonth: 'Следующий месяц',\n  // View navigation\n  openPreviousView: 'открыть предыдущий вид',\n  openNextView: 'открыть следующий вид',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'открыт годовой вид, переключить на календарный вид' : 'открыт календарный вид, переключить на годовой вид',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `Открыт текстовый вид, перейти на ${viewTypes[viewType]} вид` : `Открыт ${viewTypes[viewType]} вид, перейти на текстовый вид`,\n  // DateRange placeholders\n  start: 'Начало',\n  end: 'Конец',\n  // Action bar\n  cancelButtonLabel: 'Отмена',\n  clearButtonLabel: 'Очистить',\n  okButtonLabel: 'Ок',\n  todayButtonLabel: 'Сегодня',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Выбрать дату',\n  dateTimePickerDefaultToolbarTitle: 'Выбрать дату и время',\n  timePickerDefaultToolbarTitle: 'Выбрать время',\n  dateRangePickerDefaultToolbarTitle: 'Выбрать период',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Выбрать ${timeViews[view]}. ${time === null ? 'Время не выбрано' : `Выбрано время ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} часов`,\n  minutesClockNumberText: minutes => `${minutes} минут`,\n  secondsClockNumberText: seconds => `${seconds} секунд`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Выберите дату, выбрана дата ${utils.format(value, 'fullDate')}` : 'Выберите дату',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Выберите время, выбрано время ${utils.format(value, 'fullTime')}` : 'Выберите время',\n  // Table labels\n  timeTableLabel: 'выбрать время',\n  dateTableLabel: 'выбрать дату'\n};\nexport const ruRU = getPickersLocalization(ruRUPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC,C,CAAyE;;AAEzE,IAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,MADS;EAEhBC,OAAO,EAAE,QAFO;EAGhBC,OAAO,EAAE;AAHO,CAAlB,C,CAIG;;AAEH,IAAMC,SAAS,GAAG;EAChBC,QAAQ,EAAE,aADM;EAEhBC,KAAK,EAAE;AAFS,CAAlB;AAIA,IAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,kBAFG;EAGlBC,SAAS,EAAE,iBAHO;EAIlB;EACAC,gBAAgB,EAAE,wBALA;EAMlBC,YAAY,EAAE,uBANI;EAOlBC,oCAAoC,EAAE,8CAAAC,IAAI;IAAA,OAAIA,IAAI,KAAK,MAAT,GAAkB,oDAAlB,GAAyE,oDAA7E;EAAA,CAPxB;EAQlBC,8BAA8B,EAAE,wCAACC,mBAAD,EAAsBC,QAAtB;IAAA,OAAmCD,mBAAmB,qLAAuCX,SAAS,CAACY,QAAD,CAAhD,0EAA6EZ,SAAS,CAACY,QAAD,CAAtF,2JAAtD;EAAA,CARd;EASlB;EACAC,KAAK,EAAE,QAVW;EAWlBC,GAAG,EAAE,OAXa;EAYlB;EACAC,iBAAiB,EAAE,QAbD;EAclBC,gBAAgB,EAAE,UAdA;EAelBC,aAAa,EAAE,IAfG;EAgBlBC,gBAAgB,EAAE,SAhBA;EAiBlB;EACAC,6BAA6B,EAAE,cAlBb;EAmBlBC,iCAAiC,EAAE,sBAnBjB;EAoBlBC,6BAA6B,EAAE,eApBb;EAqBlBC,kCAAkC,EAAE,gBArBlB;EAsBlB;EACAC,cAAc,EAAE,wBAACd,IAAD,EAAOe,IAAP,EAAaC,OAAb;IAAA,4DAAoC7B,SAAS,CAACa,IAAD,CAA7C,eAAwDe,IAAI,KAAK,IAAT,GAAgB,kBAAhB,uFAAsDC,OAAO,CAACC,MAAR,CAAeF,IAAf,EAAqB,UAArB,CAAtD,CAAxD;EAAA,CAvBE;EAwBlBG,oBAAoB,EAAE,8BAAA9B,KAAK;IAAA,iBAAOA,KAAP;EAAA,CAxBT;EAyBlB+B,sBAAsB,EAAE,gCAAA9B,OAAO;IAAA,iBAAOA,OAAP;EAAA,CAzBb;EA0BlB+B,sBAAsB,EAAE,gCAAA9B,OAAO;IAAA,iBAAOA,OAAP;EAAA,CA1Bb;EA2BlB;EACA+B,sBAAsB,EAAE,gCAACC,KAAD,EAAQC,KAAR;IAAA,OAAkBD,KAAK,KAAK,IAAV,IAAkBC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAlB,4JAAwEC,KAAK,CAACN,MAAN,CAAaK,KAAb,EAAoB,UAApB,CAAxE,IAA4G,eAA9H;EAAA,CA5BN;EA6BlBG,sBAAsB,EAAE,gCAACH,KAAD,EAAQC,KAAR;IAAA,OAAkBD,KAAK,KAAK,IAAV,IAAkBC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAlB,wKAA0EC,KAAK,CAACN,MAAN,CAAaK,KAAb,EAAoB,UAApB,CAA1E,IAA8G,gBAAhI;EAAA,CA7BN;EA8BlB;EACAI,cAAc,EAAE,eA/BE;EAgClBC,cAAc,EAAE;AAhCE,CAApB;AAkCA,OAAO,IAAMC,IAAI,GAAG1C,sBAAsB,CAACQ,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}