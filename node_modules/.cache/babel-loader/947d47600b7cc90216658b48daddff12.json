{"ast":null,"code":"var _jsxFileName = \"/home/shama/webapps/ionicblog/src/pages/user/ucourse/QuizQuestion.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { IonContent, IonItem, IonButton, IonCardContent, IonCard, IonCardHeader, IonCardTitle, IonLabel, IonList, IonRadio, IonRadioGroup, IonInput } from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport baseUrl, { api } from '../../Urls';\nimport '../../../pages/Style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst useCountdown = deadline => {\n  _s();\n\n  // Time is in seconds\n  const [time, setTime] = useState(Math.max(0, Math.floor((deadline.getTime() - Date.now()) / 1000)));\n\n  const decrement = () => setTime(prevTime => {\n    return prevTime === 0 ? 0 : prevTime - 1;\n  });\n\n  useEffect(() => {\n    const ids = setInterval(decrement, 1000); //console.log(time)\n    // const ids = setInterval(() => {\n    //     decrement()\n    //     if (time == 0) {\n    //         submit()\n    //     }\n    // }, 1000);\n\n    return () => clearInterval(ids);\n  }, []);\n\n  const format = num => {\n    return num < 10 ? '0' + num : num.toString();\n  };\n\n  return {\n    //days: format(Math.floor(time / (3600 * 24))),\n    hours: format(Math.floor(time / 3600 % 24)),\n    minutes: format(Math.floor(time / 60 % 60)),\n    seconds: format(time % 60)\n  };\n};\n\n_s(useCountdown, \"Dv/bKuRD4Z/f7cu4v2rBgyTcrkI=\");\n\nconst QuizQuestion = props => {\n  _s2();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [question, setQuestion] = useState([]);\n  const [isAns, setIsAns] = useState([]);\n  const [test_end, setTest_end] = useState(format(new Date(), 'yyyy-MM-dd HH:mm:ss'));\n  const [test_start, setTest_start] = useState('');\n  const [quizId, setQuizId] = useState('');\n  const [isAttempt, setIsAttempt] = useState(''); // const [pageNumber, setPageNumber] = useState(0);\n  // const questionPerPage = 3;\n  // const pagesVisited = pageNumber * questionPerPage;\n  // const pageCount = Math.ceil(question.length / questionPerPage);\n  // useEffect(() => {\n  //     return history.listen(() => { // listen\n  //         if (history.action === \"POP\") {\n  //             history.replace(`/dashboard/mycourse/${props.courseId}/quiz/${localStorage.getItem(\"quiz_id\")}`);\n  //         }\n  //     });\n  // }, [history]);\n  ////\n\n  useEffect(() => {\n    setTest_start(format(new Date(), 'yyyy-MM-dd HH:mm:ss'));\n    fetch(`${baseUrl}${api.viewQuiz}${id}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(resp => resp.json()).then(result => {\n      setQuestion(result.question);\n      setTest_end(result.question[0].test_end);\n      setQuizId(result.question.map(item => item.quiz_id));\n      setIsAttempt(result.quiz.map(item => item.is_attempt)); //localStorage.setItem('quiz_id', result.question[0].quiz_id)\n      //localStorage.setItem('test_end', result.question[0].test_end)\n      //history.replace(`/dashboard/mycourse/${props.courseId}/quiz/${localStorage.getItem(\"quiz_id\")}`)\n    });\n  }, []); //console.log(question)\n\n  let attempt = {};\n  question.map((q, i) => {\n    attempt = { ...attempt,\n      [q.id]: isAns[i]\n    };\n  });\n\n  const handleChange = (e, i) => {\n    const inputdata = [...isAns];\n    inputdata[i] = e.target.value;\n    setIsAns(inputdata); //console.log(inputdata)\n  };\n\n  const submit = () => {\n    let data = {\n      'attemptans': attempt,\n      'quiz_id': quizId\n    };\n    fetch(`${baseUrl}${api.quizAttempt}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      if (response.status === 200) {\n        window.confirm('Want to enrole this course?');\n        window.location.href = `/dashboard/mycourse/${props.courseId}/quiz/result`;\n      } else {\n        throw Error([response.status, response.statusText].join(' '));\n      }\n    }).catch(error => console.log('error', error));\n  }; // const changePage = ({ selected: selectedPage }: any) => {\n  //     setPageNumber(selectedPage);\n  // };\n  ///////////////////////////\n  // useEffect(() => {\n  //     const tm1 = new Date(test_end).getTime();\n  //     const tm2 = new Date(test_start).getTime();\n  //     const ddd = tm1 - tm2;\n  //     console.log(ddd)\n  // }, [test_end, test_start]);\n  ///////////////////////////////////\n\n\n  const st = format(new Date(), 'yyyy-MM-dd HH:mm:ss');\n  const etm = localStorage.getItem(\"test_end\");\n  const et = format(new Date(etm), 'yyyy-MM-dd HH:mm:ss');\n  const end = new Date(et).getTime();\n  const start = new Date(st).getTime();\n  const ddd = end - start; // console.log('ts', start)\n  // console.log('te', end)\n  // console.log('ddd', ddd)\n  //console.log(typeof (test_start))\n  //console.log(question)\n\n  const [deadline] = useState(new Date(Date.now() + ddd)); ////////////////////////////////////////////////////////////////////////////\n  // const [deadline, setDdeadline] = useState(new Date(Date.now()));\n  // useEffect(() => {\n  //     const tm1 = new Date(test_end).getTime();\n  //     const tm2 = new Date(test_start).getTime();\n  //     const ddd = tm1 - tm2;\n  //     setDdeadline(new Date(Date.now() + ddd))\n  // }, [test_end, test_start])\n  // console.log('dead', deadline)\n  //const [deadline] = useState(new Date(Date.now() + 12022));\n  ///////////////////////////////////////////////////////////////////////////////\n\n  const timer = useCountdown(deadline); // useEffect(() => {\n  //     if (time===0) {\n  //         submit()\n  //     }\n  // }, [time]);\n  //console.log('timer', timer)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IonContent, {\n      children: isAttempt != '1' ? /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n          children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-3\",\n              children: [\"Total Question -- \", question.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-3 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-alarm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 72\n              }, this), \" \", timer.hours, \":\", timer.minutes, \":\", timer.seconds]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: [question.map((qstn, i) => /*#__PURE__*/_jsxDEV(IonCard, {\n            children: /*#__PURE__*/_jsxDEV(IonCardHeader, {\n              children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: [i + 1, \" / \", question.length, \" -- \", qstn.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  dangerouslySetInnerHTML: {\n                    __html: qstn.q_content\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: qstn.question_type != 'MCQ' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(IonItem, {\n                      children: /*#__PURE__*/_jsxDEV(IonInput, {\n                        name: \"attemptans\",\n                        value: isAns[i],\n                        placeholder: \"enter answer\",\n                        onIonChange: e => handleChange(e, i)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 264,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(IonList, {\n                      children: /*#__PURE__*/_jsxDEV(IonRadioGroup, {\n                        name: \"attemptans\" //selected={isAns[pagesVisited + i]}\n                        ,\n                        value: isAns[i],\n                        onIonChange: e => handleChange(e, i),\n                        children: qstn.option.map((op, index) => {\n                          //console.log(isAns[pagesVisited + i])\n                          return /*#__PURE__*/_jsxDEV(IonItem, {\n                            children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                              children: op.option\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 285,\n                              columnNumber: 85\n                            }, this), /*#__PURE__*/_jsxDEV(IonRadio, {\n                              slot: \"start\",\n                              value: op.option\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 286,\n                              columnNumber: 85\n                            }, this)]\n                          }, index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 284,\n                            columnNumber: 81\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 276,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false)\n                }, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 41\n            }, this)\n          }, i.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 37\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-3 mb-5\",\n            children: /*#__PURE__*/_jsxDEV(IonButton, {\n              id: \"quiz_submit\",\n              fill: \"outline\",\n              onClick: submit,\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n          children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-3 mb-5\",\n              children: \"You Already Finished your Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-3 mb-5\",\n            children: /*#__PURE__*/_jsxDEV(IonButton, {\n              fill: \"outline\",\n              href: `/dashboard/mycourse/${props.courseId}`,\n              children: \"Back to Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(QuizQuestion, \"dnVVEknJoqmiwLl7ziDifZZOCjw=\", false, function () {\n  return [useParams, useHistory, useCountdown];\n});\n\n_c = QuizQuestion;\nexport default QuizQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizQuestion\");","map":{"version":3,"names":["IonContent","IonItem","IonButton","IonCardContent","IonCard","IonCardHeader","IonCardTitle","IonLabel","IonList","IonRadio","IonRadioGroup","IonInput","React","useState","useEffect","useHistory","useParams","format","baseUrl","api","useCountdown","deadline","time","setTime","Math","max","floor","getTime","Date","now","decrement","prevTime","ids","setInterval","clearInterval","num","toString","hours","minutes","seconds","QuizQuestion","props","id","history","question","setQuestion","isAns","setIsAns","test_end","setTest_end","test_start","setTest_start","quizId","setQuizId","isAttempt","setIsAttempt","fetch","viewQuiz","method","headers","Accept","localStorage","getItem","then","resp","json","result","map","item","quiz_id","quiz","is_attempt","attempt","q","i","handleChange","e","inputdata","target","value","submit","data","quizAttempt","body","JSON","stringify","response","status","window","confirm","location","href","courseId","Error","statusText","join","catch","error","console","log","st","etm","et","end","start","ddd","timer","length","qstn","title","__html","q_content","question_type","option","op","index"],"sources":["/home/shama/webapps/ionicblog/src/pages/user/ucourse/QuizQuestion.tsx"],"sourcesContent":["import {\n    IonContent,\n    IonItem,\n    IonButton,\n    IonCardContent,\n    IonCard,\n    IonCardHeader,\n    IonCardTitle,\n    IonLabel, IonList, IonRadio, IonRadioGroup, IonInput, IonCheckbox\n} from '@ionic/react';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport { format } from 'date-fns'\nimport Countdown from \"react-countdown\";\nimport baseUrl, { api } from '../../Urls';\nimport '../../../pages/Style.css';\nimport ReactPaginate from \"react-paginate\";\nconst useCountdown = (deadline: Date) => {\n    // Time is in seconds\n    const [time, setTime] = useState(\n        Math.max(0, Math.floor((deadline.getTime() - Date.now()) / 1000))\n    );\n\n    const decrement = () =>\n        setTime((prevTime) => {\n            return prevTime === 0 ? 0 : prevTime - 1;\n        });\n\n    useEffect(() => {\n        const ids = setInterval(decrement, 1000);\n        //console.log(time)\n        // const ids = setInterval(() => {\n        //     decrement()\n        //     if (time == 0) {\n        //         submit()\n        //     }\n\n        // }, 1000);\n        return () => clearInterval(ids);\n    }, []);\n\n    const format = (num: number): string => {\n        return num < 10 ? '0' + num : num.toString();\n    };\n\n    return {\n        //days: format(Math.floor(time / (3600 * 24))),\n        hours: format(Math.floor((time / 3600) % 24)),\n        minutes: format(Math.floor((time / 60) % 60)),\n        seconds: format(time % 60),\n    };\n};\n\nconst QuizQuestion: React.FC<{\n    courseId: string,\n\n}> = (props) => {\n    type QuizQuestion = {\n        id: string;\n    };\n    const { id } = useParams<QuizQuestion>();\n    const history = useHistory();\n    const [question, setQuestion] = useState([]);\n    const [isAns, setIsAns]: any[] = useState([]);\n    const [test_end, setTest_end] = useState(format(new Date(), 'yyyy-MM-dd HH:mm:ss'));\n    const [test_start, setTest_start] = useState('');\n    const [quizId, setQuizId] = useState('');\n    const [isAttempt, setIsAttempt] = useState('');\n\n\n    // const [pageNumber, setPageNumber] = useState(0);\n    // const questionPerPage = 3;\n    // const pagesVisited = pageNumber * questionPerPage;\n    // const pageCount = Math.ceil(question.length / questionPerPage);\n\n\n    // useEffect(() => {\n    //     return history.listen(() => { // listen\n    //         if (history.action === \"POP\") {\n    //             history.replace(`/dashboard/mycourse/${props.courseId}/quiz/${localStorage.getItem(\"quiz_id\")}`);\n    //         }\n    //     });\n    // }, [history]);\n\n\n    ////\n\n    useEffect(() => {\n        setTest_start(format(new Date(), 'yyyy-MM-dd HH:mm:ss'))\n\n        fetch(`${baseUrl}${api.viewQuiz}${id}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\n            }\n        })\n            .then(resp => resp.json())\n            .then(result => {\n                setQuestion(result.question)\n                setTest_end(result.question[0].test_end)\n                setQuizId(result.question.map((item: any) => (item.quiz_id)))\n                setIsAttempt(result.quiz.map((item: any) => (item.is_attempt)))\n                //localStorage.setItem('quiz_id', result.question[0].quiz_id)\n                //localStorage.setItem('test_end', result.question[0].test_end)\n                //history.replace(`/dashboard/mycourse/${props.courseId}/quiz/${localStorage.getItem(\"quiz_id\")}`)\n            })\n\n\n    }, []);\n\n    //console.log(question)\n    let attempt = {};\n    question.map((q: any, i) => {\n        attempt = { ...attempt, [q.id]: isAns[i] }\n    })\n    const handleChange = (e: any, i: any) => {\n        const inputdata = [...isAns]\n\n        inputdata[i] = e.target.value;\n        setIsAns(inputdata)\n        //console.log(inputdata)\n\n    };\n\n    const submit = () => {\n\n        let data = {\n\n            'attemptans': attempt,\n            'quiz_id': quizId,\n\n        }\n\n        fetch(`${baseUrl}${api.quizAttempt}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n            },\n            body: JSON.stringify(data),\n        })\n\n            .then(response => {\n                if (response.status === 200) {\n                    window.confirm('Want to enrole this course?')\n                    window.location.href = `/dashboard/mycourse/${props.courseId}/quiz/result`;\n\n                }\n                else {\n                    throw Error([response.status, response.statusText].join(' '));\n                }\n            })\n\n            .catch(error => console.log('error', error));\n\n\n\n\n    };\n\n\n    // const changePage = ({ selected: selectedPage }: any) => {\n    //     setPageNumber(selectedPage);\n    // };\n\n    ///////////////////////////\n    // useEffect(() => {\n    //     const tm1 = new Date(test_end).getTime();\n    //     const tm2 = new Date(test_start).getTime();\n    //     const ddd = tm1 - tm2;\n\n    //     console.log(ddd)\n\n    // }, [test_end, test_start]);\n\n    ///////////////////////////////////\n    const st = format(new Date(), 'yyyy-MM-dd HH:mm:ss');\n    const etm: any = localStorage.getItem(\"test_end\");\n    const et = format(new Date(etm), 'yyyy-MM-dd HH:mm:ss');\n    const end = new Date(et).getTime();\n    const start = new Date(st).getTime();\n    const ddd = end - start;\n    // console.log('ts', start)\n    // console.log('te', end)\n    // console.log('ddd', ddd)\n    //console.log(typeof (test_start))\n    //console.log(question)\n\n    const [deadline] = useState(new Date(Date.now() + ddd));\n\n    ////////////////////////////////////////////////////////////////////////////\n\n    // const [deadline, setDdeadline] = useState(new Date(Date.now()));\n    // useEffect(() => {\n    //     const tm1 = new Date(test_end).getTime();\n    //     const tm2 = new Date(test_start).getTime();\n    //     const ddd = tm1 - tm2;\n    //     setDdeadline(new Date(Date.now() + ddd))\n    // }, [test_end, test_start])\n    // console.log('dead', deadline)\n    //const [deadline] = useState(new Date(Date.now() + 12022));\n\n    ///////////////////////////////////////////////////////////////////////////////\n\n\n    const timer = useCountdown(deadline);\n\n    // useEffect(() => {\n\n    //     if (time===0) {\n    //         submit()\n    //     }\n\n    // }, [time]);\n    //console.log('timer', timer)\n    return (\n\n        <>\n\n            <IonContent>\n\n                {isAttempt != '1' ?\n\n                    <IonCard>\n                        <IonCardHeader>\n                            <IonCardTitle>\n\n                                <div className='text-center mt-3'>Total Question -- {question.length}</div>\n\n                                <div className='text-center mt-3 mb-3'><i className=\"bi bi-alarm\"></i> {timer.hours}:{timer.minutes}:{timer.seconds}</div>\n\n                                {/* end: {new Date(test_end).getTime()}\n                                <br></br>\n                                start: {new Date(test_start).getTime()}\n                                <br></br> */}\n                                {/* time: {new Date(ddd).getTime()} */}\n                            </IonCardTitle>\n                        </IonCardHeader>\n\n                        <IonCardContent>\n\n                            {question\n                                .map((qstn: any, i: any) =>\n\n                                    <IonCard key={i.toString()}>\n                                        <IonCardHeader>\n                                            <IonCardTitle>\n                                                <div className='mb-2'>\n                                                    {i + 1} / {question.length} -- {qstn.title}\n                                                </div>\n\n\n                                                <h2 dangerouslySetInnerHTML={{ __html: qstn.q_content }}></h2>\n\n                                                <>\n                                                    {\n                                                        (qstn.question_type != 'MCQ') ?\n                                                            <>\n                                                                <IonItem>\n                                                                    <IonInput name='attemptans'\n                                                                        value={isAns[i]}\n                                                                        placeholder=\"enter answer\"\n                                                                        onIonChange={(e) => handleChange(e, i)}>\n\n                                                                    </IonInput>\n\n                                                                </IonItem>\n                                                            </> :\n                                                            <>\n                                                                <IonList>\n\n                                                                    <IonRadioGroup name='attemptans'\n                                                                        //selected={isAns[pagesVisited + i]}\n                                                                        value={isAns[i]}\n                                                                        onIonChange={(e) => handleChange(e, i)} >\n                                                                        {qstn.option.map((op: any, index: any) => {\n                                                                            //console.log(isAns[pagesVisited + i])\n                                                                            return (\n\n                                                                                <IonItem key={index}>\n                                                                                    <IonLabel >{op.option}</IonLabel>\n                                                                                    <IonRadio slot=\"start\" value={op.option} >\n                                                                                    </IonRadio>\n\n                                                                                </IonItem>\n\n                                                                            );\n                                                                        })}\n                                                                    </IonRadioGroup>\n                                                                </IonList>\n                                                            </>\n                                                    }\n\n\n                                                </>\n                                            </IonCardTitle>\n                                        </IonCardHeader>\n                                    </IonCard>\n\n\n                                )}\n\n                            <div className='text-center mt-3 mb-5'>\n                                <IonButton id=\"quiz_submit\" fill=\"outline\" onClick={submit}>submit</IonButton>\n                            </div>\n\n\n\n                        </IonCardContent>\n\n                    </IonCard>\n\n\n                    :\n                    <IonCard>\n                        <IonCardHeader>\n                            <IonCardTitle>\n                                <div className='text-center mt-3 mb-5'>\n                                    You Already Finished your Quiz\n                                </div>\n                            </IonCardTitle>\n                        </IonCardHeader>\n\n                        <IonCardContent>\n                            <div className='text-center mt-3 mb-5'>\n                                <IonButton fill=\"outline\" href={`/dashboard/mycourse/${props.courseId}`}>Back to Course</IonButton>\n                            </div>\n                        </IonCardContent>\n                    </IonCard>\n                }\n\n            </IonContent>\n        </>\n    );\n};\n\n\nexport default QuizQuestion;"],"mappings":"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"},"metadata":{},"sourceType":"module"}