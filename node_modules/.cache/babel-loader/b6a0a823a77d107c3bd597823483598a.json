{"ast":null,"code":"var _jsxFileName = \"/home/shama/webapps/ionicblog/src/pages/teacher/QuizAttemptedList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from 'react';\nimport MaterialReactTable from 'material-react-table';\nimport { Box, IconButton, Tooltip } from '@mui/material';\nimport { Autorenew } from '@mui/icons-material';\nimport baseUrl, { api } from '../../pages/Urls';\nimport { IonItem, IonLabel } from '@ionic/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//nested data is ok, see accessorKeys in ColumnDef below\nconst QuizAttemptedList = props => {\n  _s();\n\n  const [attemptList, setAttemptList] = useState([]);\n  const [courseData, setCourseData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const fetchAtmList = () => {\n    fetch(`${baseUrl}${api.attemptHistory}${props.courseId}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(resp => resp.json()).then(result => {\n      setAttemptList(result);\n    });\n  };\n\n  useEffect(() => {\n    fetchAtmList();\n  }, []);\n  const columns = useMemo(() => [{\n    accessorKey: 'quiz_name',\n    header: 'Quiz Name'\n  }, {\n    accessorKey: 'name',\n    header: 'User Name'\n  }, {\n    accessorFn: row => `${row.total_point} / ${row.total_question}`,\n    id: 'total_point',\n    header: 'Total Mark'\n  }], []);\n\n  const reAttempt = id => {\n    if (window.confirm('Are you sure?')) {\n      let data = {\n        'is_attempt': 0\n      };\n      fetch(`${baseUrl}${api.reAttempt}${id}`, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(data)\n      }).then(res => {\n        if (res.status === 200) {\n          fetchAtmList();\n        }\n      }).catch(error => console.log('error', error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(IonItem, {\n      children: /*#__PURE__*/_jsxDEV(IonLabel, {\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.course_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-2\",\n      children: \"Quiz Attempted List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MaterialReactTable, {\n      columns: columns,\n      data: attemptList,\n      getRowId: row => `${row.id}`,\n      enableRowActions: true,\n      enableRowNumbers: true,\n      enableColumnOrdering: true,\n      renderRowActions: _ref => {\n        let {\n          row,\n          table\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            arrow: true,\n            placement: \"right\",\n            title: \"Re-attempt\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: \"green\"\n              },\n              onClick: () => reAttempt(row.id),\n              children: /*#__PURE__*/_jsxDEV(Autorenew, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuizAttemptedList, \"VmYApyUI025kZpbGhM/rAGePCVY=\");\n\n_c = QuizAttemptedList;\nexport default QuizAttemptedList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizAttemptedList\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","MaterialReactTable","Box","IconButton","Tooltip","Autorenew","baseUrl","api","IonItem","IonLabel","QuizAttemptedList","props","attemptList","setAttemptList","courseData","setCourseData","modalOpen","setModalOpen","fetchAtmList","fetch","attemptHistory","courseId","method","headers","Accept","localStorage","getItem","then","resp","json","result","columns","accessorKey","header","accessorFn","row","total_point","total_question","id","reAttempt","window","confirm","data","body","JSON","stringify","res","status","catch","error","console","log","course_name","table","display","gap","color"],"sources":["/home/shama/webapps/ionicblog/src/pages/teacher/QuizAttemptedList.tsx"],"sourcesContent":["import React, { FC, useMemo, useState, useEffect, useRef } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport MaterialReactTable, {\n    MaterialReactTableProps,\n    MRT_Cell,\n    MRT_ColumnDef,\n    MRT_Row,\n} from 'material-react-table';\nimport {\n    Box,\n    IconButton,\n    Tooltip,\n} from '@mui/material';\nimport { Autorenew } from '@mui/icons-material';\nimport baseUrl, { api } from '../../pages/Urls';\nimport { IonContent, IonItem, IonLabel } from '@ionic/react';\ntype listData = {\n    id: string;\n    quiz_name: string;\n    name: string;\n    total_point: string;\n    total_question: string;\n\n};\n\n//nested data is ok, see accessorKeys in ColumnDef below\n\n\nconst QuizAttemptedList: FC<{\n\n    courseId: string\n    course_name: string\n}> = (props) => {\n    const [attemptList, setAttemptList] = useState([]);\n    const [courseData, setCourseData] = useState({});\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const fetchAtmList = () => {\n        fetch(`${baseUrl}${api.attemptHistory}${props.courseId}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\n            }\n        })\n            .then(resp => resp.json())\n            .then(result => {\n                setAttemptList(result)\n\n            })\n    }\n    useEffect(() => {\n        fetchAtmList();\n\n    }, [])\n\n    const columns = useMemo<MRT_ColumnDef<listData>[]>(\n        () => [\n\n\n            {\n                accessorKey: 'quiz_name',\n                header: 'Quiz Name',\n\n            },\n            {\n                accessorKey: 'name',\n                header: 'User Name',\n\n            },\n            {\n\n                accessorFn: (row) => `${row.total_point} / ${row.total_question}`,\n                id: 'total_point',\n                header: 'Total Mark',\n\n            },\n\n\n\n        ],\n        [],\n    );\n\n    const reAttempt = (id: any) => {\n        if (window.confirm('Are you sure?')) {\n            let data = {\n                'is_attempt': 0,\n            }\n            fetch(`${baseUrl}${api.reAttempt}${id}`, {\n                method: 'PUT',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\n                },\n                body: JSON.stringify(data),\n\n            }).then(res => {\n                if (res.status === 200) {\n\n                    fetchAtmList();\n                }\n\n            })\n                .catch(error => console.log('error', error));\n\n        }\n    }\n    return (\n\n        <div className=\"container mt-2\">\n            <IonItem>\n                <IonLabel color=\"primary\">\n                    <h1>{props.course_name}</h1>\n                </IonLabel>\n            </IonItem>\n            <h1 className='text-center mb-2'>Quiz Attempted List</h1>\n            <MaterialReactTable\n                columns={columns}\n                data={attemptList}\n                getRowId={(row => `${row.id}`)}\n                enableRowActions\n                enableRowNumbers\n                enableColumnOrdering\n                renderRowActions={({ row, table }) => (\n                    <Box sx={{ display: 'flex', gap: '1rem' }}>\n\n                        <Tooltip arrow placement=\"right\" title=\"Re-attempt\">\n                            <IconButton style={{ color: \"green\" }} onClick={() => reAttempt(row.id)}>\n                                <Autorenew />\n                            </IconButton>\n                        </Tooltip>\n                    </Box>\n                )}\n\n            />\n\n        </div>\n\n\n    );\n\n};\n\nexport default QuizAttemptedList;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,OAApB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAgE,OAAhE;AAEA,OAAOC,kBAAP,MAKO,sBALP;AAMA,SACIC,GADJ,EAEIC,UAFJ,EAGIC,OAHJ,QAIO,eAJP;AAKA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,OAAP,IAAkBC,GAAlB,QAA6B,kBAA7B;AACA,SAAqBC,OAArB,EAA8BC,QAA9B,QAA8C,cAA9C;;;AAUA;AAGA,MAAMC,iBAIJ,GAAIC,KAAD,IAAW;EAAA;;EACZ,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMmB,YAAY,GAAG,MAAM;IACvBC,KAAK,CAAE,GAAEb,OAAQ,GAAEC,GAAG,CAACa,cAAe,GAAET,KAAK,CAACU,QAAS,EAAlD,EAAqD;MACtDC,MAAM,EAAE,KAD8C;MAEtDC,OAAO,EAAE;QACLC,MAAM,EAAE,kBADH;QAEL,gBAAgB,kBAFX;QAGL,iBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;MAHpD;IAF6C,CAArD,CAAL,CASKC,IATL,CASUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATlB,EAUKF,IAVL,CAUUG,MAAM,IAAI;MACZjB,cAAc,CAACiB,MAAD,CAAd;IAEH,CAbL;EAcH,CAfD;;EAgBA9B,SAAS,CAAC,MAAM;IACZkB,YAAY;EAEf,CAHQ,EAGN,EAHM,CAAT;EAKA,MAAMa,OAAO,GAAGjC,OAAO,CACnB,MAAM,CAGF;IACIkC,WAAW,EAAE,WADjB;IAEIC,MAAM,EAAE;EAFZ,CAHE,EAQF;IACID,WAAW,EAAE,MADjB;IAEIC,MAAM,EAAE;EAFZ,CARE,EAaF;IAEIC,UAAU,EAAGC,GAAD,IAAU,GAAEA,GAAG,CAACC,WAAY,MAAKD,GAAG,CAACE,cAAe,EAFpE;IAGIC,EAAE,EAAE,aAHR;IAIIL,MAAM,EAAE;EAJZ,CAbE,CADa,EAyBnB,EAzBmB,CAAvB;;EA4BA,MAAMM,SAAS,GAAID,EAAD,IAAa;IAC3B,IAAIE,MAAM,CAACC,OAAP,CAAe,eAAf,CAAJ,EAAqC;MACjC,IAAIC,IAAI,GAAG;QACP,cAAc;MADP,CAAX;MAGAvB,KAAK,CAAE,GAAEb,OAAQ,GAAEC,GAAG,CAACgC,SAAU,GAAED,EAAG,EAAjC,EAAoC;QACrChB,MAAM,EAAE,KAD6B;QAErCC,OAAO,EAAE;UACLC,MAAM,EAAE,kBADH;UAEL,gBAAgB,kBAFX;UAGL,iBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;QAHpD,CAF4B;QAQrCiB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;MAR+B,CAApC,CAAL,CAUGf,IAVH,CAUQmB,GAAG,IAAI;QACX,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;UAEpB7B,YAAY;QACf;MAEJ,CAhBD,EAiBK8B,KAjBL,CAiBWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAjBpB;IAmBH;EACJ,CAzBD;;EA0BA,oBAEI;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACI,QAAC,OAAD;MAAA,uBACI,QAAC,QAAD;QAAU,KAAK,EAAC,SAAhB;QAAA,uBACI;UAAA,UAAKtC,KAAK,CAACyC;QAAX;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAI,SAAS,EAAC,kBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ,eAOI,QAAC,kBAAD;MACI,OAAO,EAAErB,OADb;MAEI,IAAI,EAAEnB,WAFV;MAGI,QAAQ,EAAGuB,GAAG,IAAK,GAAEA,GAAG,CAACG,EAAG,EAHhC;MAII,gBAAgB,MAJpB;MAKI,gBAAgB,MALpB;MAMI,oBAAoB,MANxB;MAOI,gBAAgB,EAAE;QAAA,IAAC;UAAEH,GAAF;UAAOkB;QAAP,CAAD;QAAA,oBACd,QAAC,GAAD;UAAK,EAAE,EAAE;YAAEC,OAAO,EAAE,MAAX;YAAmBC,GAAG,EAAE;UAAxB,CAAT;UAAA,uBAEI,QAAC,OAAD;YAAS,KAAK,MAAd;YAAe,SAAS,EAAC,OAAzB;YAAiC,KAAK,EAAC,YAAvC;YAAA,uBACI,QAAC,UAAD;cAAY,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAT,CAAnB;cAAuC,OAAO,EAAE,MAAMjB,SAAS,CAACJ,GAAG,CAACG,EAAL,CAA/D;cAAA,uBACI,QAAC,SAAD;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA;QAFJ;UAAA;UAAA;UAAA;QAAA,QADc;MAAA;IAPtB;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAkCH,CAtHD;;GAAM5B,iB;;KAAAA,iB;AAwHN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}