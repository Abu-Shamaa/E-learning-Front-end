{"ast":null,"code":"var _jsxFileName = \"/home/shama/webapps/ionicblog/src/pages/teacher/AddQuiz.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButton, IonInput, IonItem, IonLabel, IonCardContent, IonCard, IonCardHeader, IonCardTitle, IonToolbar, IonTitle, IonContent, IonSelect, IonSelectOption, IonText, IonPopover, IonDatetime } from \"@ionic/react\";\nimport React, { useState } from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport baseUrl, { api } from '../../pages/Urls';\nimport { format } from \"date-fns\";\nimport swal from 'sweetalert';\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddQuiz = props => {\n  _s();\n\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    },\n    reset,\n    control,\n    setValue\n  } = useForm({\n    defaultValues: {\n      course_name: props.course_name,\n      quiz_name: '',\n      test_time: '',\n      status: '',\n      inputlist: [{\n        level_name: '',\n        qcount: ''\n      }],\n      start_date: format(new Date(), \"yyyy-MM-dd HH:mm\")\n    }\n  });\n  const [quiz_name, setQuiz_name] = useState('');\n  const [status, setStatus] = useState('');\n  const [duration, setDuration] = useState('');\n  const [error, setError] = useState(\"\");\n  const [dateTimeValue, setDateTimeValue] = useState(format(new Date(), \"yyyy-MM-dd HH:mm\")); //console.log(dateTimeValue)\n  /////\n\n  const [inputList, setinputList] = useState([{\n    level_name: '',\n    qcount: ''\n  }]);\n\n  const handleinputchange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setValue('inputlist', list);\n  };\n\n  const handleaddclick = () => {\n    const abc = [...inputList, {\n      level_name: '',\n      qcount: ''\n    }];\n    setValue('inputlist', abc);\n  };\n\n  const handleremove = index => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setValue('inputlist', list);\n  };\n\n  const addQuiz = e => {\n    {\n      fetch(`${baseUrl}${api.addQuiz}`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(e)\n      }).then(response => {\n        if (response.status === 200) {\n          props.fetchShowCourse();\n          props.onClose();\n          reset({\n            quiz_name: '',\n            test_time: '',\n            status: '',\n            inputlist: [{\n              level_name: '',\n              qcount: ''\n            }] //start_date: format(new Date(), \"yyyy-MM-dd HH:mm\"),  \n\n          });\n          swal({\n            title: \"Success!\",\n            text: \"Quiz Created successfully\",\n            icon: \"success\"\n          });\n        } else {\n          throw Error([response.status, response.statusText].join(' '));\n        }\n      }).catch(error => console.log('error', error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Collapse, {\n      in: props.collapse,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5 mb-5 \",\n        children: /*#__PURE__*/_jsxDEV(IonCard, {\n          children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n            children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n              children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n                children: /*#__PURE__*/_jsxDEV(IonTitle, {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"text-center display-6\",\n                    children: \"Add Quiz\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 47\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(addQuiz),\n              children: [/*#__PURE__*/_jsxDEV(IonItem, {\n                children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                  position: \"stacked\",\n                  children: \"Quiz Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                  placeholder: \"quiz name\",\n                  type: \"text\",\n                  ...register(\"quiz_name\", {\n                    required: \"Quiz Name Is Required\"\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  errors: errors,\n                  name: \"quiz_name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n                children: /*#__PURE__*/_jsxDEV(IonText, {\n                  color: \"primary\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"mt-3 mb-3\",\n                    children: \"Add Quiz Level\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: inputList.map((x, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row mb-3 mt-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \" col-md-4\",\n                      children: /*#__PURE__*/_jsxDEV(IonItem, {\n                        children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                          position: \"stacked\",\n                          children: \"Level\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 168,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(IonSelect, {\n                          name: \"level_name\",\n                          value: x.level_name,\n                          onIonChange: e => handleinputchange(e, i),\n                          children: props.level.map((item, index) => /*#__PURE__*/_jsxDEV(IonSelectOption, {\n                            children: item.level_name\n                          }, index.toString(), false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 175,\n                            columnNumber: 69\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 169,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \" col-md-4\",\n                      children: /*#__PURE__*/_jsxDEV(IonItem, {\n                        children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                          position: \"stacked\",\n                          children: \"No of Question\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                          type: \"number\",\n                          name: \"qcount\",\n                          value: x.qcount,\n                          min: 1,\n                          step: \"1\",\n                          required: true,\n                          clearInput: true,\n                          onIonChange: e => handleinputchange(e, i)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-4 mt-4\",\n                      children: [inputList.length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleremove(i),\n                        children: \"X\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 61\n                      }, this), inputList.length - 1 === i && /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleaddclick(),\n                        className: \"mx-3 \",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"bi bi-plus-circle-fill\",\n                          title: \"add-option\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 203,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 53\n                    }, this)]\n                  }, i.toString(), true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n                children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                  position: \"stacked\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(IonSelect, {\n                  placeholder: \"status\",\n                  ...register(\"status\", {\n                    required: \"Status Is Required\"\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(IonSelectOption, {\n                      value: \"P\",\n                      children: \"Publish\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(IonSelectOption, {\n                      value: \"D\",\n                      children: \"Draft\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n                children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                  position: \"stacked\",\n                  children: \"Duration (Minutes)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                  type: \"number\",\n                  min: 1,\n                  step: \"1\",\n                  ...register(\"test_time\", {\n                    required: \"Title Is Required\"\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n                id: \"click-trigger\",\n                children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                  position: \"floating\",\n                  children: \"Quiz Start \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                  type: \"text\",\n                  clearInput: true,\n                  value: format(new Date(dateTimeValue), \"yyyy-MM-dd HH:mm\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IonPopover, {\n                trigger: \"click-trigger\",\n                triggerAction: \"click\",\n                children: /*#__PURE__*/_jsxDEV(IonContent, {\n                  children: /*#__PURE__*/_jsxDEV(IonDatetime, {\n                    onIonChange: e => setDateTimeValue(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: \"3%\"\n                },\n                className: \"text-center mb-5\",\n                children: [/*#__PURE__*/_jsxDEV(IonButton, {\n                  color: \"danger\",\n                  onClick: () => {\n                    props.onClose(); //setinputList([]);\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n                  color: \"primary\",\n                  type: \"submit\",\n                  children: \"Create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddQuiz, \"595zRnifn4d7FV///am2R3oNyaU=\", false, function () {\n  return [useForm];\n});\n\n_c = AddQuiz;\nexport default AddQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQuiz\");","map":{"version":3,"names":["IonButton","IonInput","IonItem","IonLabel","IonCardContent","IonCard","IonCardHeader","IonCardTitle","IonToolbar","IonTitle","IonContent","IonSelect","IonSelectOption","IonText","IonPopover","IonDatetime","React","useState","Collapse","baseUrl","api","format","swal","useForm","ErrorMessage","AddQuiz","props","handleSubmit","register","formState","errors","reset","control","setValue","defaultValues","course_name","quiz_name","test_time","status","inputlist","level_name","qcount","start_date","Date","setQuiz_name","setStatus","duration","setDuration","error","setError","dateTimeValue","setDateTimeValue","inputList","setinputList","handleinputchange","e","index","name","value","target","list","handleaddclick","abc","handleremove","splice","addQuiz","fetch","method","headers","Accept","localStorage","getItem","body","JSON","stringify","then","response","fetchShowCourse","onClose","title","text","icon","Error","statusText","join","catch","console","log","collapse","required","color","map","x","i","level","item","toString","length","marginTop"],"sources":["/home/shama/webapps/ionicblog/src/pages/teacher/AddQuiz.tsx"],"sourcesContent":["import {\n    IonButton,\n    IonInput,\n    IonItem,\n    IonLabel,\n    IonCardContent,\n    IonCard,\n    IonCardHeader,\n    IonCardTitle,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonSelect,\n    IonSelectOption,\n    IonText,\n    IonPopover,\n    IonDatetime,\n} from \"@ionic/react\";\nimport React, { useState, useEffect } from 'react';\nimport { Collapse } from 'react-bootstrap'\nimport baseUrl, { api } from '../../pages/Urls';\nimport { format } from \"date-fns\";\nimport swal from 'sweetalert';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { TextField } from \"@mui/material\";\nimport { DesktopDatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nconst AddQuiz: React.FC<{\n    collapse: boolean\n    onClose: () => void;\n    level: any[]\n    course_name: string\n    fetchShowCourse: () => void\n\n}> = (props) => {\n    const {\n        handleSubmit,\n        register,\n        formState: { errors },\n        reset,\n        control,\n        setValue,\n    } = useForm({\n        defaultValues: {\n            course_name: props.course_name,\n            quiz_name: '',\n            test_time: '',\n            status: '',\n            inputlist: [{ level_name: '', qcount: '' }],\n            start_date: format(new Date(), \"yyyy-MM-dd HH:mm\"),\n\n        }\n    });\n    const [quiz_name, setQuiz_name] = useState('');\n    const [status, setStatus] = useState('');\n    const [duration, setDuration] = useState('');\n    const [error, setError] = useState(\"\");\n    const [dateTimeValue, setDateTimeValue] = useState<any>(\n        format(new Date(), \"yyyy-MM-dd HH:mm\")\n    );\n    //console.log(dateTimeValue)\n    /////\n    const [inputList, setinputList] = useState([{ level_name: '', qcount: '' }]);\n    const handleinputchange = (e: any, index: any) => {\n        const { name, value } = e.target;\n        const list: any[] = [...inputList];\n        list[index][name] = value;\n        setValue('inputlist', list);\n\n\n    }\n    const handleaddclick = () => {\n\n        const abc = [...inputList, { level_name: '', qcount: '' }]\n\n        setValue('inputlist', abc);\n    }\n    const handleremove = (index: any) => {\n        const list = [...inputList];\n        list.splice(index, 1);\n        setValue('inputlist', list);\n    }\n\n    const addQuiz = (e: any) => {\n        {\n\n            fetch(`${baseUrl}${api.addQuiz}`, {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify(e),\n            })\n\n                .then(response => {\n                    if (response.status === 200) {\n                        props.fetchShowCourse();\n                        props.onClose();\n                        reset({\n                            quiz_name: '',\n                            test_time: '',\n                            status: '',\n                            inputlist: [{ level_name: '', qcount: '' }],\n                            //start_date: format(new Date(), \"yyyy-MM-dd HH:mm\"),  \n                        })\n                        swal({\n                            title: \"Success!\",\n                            text: \"Quiz Created successfully\",\n                            icon: \"success\",\n                        });\n                    }\n                    else {\n\n                        throw Error([response.status, response.statusText].join(' '));\n                    }\n                })\n\n                .catch(error => console.log('error', error));\n\n        }\n    }\n    return (\n        <>\n            <Collapse in={props.collapse}>\n\n                <div className=\"container mt-5 mb-5 \">\n\n                    <IonCard>\n                        <IonCardHeader>\n                            <IonCardTitle>\n                                <IonToolbar>\n                                    <IonTitle><h1 className=\"text-center display-6\">Add Quiz</h1></IonTitle>\n                                </IonToolbar>\n                            </IonCardTitle>\n                        </IonCardHeader>\n                        <hr />\n                        <IonCardContent>\n                            <form onSubmit={handleSubmit(addQuiz)}>\n                                <IonItem>\n                                    <IonLabel position=\"stacked\">Quiz Name</IonLabel>\n                                    <IonInput placeholder=\"quiz name\"\n                                        type=\"text\"\n                                        {...register(\"quiz_name\", { required: \"Quiz Name Is Required\" })}\n                                    >\n                                    </IonInput>\n                                </IonItem>\n                                <p style={{ color: \"red\" }}>\n                                    <ErrorMessage errors={errors} name=\"quiz_name\" />\n                                </p>\n                                <IonItem>\n                                    <IonText color=\"primary\">\n                                        <h2 className=\"mt-3 mb-3\">Add Quiz Level</h2>\n                                    </IonText>\n\n                                </IonItem>\n                                <div>\n\n                                    {\n                                        inputList.map((x, i) => {\n\n                                            return (\n                                                <div key={i.toString()} className=\"row mb-3 mt-3\">\n                                                    <div className=\" col-md-4\">\n                                                        <IonItem>\n                                                            <IonLabel position=\"stacked\">Level</IonLabel>\n                                                            <IonSelect\n                                                                name=\"level_name\"\n                                                                value={x.level_name}\n                                                                onIonChange={(e: any) => handleinputchange(e, i)}\n                                                            >\n                                                                {props.level.map((item: any, index: any) => (\n                                                                    < IonSelectOption key={index.toString()}>{item.level_name}</IonSelectOption>\n                                                                ))}\n                                                            </IonSelect>\n                                                        </IonItem>\n                                                    </div>\n                                                    <div className=\" col-md-4\">\n                                                        <IonItem>\n                                                            <IonLabel position=\"stacked\">No of Question</IonLabel>\n                                                            <IonInput type=\"number\"\n                                                                name=\"qcount\"\n                                                                value={x.qcount}\n                                                                min={1}\n                                                                step='1'\n                                                                required\n                                                                clearInput\n                                                                onIonChange={(e: any) => handleinputchange(e, i)}\n                                                            >\n                                                            </IonInput>\n                                                        </IonItem>\n                                                    </div>\n                                                    <div className=\"col-md-4 mt-4\">\n                                                        {\n                                                            inputList.length !== 1 &&\n                                                            <button onClick={() => handleremove(i)}>X</button>\n                                                        }\n                                                        {\n                                                            inputList.length - 1 === i &&\n                                                            <button onClick={() => handleaddclick()} className=\"mx-3 \">\n                                                                <i className=\"bi bi-plus-circle-fill\" title=\"add-option\"></i>\n                                                            </button>\n                                                        }\n\n                                                    </div>\n\n\n\n                                                </div>\n                                            );\n                                        })}\n\n                                </div>\n\n\n                                <IonItem>\n                                    <IonLabel position=\"stacked\">Status</IonLabel>\n\n                                    <IonSelect\n                                        placeholder=\"status\"\n\n                                        {...register(\"status\", { required: \"Status Is Required\" })}\n                                    >\n\n                                        <>\n                                            <IonSelectOption value='P'>Publish</IonSelectOption>\n                                            <IonSelectOption value='D'>Draft</IonSelectOption>\n\n                                        </>\n\n                                    </IonSelect>\n\n                                </IonItem>\n                                <IonItem>\n                                    <IonLabel position=\"stacked\">Duration (Minutes)</IonLabel>\n\n                                    <IonInput type=\"number\"\n                                        min={1}\n                                        step='1'\n                                        {...register(\"test_time\", { required: \"Title Is Required\" })}\n\n                                    >\n                                    </IonInput>\n                                </IonItem>\n\n                                <IonItem id=\"click-trigger\">\n                                    <IonLabel position=\"floating\">Quiz Start </IonLabel>\n                                    <IonInput\n                                        type=\"text\"\n                                        clearInput\n                                        value={format(new Date(dateTimeValue), \"yyyy-MM-dd HH:mm\")}\n                                    ></IonInput>\n                                </IonItem>\n                                <IonPopover trigger=\"click-trigger\" triggerAction=\"click\">\n                                    <IonContent>\n                                        <IonDatetime onIonChange={(e) => setDateTimeValue(e.target.value)}></IonDatetime>\n                                    </IonContent>\n                                </IonPopover>\n                                <div style={{ marginTop: \"3%\" }} className=\"text-center mb-5\">\n                                    <IonButton color=\"danger\" onClick={() => {\n                                        props.onClose();\n                                        //setinputList([]);\n                                    }}>\n                                        Cancel\n                                    </IonButton>\n                                    <IonButton color=\"primary\" type=\"submit\">\n                                        Create\n                                    </IonButton>\n\n                                </div>\n                            </form>\n                        </IonCardContent>\n                    </IonCard>\n\n                </div>\n\n\n            </Collapse>\n        </>\n    )\n}\nexport default AddQuiz;"],"mappings":"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"},"metadata":{},"sourceType":"module"}