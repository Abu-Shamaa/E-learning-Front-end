{"ast":null,"code":"var _jsxFileName = \"/home/shama/webapps/ionicblog/src/pages/user/ucourse/QuizQuestion.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { IonContent, IonItem, IonButton, IonCardContent, IonCard, IonCardHeader, IonCardTitle, IonInput } from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport baseUrl, { api } from '../../Urls';\nimport '../../../pages/Style.css';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TablePagination from '@mui/material/TablePagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuizQuestion = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [question, setQuestion] = useState([]);\n  const [isAns, setIsAns] = useState([]);\n  const [test_end, setTest_end] = useState(format(new Date(), 'yyyy-MM-dd HH:mm:ss'));\n  const [quizId, setQuizId] = useState('');\n  const [isAttempt, setIsAttempt] = useState(''); ///////////////////////////////////////////\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(2);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - question.length) : 0; //const [selected, setSelected] = useState(0);\n\n  const [pageNumber, setPageNumber] = useState(0);\n  const questionPerPage = 2;\n  const pagesVisited = pageNumber * questionPerPage;\n  const pageCount = Math.ceil(question.length / questionPerPage); //console.log('pg', pageNumber)\n  //console.log('pv', pagesVisited)\n  ////\n\n  useEffect(() => {\n    return history.listen(() => {\n      // listen\n      if (history.action === \"POP\") {\n        history.replace(`/dashboard/mycourse/${localStorage.getItem(\"course_id\")}/quiz/${localStorage.getItem(\"quiz_id\")}`);\n      }\n    });\n  }, [history]);\n  useEffect(() => {\n    fetch(`${baseUrl}${api.viewQuiz}${id}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(resp => resp.json()).then(result => {\n      setQuestion(result.question);\n      setTest_end(result.question[0].test_end);\n      setQuizId(result.question.map(item => item.quiz_id));\n      setIsAttempt(result.quiz.map(item => item.is_attempt)); //localStorage.setItem('quiz_id', result.question[0].quiz_id)\n      //localStorage.setItem('test_end', result.question[0].test_end)\n      //history.replace(`/dashboard/mycourse/${props.courseId}/quiz/${localStorage.getItem(\"quiz_id\")}`)\n    });\n  }, []); //console.log(question)\n\n  let attempt = {};\n  question.map((q, i) => {\n    attempt = { ...attempt,\n      [q.id]: isAns[i]\n    };\n  });\n\n  const handleChange = (e, i) => {\n    const inputdata = [...isAns];\n    inputdata[page * rowsPerPage + i] = e.target.value;\n    console.log('ans', inputdata);\n    setIsAns(inputdata); //console.log('page No', [pagesVisited + i])\n  }; //console.log('ans', attempt)\n\n\n  const submit = () => {\n    if (quizId && attempt) {\n      let data = {\n        'attemptans': attempt,\n        'quiz_id': quizId\n      };\n      fetch(`${baseUrl}${api.quizAttempt}`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        if (response.status === 200) {\n          //window.confirm('Want to submit?')\n          window.location.href = `/dashboard/mycourse/${props.courseId}/quiz/result`;\n        } else {\n          throw Error([response.status, response.statusText].join(' '));\n        }\n      }).catch(error => console.log('error', error));\n    }\n  };\n\n  const changePage = _ref => {\n    let {\n      selected\n    } = _ref;\n    setPageNumber(selected);\n  }; ///////////////////////////\n\n\n  const st = format(new Date(), 'yyyy-MM-dd HH:mm:ss');\n  const etm = localStorage.getItem(\"test_end\");\n  const et = format(new Date(etm), 'yyyy-MM-dd HH:mm:ss');\n  const end = new Date(et).getTime();\n  const start = new Date(st).getTime();\n  const ddd = end - start;\n  const [deadline] = useState(new Date(Date.now() + ddd));\n\n  const useCountdown = deadline => {\n    _s();\n\n    // Time is in seconds\n    const [time, setTime] = useState(Math.max(0, Math.floor((deadline.getTime() - Date.now()) / 1000)));\n\n    const decrement = () => setTime(prevTime => {\n      return prevTime === 0 ? 0 : prevTime - 1;\n    });\n\n    useEffect(() => {\n      //const ids = setInterval(decrement, 1000);\n      const ids = setInterval(() => {\n        decrement();\n\n        if (time == 0) {\n          submit();\n        }\n      }, 1000);\n      return () => clearInterval(ids);\n    }, [time]);\n\n    const format = num => {\n      return num < 10 ? '0' + num : num.toString();\n    };\n\n    return {\n      //days: format(Math.floor(time / (3600 * 24))),\n      hours: format(Math.floor(time / 3600 % 24)),\n      minutes: format(Math.floor(time / 60 % 60)),\n      seconds: format(time % 60)\n    };\n  };\n\n  _s(useCountdown, \"Dv/bKuRD4Z/f7cu4v2rBgyTcrkI=\");\n\n  const timer = useCountdown(deadline);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IonContent, {\n      children: isAttempt != '1' ? /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: '100%',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-3\",\n          children: [\"Total Question -- \", question.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-3 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-alarm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 64\n          }, this), \" \", timer.hours, \":\", timer.minutes, \":\", timer.seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: (rowsPerPage > 0 ? question.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : question).map((qstn, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-2\",\n                    children: [page * rowsPerPage + i + 1, \" / \", question.length, \" -- \", qstn.title]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    dangerouslySetInnerHTML: {\n                      __html: qstn.q_content\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: qstn.question_type != 'MCQ' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(IonItem, {\n                        children: /*#__PURE__*/_jsxDEV(IonInput, {\n                          name: \"isAns\",\n                          value: isAns[page * rowsPerPage + i],\n                          placeholder: \"enter answer\",\n                          onIonChange: e => handleChange(e, i) //onIonChange={(e) => setIsAns(e.target.value)}\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 244,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: qstn.option.map((op, index) => {\n                        //console.log('ans', [index])\n                        return /*#__PURE__*/_jsxDEV(IonItem, {\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"radio\",\n                            value: isAns[page * rowsPerPage + i],\n                            onChange: e => handleChange(e, i),\n                            name: \"isAns\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 263,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            children: op.option\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 265,\n                            columnNumber: 77\n                          }, this)]\n                        }, `option-${index}`, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 262,\n                          columnNumber: 73\n                        }, this);\n                      })\n                    }, void 0, false)\n                  }, void 0, false)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 45\n                }, this)\n              }, i.toString(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [],\n          component: \"div\",\n          count: question.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n          children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-3 mb-5\",\n              children: \"You Already Finished your Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-3 mb-5\",\n            children: /*#__PURE__*/_jsxDEV(IonButton, {\n              fill: \"outline\",\n              href: `/dashboard/mycourse/${props.courseId}`,\n              children: \"Back to Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(QuizQuestion, \"ttPQHPVqsSODdd5vb3Ury/SP2WM=\", true, function () {\n  return [useParams, useHistory];\n});\n\n_c = QuizQuestion;\nexport default QuizQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizQuestion\");","map":{"version":3,"names":["IonContent","IonItem","IonButton","IonCardContent","IonCard","IonCardHeader","IonCardTitle","IonInput","React","useState","useEffect","useHistory","useParams","format","baseUrl","api","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","QuizQuestion","props","id","history","question","setQuestion","isAns","setIsAns","test_end","setTest_end","Date","quizId","setQuizId","isAttempt","setIsAttempt","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","emptyRows","Math","max","length","pageNumber","setPageNumber","questionPerPage","pagesVisited","pageCount","ceil","listen","action","replace","localStorage","getItem","fetch","viewQuiz","method","headers","Accept","then","resp","json","result","map","item","quiz_id","quiz","is_attempt","attempt","q","i","handleChange","e","inputdata","console","log","submit","data","quizAttempt","body","JSON","stringify","response","status","window","location","href","courseId","Error","statusText","join","catch","error","changePage","selected","st","etm","et","end","getTime","start","ddd","deadline","now","useCountdown","time","setTime","floor","decrement","prevTime","ids","setInterval","clearInterval","num","toString","hours","minutes","seconds","timer","width","mb","slice","qstn","title","__html","q_content","question_type","option","op","index"],"sources":["/home/shama/webapps/ionicblog/src/pages/user/ucourse/QuizQuestion.tsx"],"sourcesContent":["import {\n    IonContent,\n    IonItem,\n    IonButton,\n    IonCardContent,\n    IonCard,\n    IonCardHeader,\n    IonCardTitle,\n    IonLabel, IonList, IonRadio, IonRadioGroup, IonInput, IonCheckbox\n} from '@ionic/react';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport { format } from 'date-fns'\nimport baseUrl, { api } from '../../Urls';\nimport '../../../pages/Style.css';\nimport ReactPaginate from \"react-paginate\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TablePagination from '@mui/material/TablePagination';\n\nconst QuizQuestion: React.FC<{\n    courseId: string,\n\n}> = (props) => {\n    type QuizQuestion = {\n        id: string;\n    };\n    const { id } = useParams<QuizQuestion>();\n    const history = useHistory();\n    const [question, setQuestion] = useState([]);\n    const [isAns, setIsAns]: any[] = useState([]);\n    const [test_end, setTest_end] = useState(format(new Date(), 'yyyy-MM-dd HH:mm:ss'));\n    const [quizId, setQuizId] = useState('');\n    const [isAttempt, setIsAttempt] = useState('');\n    ///////////////////////////////////////////\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(2);\n    const handleChangePage = (event: any, newPage: any) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: any) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - question.length) : 0;\n    //const [selected, setSelected] = useState(0);\n    const [pageNumber, setPageNumber] = useState(0);\n    const questionPerPage = 2;\n    const pagesVisited = pageNumber * questionPerPage;\n    const pageCount = Math.ceil(question.length / questionPerPage);\n\n    //console.log('pg', pageNumber)\n    //console.log('pv', pagesVisited)\n\n\n\n    ////\n    useEffect(() => {\n        return history.listen(() => { // listen\n            if (history.action === \"POP\") {\n                history.replace(`/dashboard/mycourse/${localStorage.getItem(\"course_id\")}/quiz/${localStorage.getItem(\"quiz_id\")}`);\n            }\n        });\n    }, [history]);\n\n    useEffect(() => {\n\n\n        fetch(`${baseUrl}${api.viewQuiz}${id}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\n            }\n        })\n            .then(resp => resp.json())\n            .then(result => {\n                setQuestion(result.question)\n                setTest_end(result.question[0].test_end)\n                setQuizId(result.question.map((item: any) => (item.quiz_id)))\n                setIsAttempt(result.quiz.map((item: any) => (item.is_attempt)))\n                //localStorage.setItem('quiz_id', result.question[0].quiz_id)\n                //localStorage.setItem('test_end', result.question[0].test_end)\n                //history.replace(`/dashboard/mycourse/${props.courseId}/quiz/${localStorage.getItem(\"quiz_id\")}`)\n            })\n\n\n    }, []);\n\n    //console.log(question)\n    let attempt = {};\n    question.map((q: any, i) => {\n        attempt = { ...attempt, [q.id]: isAns[i] }\n    })\n    const handleChange = (e: any, i: any) => {\n        const inputdata = [...isAns];\n        inputdata[page * rowsPerPage + i] = e.target.value;\n        console.log('ans', inputdata)\n        setIsAns(inputdata)\n\n        //console.log('page No', [pagesVisited + i])\n\n\n    };\n    //console.log('ans', attempt)\n\n    const submit = () => {\n        if (quizId && attempt) {\n            let data = {\n\n                'attemptans': attempt,\n                'quiz_id': quizId,\n\n            }\n\n            fetch(`${baseUrl}${api.quizAttempt}`, {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify(data),\n            })\n\n                .then(response => {\n                    if (response.status === 200) {\n                        //window.confirm('Want to submit?')\n                        window.location.href = `/dashboard/mycourse/${props.courseId}/quiz/result`;\n\n                    }\n                    else {\n                        throw Error([response.status, response.statusText].join(' '));\n                    }\n                })\n\n                .catch(error => console.log('error', error));\n\n\n        }\n\n    };\n\n\n    const changePage = ({ selected }: any) => {\n        setPageNumber(selected);\n    };\n\n    ///////////////////////////\n\n    const st = format(new Date(), 'yyyy-MM-dd HH:mm:ss');\n    const etm: any = localStorage.getItem(\"test_end\");\n    const et = format(new Date(etm), 'yyyy-MM-dd HH:mm:ss');\n    const end = new Date(et).getTime();\n    const start = new Date(st).getTime();\n    const ddd = end - start;\n\n    const [deadline] = useState(new Date(Date.now() + ddd));\n\n    const useCountdown = (deadline: Date) => {\n        // Time is in seconds\n        const [time, setTime] = useState(\n            Math.max(0, Math.floor((deadline.getTime() - Date.now()) / 1000))\n        );\n\n        const decrement = () =>\n            setTime((prevTime) => {\n                return prevTime === 0 ? 0 : prevTime - 1;\n            });\n\n        useEffect(() => {\n            //const ids = setInterval(decrement, 1000);\n            const ids = setInterval(() => {\n                decrement()\n                if (time == 0) {\n                    submit()\n                }\n\n            }, 1000);\n            return () => clearInterval(ids);\n        }, [time]);\n\n        const format = (num: number): string => {\n            return num < 10 ? '0' + num : num.toString();\n        };\n\n        return {\n            //days: format(Math.floor(time / (3600 * 24))),\n            hours: format(Math.floor((time / 3600) % 24)),\n            minutes: format(Math.floor((time / 60) % 60)),\n            seconds: format(time % 60),\n        };\n    };\n\n    const timer = useCountdown(deadline);\n\n    return (\n\n        <>\n\n            <IonContent>\n\n                {isAttempt != '1' ?\n\n                    <Paper sx={{ width: '100%', mb: 2 }}>\n                        <div className='text-center mt-3'>Total Question -- {question.length}</div>\n\n                        <div className='text-center mt-3 mb-3'><i className=\"bi bi-alarm\"></i> {timer.hours}:{timer.minutes}:{timer.seconds}</div>\n                        <TableContainer>\n                            <Table aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {(rowsPerPage > 0\n                                        ? question.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : question\n                                    ).map((qstn: any, i: any) => (\n                                        <TableRow key={i.toString()}>\n                                            <TableCell >\n\n                                                <div className='mb-2'>\n                                                    {page * rowsPerPage + i + 1} / {question.length} -- {qstn.title}\n                                                </div>\n\n\n                                                <h2 dangerouslySetInnerHTML={{ __html: qstn.q_content }}></h2>\n\n                                                <>\n                                                    {\n                                                        (qstn.question_type != 'MCQ') ?\n                                                            <>\n                                                                <IonItem>\n                                                                    <IonInput name='isAns'\n                                                                        value={isAns[page * rowsPerPage + i]}\n                                                                        placeholder=\"enter answer\"\n                                                                        onIonChange={(e) => handleChange(e, i)}\n                                                                    //onIonChange={(e) => setIsAns(e.target.value)}\n\n                                                                    >\n\n                                                                    </IonInput>\n\n                                                                </IonItem>\n                                                            </> :\n                                                            <>\n\n                                                                {qstn.option.map((op: any, index: any) => {\n                                                                    //console.log('ans', [index])\n                                                                    return (\n\n                                                                        <IonItem key={`option-${index}`}>\n                                                                            <input type=\"radio\" value={isAns[page * rowsPerPage + i]}\n                                                                                onChange={(e) => handleChange(e, i)} name=\"isAns\" />\n                                                                            <label >{op.option}</label>\n                                                                        </IonItem>\n\n                                                                    );\n                                                                })}\n\n                                                            </>\n                                                    }\n\n\n                                                </>\n                                            </TableCell>\n\n                                        </TableRow>\n                                    ))}\n\n\n                                </TableBody>\n                            </Table>\n\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[]}\n                            component=\"div\"\n                            count={question.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onPageChange={handleChangePage}\n                            onRowsPerPageChange={handleChangeRowsPerPage}\n                        />\n                    </Paper>\n\n\n                    :\n                    <IonCard>\n                        <IonCardHeader>\n                            <IonCardTitle>\n                                <div className='text-center mt-3 mb-5'>\n                                    You Already Finished your Quiz\n                                </div>\n                            </IonCardTitle>\n                        </IonCardHeader>\n\n                        <IonCardContent>\n                            <div className='text-center mt-3 mb-5'>\n                                <IonButton fill=\"outline\" href={`/dashboard/mycourse/${props.courseId}`}>Back to Course</IonButton>\n                            </div>\n                        </IonCardContent>\n                    </IonCard>\n                }\n\n            </IonContent>\n        </>\n    );\n};\n\n\nexport default QuizQuestion;"],"mappings":"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"},"metadata":{},"sourceType":"module"}