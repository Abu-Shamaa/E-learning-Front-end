{"ast":null,"code":"import _assertThisInitialized from \"/mnt/disk2/ionicapps/elearn/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/mnt/disk2/ionicapps/elearn/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/mnt/disk2/ionicapps/elearn/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/mnt/disk2/ionicapps/elearn/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/mnt/disk2/ionicapps/elearn/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/mnt/disk2/ionicapps/elearn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/mnt/disk2/ionicapps/elearn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"/mnt/disk2/ionicapps/elearn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/mnt/disk2/ionicapps/elearn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent } from '@stencil/core/internal/client';\nimport { c as componentOnReady, o as debounce } from './helpers.js';\nvar ROUTER_INTENT_NONE = 'root';\nvar ROUTER_INTENT_FORWARD = 'forward';\nvar ROUTER_INTENT_BACK = 'back';\n/** Join the non empty segments with \"/\". */\n\nvar generatePath = function generatePath(segments) {\n  var path = segments.filter(function (s) {\n    return s.length > 0;\n  }).join('/');\n  return '/' + path;\n};\n\nvar generateUrl = function generateUrl(segments, useHash, queryString) {\n  var url = generatePath(segments);\n\n  if (useHash) {\n    url = '#' + url;\n  }\n\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n\n  return url;\n};\n\nvar writeSegments = function writeSegments(history, root, useHash, segments, direction, state, queryString) {\n  var url = generateUrl([].concat(_toConsumableArray(parsePath(root).segments), _toConsumableArray(segments)), useHash, queryString);\n\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  } else {\n    history.replaceState(state, '', url);\n  }\n};\n/**\n * Transforms a chain to a list of segments.\n *\n * Notes:\n * - parameter segments of the form :param are replaced with their value,\n * - null is returned when a value is missing for any parameter segment.\n */\n\n\nvar chainToSegments = function chainToSegments(chain) {\n  var segments = [];\n\n  var _iterator = _createForOfIteratorHelper(chain),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var route = _step.value;\n\n      var _iterator2 = _createForOfIteratorHelper(route.segments),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var segment = _step2.value;\n\n          if (segment[0] === ':') {\n            var param = route.params && route.params[segment.slice(1)];\n\n            if (!param) {\n              return null;\n            }\n\n            segments.push(param);\n          } else if (segment !== '') {\n            segments.push(segment);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return segments;\n};\n/**\n * Removes the prefix segments from the path segments.\n *\n * Return:\n * - null when the path segments do not start with the passed prefix,\n * - the path segments after the prefix otherwise.\n */\n\n\nvar removePrefix = function removePrefix(prefix, segments) {\n  if (prefix.length > segments.length) {\n    return null;\n  }\n\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return segments;\n  }\n\n  for (var i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== segments[i]) {\n      return null;\n    }\n  }\n\n  if (segments.length === prefix.length) {\n    return [''];\n  }\n\n  return segments.slice(prefix.length);\n};\n\nvar readSegments = function readSegments(loc, root, useHash) {\n  var prefix = parsePath(root).segments;\n  var pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  var segments = parsePath(pathname).segments;\n  return removePrefix(prefix, segments);\n};\n/**\n * Parses the path to:\n * - segments an array of '/' separated parts,\n * - queryString (undefined when no query string).\n */\n\n\nvar parsePath = function parsePath(path) {\n  var segments = [''];\n  var queryString;\n\n  if (path != null) {\n    var qsStart = path.indexOf('?');\n\n    if (qsStart > -1) {\n      queryString = path.substring(qsStart + 1);\n      path = path.substring(0, qsStart);\n    }\n\n    segments = path.split('/').map(function (s) {\n      return s.trim();\n    }).filter(function (s) {\n      return s.length > 0;\n    });\n\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n\n  return {\n    segments: segments,\n    queryString: queryString\n  };\n};\n\nvar printRoutes = function printRoutes(routes) {\n  console.group(\"[ion-core] ROUTES[\".concat(routes.length, \"]\"));\n\n  var _iterator3 = _createForOfIteratorHelper(routes),\n      _step3;\n\n  try {\n    var _loop = function _loop() {\n      var chain = _step3.value;\n      var segments = [];\n      chain.forEach(function (r) {\n        return segments.push.apply(segments, _toConsumableArray(r.segments));\n      });\n      var ids = chain.map(function (r) {\n        return r.id;\n      });\n      console.debug(\"%c \".concat(generatePath(segments)), 'font-weight: bold; padding-left: 20px', '=>\\t', \"(\".concat(ids.join(', '), \")\"));\n    };\n\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  console.groupEnd();\n};\n\nvar printRedirects = function printRedirects(redirects) {\n  console.group(\"[ion-core] REDIRECTS[\".concat(redirects.length, \"]\"));\n\n  var _iterator4 = _createForOfIteratorHelper(redirects),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var redirect = _step4.value;\n\n      if (redirect.to) {\n        console.debug('FROM: ', \"$c \".concat(generatePath(redirect.from)), 'font-weight: bold', ' TO: ', \"$c \".concat(generatePath(redirect.to.segments)), 'font-weight: bold');\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  console.groupEnd();\n};\n/**\n * Activates the passed route chain.\n *\n * There must be exactly one outlet per route entry in the chain.\n *\n * The methods calls setRouteId on each of the outlet with the corresponding route entry in the chain.\n * setRouteId will create or select the view in the outlet.\n */\n\n\nvar _writeNavState = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(root, chain, direction, index) {\n    var changed,\n        animation,\n        outlet,\n        route,\n        result,\n        _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            changed = _args.length > 4 && _args[4] !== undefined ? _args[4] : false;\n            animation = _args.length > 5 ? _args[5] : undefined;\n            _context.prev = 2;\n            // find next navigation outlet in the DOM\n            outlet = searchNavNode(root); // make sure we can continue interacting the DOM, otherwise abort\n\n            if (!(index >= chain.length || !outlet)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", changed);\n\n          case 6:\n            _context.next = 8;\n            return new Promise(function (resolve) {\n              return componentOnReady(outlet, resolve);\n            });\n\n          case 8:\n            route = chain[index];\n            _context.next = 11;\n            return outlet.setRouteId(route.id, route.params, direction, animation);\n\n          case 11:\n            result = _context.sent;\n\n            // if the outlet changed the page, reset navigation to neutral (no direction)\n            // this means nested outlets will not animate\n            if (result.changed) {\n              direction = ROUTER_INTENT_NONE;\n              changed = true;\n            } // recursively set nested outlets\n\n\n            _context.next = 15;\n            return _writeNavState(result.element, chain, direction, index + 1, changed, animation);\n\n          case 15:\n            changed = _context.sent;\n\n            if (!result.markVisible) {\n              _context.next = 19;\n              break;\n            }\n\n            _context.next = 19;\n            return result.markVisible();\n\n          case 19:\n            return _context.abrupt(\"return\", changed);\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](2);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", false);\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 22]]);\n  }));\n\n  return function writeNavState(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Recursively walks the outlet in the DOM.\n *\n * The function returns a list of RouteID corresponding to each of the outlet and the last outlet without a RouteID.\n */\n\n\nvar readNavState = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(root) {\n    var ids, outlet, node, id;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            ids = [];\n            node = root; // eslint-disable-next-line no-cond-assign\n\n          case 2:\n            if (!(outlet = searchNavNode(node))) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.next = 5;\n            return outlet.getRouteId();\n\n          case 5:\n            id = _context2.sent;\n\n            if (!id) {\n              _context2.next = 12;\n              break;\n            }\n\n            node = id.element;\n            id.element = undefined;\n            ids.push(id);\n            _context2.next = 13;\n            break;\n\n          case 12:\n            return _context2.abrupt(\"break\", 15);\n\n          case 13:\n            _context2.next = 2;\n            break;\n\n          case 15:\n            return _context2.abrupt(\"return\", {\n              ids: ids,\n              outlet: outlet\n            });\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function readNavState(_x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar waitUntilNavNode = function waitUntilNavNode() {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n\n  return new Promise(function (resolve) {\n    window.addEventListener('ionNavWillLoad', function () {\n      return resolve();\n    }, {\n      once: true\n    });\n  });\n};\n/** Selector for all the outlets supported by the router. */\n\n\nvar OUTLET_SELECTOR = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\n\nvar searchNavNode = function searchNavNode(root) {\n  if (!root) {\n    return undefined;\n  }\n\n  if (root.matches(OUTLET_SELECTOR)) {\n    return root;\n  }\n\n  var outlet = root.querySelector(OUTLET_SELECTOR);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n/**\n * Returns whether the given redirect matches the given path segments.\n *\n * A redirect matches when the segments of the path and redirect.from are equal.\n * Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n * The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\n */\n\n\nvar matchesRedirect = function matchesRedirect(segments, redirect) {\n  var from = redirect.from,\n      to = redirect.to;\n\n  if (to === undefined) {\n    return false;\n  }\n\n  if (from.length > segments.length) {\n    return false;\n  }\n\n  for (var i = 0; i < from.length; i++) {\n    var expected = from[i];\n\n    if (expected === '*') {\n      return true;\n    }\n\n    if (expected !== segments[i]) {\n      return false;\n    }\n  }\n\n  return from.length === segments.length;\n};\n/** Returns the first redirect matching the path segments or undefined when no match found. */\n\n\nvar findRouteRedirect = function findRouteRedirect(segments, redirects) {\n  return redirects.find(function (redirect) {\n    return matchesRedirect(segments, redirect);\n  });\n};\n\nvar matchesIDs = function matchesIDs(ids, chain) {\n  var len = Math.min(ids.length, chain.length);\n  var score = 0;\n\n  for (var i = 0; i < len; i++) {\n    var routeId = ids[i];\n    var routeChain = chain[i]; // Skip results where the route id does not match the chain at the same index\n\n    if (routeId.id.toLowerCase() !== routeChain.id) {\n      break;\n    }\n\n    if (routeId.params) {\n      var routeIdParams = Object.keys(routeId.params); // Only compare routes with the chain that have the same number of parameters.\n\n      if (routeIdParams.length === routeChain.segments.length) {\n        // Maps the route's params into a path based on the path variable names,\n        // to compare against the route chain format.\n        //\n        // Before:\n        // ```ts\n        // {\n        //  params: {\n        //    s1: 'a',\n        //    s2: 'b'\n        //  }\n        // }\n        // ```\n        //\n        // After:\n        // ```ts\n        // [':s1',':s2']\n        // ```\n        //\n        var pathWithParams = routeIdParams.map(function (key) {\n          return \":\".concat(key);\n        });\n\n        for (var j = 0; j < pathWithParams.length; j++) {\n          // Skip results where the path variable is not a match\n          if (pathWithParams[j].toLowerCase() !== routeChain.segments[j]) {\n            break;\n          } // Weight path matches for the same index higher.\n\n\n          score++;\n        }\n      }\n    } // Weight id matches\n\n\n    score++;\n  }\n\n  return score;\n};\n/**\n * Matches the segments against the chain.\n *\n * Returns:\n * - null when there is no match,\n * - a chain with the params properties updated with the parameter segments on match.\n */\n\n\nvar matchesSegments = function matchesSegments(segments, chain) {\n  var inputSegments = new RouterSegments(segments);\n  var matchesDefault = false;\n  var allparams;\n\n  for (var i = 0; i < chain.length; i++) {\n    var chainSegments = chain[i].segments;\n\n    if (chainSegments[0] === '') {\n      matchesDefault = true;\n    } else {\n      var _iterator5 = _createForOfIteratorHelper(chainSegments),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var segment = _step5.value;\n          var data = inputSegments.next(); // data param\n\n          if (segment[0] === ':') {\n            if (data === '') {\n              return null;\n            }\n\n            allparams = allparams || [];\n            var params = allparams[i] || (allparams[i] = {});\n            params[segment.slice(1)] = data;\n          } else if (data !== segment) {\n            return null;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      matchesDefault = false;\n    }\n  }\n\n  var matches = matchesDefault ? matchesDefault === (inputSegments.next() === '') : true;\n\n  if (!matches) {\n    return null;\n  }\n\n  if (allparams) {\n    return chain.map(function (route, i) {\n      return {\n        id: route.id,\n        segments: route.segments,\n        params: mergeParams(route.params, allparams[i]),\n        beforeEnter: route.beforeEnter,\n        beforeLeave: route.beforeLeave\n      };\n    });\n  }\n\n  return chain;\n};\n/**\n * Merges the route parameter objects.\n * Returns undefined when both parameters are undefined.\n */\n\n\nvar mergeParams = function mergeParams(a, b) {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\n/**\n * Finds the best match for the ids in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the RouteIDs.\n * That is they contain both the componentProps of the <ion-route> and the parameter segment.\n */\n\n\nvar findChainForIDs = function findChainForIDs(ids, chains) {\n  var match = null;\n  var maxMatches = 0;\n\n  var _iterator6 = _createForOfIteratorHelper(chains),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var chain = _step6.value;\n      var score = matchesIDs(ids, chain);\n\n      if (score > maxMatches) {\n        match = chain;\n        maxMatches = score;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  if (match) {\n    return match.map(function (route, i) {\n      var _a;\n\n      return {\n        id: route.id,\n        segments: route.segments,\n        params: mergeParams(route.params, (_a = ids[i]) === null || _a === void 0 ? void 0 : _a.params)\n      };\n    });\n  }\n\n  return null;\n};\n/**\n * Finds the best match for the segments in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the segments.\n * That is they contain both the componentProps of the <ion-route> and the parameter segments.\n */\n\n\nvar findChainForSegments = function findChainForSegments(segments, chains) {\n  var match = null;\n  var bestScore = 0;\n\n  var _iterator7 = _createForOfIteratorHelper(chains),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var chain = _step7.value;\n      var matchedChain = matchesSegments(segments, chain);\n\n      if (matchedChain !== null) {\n        var score = computePriority(matchedChain);\n\n        if (score > bestScore) {\n          bestScore = score;\n          match = matchedChain;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  return match;\n};\n/**\n * Computes the priority of a chain.\n *\n * Parameter segments are given a lower priority over fixed segments.\n *\n * Considering the following 2 chains matching the path /path/to/page:\n * - /path/to/:where\n * - /path/to/page\n *\n * The second one will be given a higher priority because \"page\" is a fixed segment (vs \":where\", a parameter segment).\n */\n\n\nvar computePriority = function computePriority(chain) {\n  var score = 1;\n  var level = 1;\n\n  var _iterator8 = _createForOfIteratorHelper(chain),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var route = _step8.value;\n\n      var _iterator9 = _createForOfIteratorHelper(route.segments),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var segment = _step9.value;\n\n          if (segment[0] === ':') {\n            score += Math.pow(1, level);\n          } else if (segment !== '') {\n            score += Math.pow(2, level);\n          }\n\n          level++;\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  return score;\n};\n\nvar RouterSegments = /*#__PURE__*/function () {\n  function RouterSegments(segments) {\n    _classCallCheck(this, RouterSegments);\n\n    this.segments = segments.slice();\n  }\n\n  _createClass(RouterSegments, [{\n    key: \"next\",\n    value: function next() {\n      if (this.segments.length > 0) {\n        return this.segments.shift();\n      }\n\n      return '';\n    }\n  }]);\n\n  return RouterSegments;\n}();\n\nvar readProp = function readProp(el, prop) {\n  if (prop in el) {\n    return el[prop];\n  }\n\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n\n  return null;\n};\n/**\n * Extracts the redirects (that is <ion-route-redirect> elements inside the root).\n *\n * The redirects are returned as a list of RouteRedirect.\n */\n\n\nvar readRedirects = function readRedirects(root) {\n  return Array.from(root.children).filter(function (el) {\n    return el.tagName === 'ION-ROUTE-REDIRECT';\n  }).map(function (el) {\n    var to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to)\n    };\n  });\n};\n/**\n * Extracts all the routes (that is <ion-route> elements inside the root).\n *\n * The routes are returned as a list of chains - the flattened tree.\n */\n\n\nvar readRoutes = function readRoutes(root) {\n  return flattenRouterTree(readRouteNodes(root));\n};\n/**\n * Reads the route nodes as a tree modeled after the DOM tree of <ion-route> elements.\n *\n * Note: routes without a component are ignored together with their children.\n */\n\n\nvar readRouteNodes = function readRouteNodes(node) {\n  return Array.from(node.children).filter(function (el) {\n    return el.tagName === 'ION-ROUTE' && el.component;\n  }).map(function (el) {\n    var component = readProp(el, 'component');\n    return {\n      segments: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el)\n    };\n  });\n};\n/**\n * Flattens a RouterTree in a list of chains.\n *\n * Each chain represents a path from the root node to a terminal node.\n */\n\n\nvar flattenRouterTree = function flattenRouterTree(nodes) {\n  var chains = [];\n\n  var _iterator10 = _createForOfIteratorHelper(nodes),\n      _step10;\n\n  try {\n    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n      var node = _step10.value;\n      flattenNode([], chains, node);\n    }\n  } catch (err) {\n    _iterator10.e(err);\n  } finally {\n    _iterator10.f();\n  }\n\n  return chains;\n};\n/** Flattens a route node recursively and push each branch to the chains list. */\n\n\nvar flattenNode = function flattenNode(chain, chains, node) {\n  chain = [].concat(_toConsumableArray(chain), [{\n    id: node.id,\n    segments: node.segments,\n    params: node.params,\n    beforeLeave: node.beforeLeave,\n    beforeEnter: node.beforeEnter\n  }]);\n\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n\n  var _iterator11 = _createForOfIteratorHelper(node.children),\n      _step11;\n\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var child = _step11.value;\n      flattenNode(chain, chains, child);\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n};\n\nvar Router = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    _this = _super.call(this);\n\n    _this.__registerHost();\n\n    _this.ionRouteWillChange = createEvent(_assertThisInitialized(_this), \"ionRouteWillChange\", 7);\n    _this.ionRouteDidChange = createEvent(_assertThisInitialized(_this), \"ionRouteDidChange\", 7);\n    _this.previousPath = null;\n    _this.busy = false;\n    _this.state = 0;\n    _this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n\n    _this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n\n    _this.useHash = true;\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: \"componentWillLoad\",\n    value: function () {\n      var _componentWillLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var canProceed, redirect, path;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return waitUntilNavNode();\n\n              case 2:\n                _context3.next = 4;\n                return this.runGuards(this.getSegments());\n\n              case 4:\n                canProceed = _context3.sent;\n\n                if (!(canProceed !== true)) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                if (!(typeof canProceed === 'object')) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                redirect = canProceed.redirect;\n                path = parsePath(redirect);\n                this.setSegments(path.segments, ROUTER_INTENT_NONE, path.queryString);\n                _context3.next = 12;\n                return this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n\n              case 12:\n                _context3.next = 16;\n                break;\n\n              case 14:\n                _context3.next = 16;\n                return this.onRoutesChanged();\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentWillLoad() {\n        return _componentWillLoad.apply(this, arguments);\n      }\n\n      return componentWillLoad;\n    }()\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n      window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n  }, {\n    key: \"onPopState\",\n    value: function () {\n      var _onPopState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var direction, segments, canProceed;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                direction = this.historyDirection();\n                segments = this.getSegments();\n                _context4.next = 4;\n                return this.runGuards(segments);\n\n              case 4:\n                canProceed = _context4.sent;\n\n                if (!(canProceed !== true)) {\n                  _context4.next = 11;\n                  break;\n                }\n\n                if (!(typeof canProceed === 'object')) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                segments = parsePath(canProceed.redirect).segments;\n                _context4.next = 11;\n                break;\n\n              case 10:\n                return _context4.abrupt(\"return\", false);\n\n              case 11:\n                return _context4.abrupt(\"return\", this.writeNavStateRoot(segments, direction));\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function onPopState() {\n        return _onPopState.apply(this, arguments);\n      }\n\n      return onPopState;\n    }()\n  }, {\n    key: \"onBackButton\",\n    value: function onBackButton(ev) {\n      var _this2 = this;\n\n      ev.detail.register(0, function (processNextHandler) {\n        _this2.back();\n\n        processNextHandler();\n      });\n    }\n    /** @internal */\n\n  }, {\n    key: \"canTransition\",\n    value: function () {\n      var _canTransition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var canProceed;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.runGuards();\n\n              case 2:\n                canProceed = _context5.sent;\n\n                if (!(canProceed !== true)) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                if (!(typeof canProceed === 'object')) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", canProceed.redirect);\n\n              case 8:\n                return _context5.abrupt(\"return\", false);\n\n              case 9:\n                return _context5.abrupt(\"return\", true);\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function canTransition() {\n        return _canTransition.apply(this, arguments);\n      }\n\n      return canTransition;\n    }()\n    /**\n     * Navigate to the specified path.\n     *\n     * @param path The path to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n\n  }, {\n    key: \"push\",\n    value: function () {\n      var _push = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(path) {\n        var direction,\n            animation,\n            _a,\n            currentPath,\n            url,\n            parsedPath,\n            canProceed,\n            _args6 = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                direction = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : 'forward';\n                animation = _args6.length > 2 ? _args6[2] : undefined;\n\n                if (path.startsWith('.')) {\n                  currentPath = (_a = this.previousPath) !== null && _a !== void 0 ? _a : '/'; // Convert currentPath to an URL by pre-pending a protocol and a host to resolve the relative path.\n\n                  url = new URL(path, \"https://host/\".concat(currentPath));\n                  path = url.pathname + url.search;\n                }\n\n                parsedPath = parsePath(path);\n                _context6.next = 6;\n                return this.runGuards(parsedPath.segments);\n\n              case 6:\n                canProceed = _context6.sent;\n\n                if (!(canProceed !== true)) {\n                  _context6.next = 13;\n                  break;\n                }\n\n                if (!(typeof canProceed === 'object')) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                parsedPath = parsePath(canProceed.redirect);\n                _context6.next = 13;\n                break;\n\n              case 12:\n                return _context6.abrupt(\"return\", false);\n\n              case 13:\n                this.setSegments(parsedPath.segments, direction, parsedPath.queryString);\n                return _context6.abrupt(\"return\", this.writeNavStateRoot(parsedPath.segments, direction, animation));\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function push(_x6) {\n        return _push.apply(this, arguments);\n      }\n\n      return push;\n    }()\n    /** Go back to previous page in the window.history. */\n\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n      return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n\n  }, {\n    key: \"printDebug\",\n    value: function () {\n      var _printDebug = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                printRoutes(readRoutes(this.el));\n                printRedirects(readRedirects(this.el));\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function printDebug() {\n        return _printDebug.apply(this, arguments);\n      }\n\n      return printDebug;\n    }()\n    /** @internal */\n\n  }, {\n    key: \"navChanged\",\n    value: function () {\n      var _navChanged = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(direction) {\n        var _yield$readNavState, ids, outlet, routes, chain, segments;\n\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!this.busy) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                console.warn('[ion-router] router is busy, navChanged was cancelled');\n                return _context8.abrupt(\"return\", false);\n\n              case 3:\n                _context8.next = 5;\n                return readNavState(window.document.body);\n\n              case 5:\n                _yield$readNavState = _context8.sent;\n                ids = _yield$readNavState.ids;\n                outlet = _yield$readNavState.outlet;\n                routes = readRoutes(this.el);\n                chain = findChainForIDs(ids, routes);\n\n                if (chain) {\n                  _context8.next = 13;\n                  break;\n                }\n\n                console.warn('[ion-router] no matching URL for ', ids.map(function (i) {\n                  return i.id;\n                }));\n                return _context8.abrupt(\"return\", false);\n\n              case 13:\n                segments = chainToSegments(chain);\n\n                if (segments) {\n                  _context8.next = 17;\n                  break;\n                }\n\n                console.warn('[ion-router] router could not match path because some required param is missing');\n                return _context8.abrupt(\"return\", false);\n\n              case 17:\n                this.setSegments(segments, direction);\n                _context8.next = 20;\n                return this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, segments, null, ids.length);\n\n              case 20:\n                return _context8.abrupt(\"return\", true);\n\n              case 21:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function navChanged(_x7) {\n        return _navChanged.apply(this, arguments);\n      }\n\n      return navChanged;\n    }()\n    /** This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes. */\n\n  }, {\n    key: \"onRedirectChanged\",\n    value: function onRedirectChanged() {\n      var segments = this.getSegments();\n\n      if (segments && findRouteRedirect(segments, readRedirects(this.el))) {\n        this.writeNavStateRoot(segments, ROUTER_INTENT_NONE);\n      }\n    }\n    /** This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes. */\n\n  }, {\n    key: \"onRoutesChanged\",\n    value: function onRoutesChanged() {\n      return this.writeNavStateRoot(this.getSegments(), ROUTER_INTENT_NONE);\n    }\n  }, {\n    key: \"historyDirection\",\n    value: function historyDirection() {\n      var _a;\n\n      var win = window;\n\n      if (win.history.state === null) {\n        this.state++;\n        win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n      }\n\n      var state = win.history.state;\n      var lastState = this.lastState;\n      this.lastState = state;\n\n      if (state > lastState || state >= lastState && lastState > 0) {\n        return ROUTER_INTENT_FORWARD;\n      }\n\n      if (state < lastState) {\n        return ROUTER_INTENT_BACK;\n      }\n\n      return ROUTER_INTENT_NONE;\n    }\n  }, {\n    key: \"writeNavStateRoot\",\n    value: function () {\n      var _writeNavStateRoot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(segments, direction, animation) {\n        var redirects, redirect, redirectFrom, _redirect$to, toSegments, queryString, routes, chain;\n\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (segments) {\n                  _context9.next = 3;\n                  break;\n                }\n\n                console.error('[ion-router] URL is not part of the routing set');\n                return _context9.abrupt(\"return\", false);\n\n              case 3:\n                // lookup redirect rule\n                redirects = readRedirects(this.el);\n                redirect = findRouteRedirect(segments, redirects);\n                redirectFrom = null;\n\n                if (redirect) {\n                  _redirect$to = redirect.to, toSegments = _redirect$to.segments, queryString = _redirect$to.queryString;\n                  this.setSegments(toSegments, direction, queryString);\n                  redirectFrom = redirect.from;\n                  segments = toSegments;\n                } // lookup route chain\n\n\n                routes = readRoutes(this.el);\n                chain = findChainForSegments(segments, routes);\n\n                if (chain) {\n                  _context9.next = 12;\n                  break;\n                }\n\n                console.error('[ion-router] the path does not match any route');\n                return _context9.abrupt(\"return\", false);\n\n              case 12:\n                return _context9.abrupt(\"return\", this.safeWriteNavState(document.body, chain, direction, segments, redirectFrom, 0, animation));\n\n              case 13:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function writeNavStateRoot(_x8, _x9, _x10) {\n        return _writeNavStateRoot.apply(this, arguments);\n      }\n\n      return writeNavStateRoot;\n    }()\n  }, {\n    key: \"safeWriteNavState\",\n    value: function () {\n      var _safeWriteNavState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(node, chain, direction, segments, redirectFrom) {\n        var index,\n            animation,\n            unlock,\n            changed,\n            _args10 = arguments;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                index = _args10.length > 5 && _args10[5] !== undefined ? _args10[5] : 0;\n                animation = _args10.length > 6 ? _args10[6] : undefined;\n                _context10.next = 4;\n                return this.lock();\n\n              case 4:\n                unlock = _context10.sent;\n                changed = false;\n                _context10.prev = 6;\n                _context10.next = 9;\n                return this.writeNavState(node, chain, direction, segments, redirectFrom, index, animation);\n\n              case 9:\n                changed = _context10.sent;\n                _context10.next = 15;\n                break;\n\n              case 12:\n                _context10.prev = 12;\n                _context10.t0 = _context10[\"catch\"](6);\n                console.error(_context10.t0);\n\n              case 15:\n                unlock();\n                return _context10.abrupt(\"return\", changed);\n\n              case 17:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[6, 12]]);\n      }));\n\n      function safeWriteNavState(_x11, _x12, _x13, _x14, _x15) {\n        return _safeWriteNavState.apply(this, arguments);\n      }\n\n      return safeWriteNavState;\n    }()\n  }, {\n    key: \"lock\",\n    value: function () {\n      var _lock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var p, resolve;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                p = this.waitPromise;\n                this.waitPromise = new Promise(function (r) {\n                  return resolve = r;\n                });\n\n                if (!(p !== undefined)) {\n                  _context11.next = 5;\n                  break;\n                }\n\n                _context11.next = 5;\n                return p;\n\n              case 5:\n                return _context11.abrupt(\"return\", resolve);\n\n              case 6:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function lock() {\n        return _lock.apply(this, arguments);\n      }\n\n      return lock;\n    }()\n    /**\n     * Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n     *\n     * When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n     * Otherwise the beforeEnterHook hook of the target route is executed.\n     */\n\n  }, {\n    key: \"runGuards\",\n    value: function () {\n      var _runGuards = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        var to,\n            from,\n            routes,\n            fromChain,\n            beforeLeaveHook,\n            canLeave,\n            toChain,\n            beforeEnterHook,\n            _args12 = arguments;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                to = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : this.getSegments();\n                from = _args12.length > 1 ? _args12[1] : undefined;\n\n                if (from === undefined) {\n                  from = parsePath(this.previousPath).segments;\n                }\n\n                if (!(!to || !from)) {\n                  _context12.next = 5;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", true);\n\n              case 5:\n                routes = readRoutes(this.el);\n                fromChain = findChainForSegments(from, routes);\n                beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n\n                if (!beforeLeaveHook) {\n                  _context12.next = 14;\n                  break;\n                }\n\n                _context12.next = 11;\n                return beforeLeaveHook();\n\n              case 11:\n                _context12.t0 = _context12.sent;\n                _context12.next = 15;\n                break;\n\n              case 14:\n                _context12.t0 = true;\n\n              case 15:\n                canLeave = _context12.t0;\n\n                if (!(canLeave === false || typeof canLeave === 'object')) {\n                  _context12.next = 18;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", canLeave);\n\n              case 18:\n                toChain = findChainForSegments(to, routes);\n                beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n                return _context12.abrupt(\"return\", beforeEnterHook ? beforeEnterHook() : true);\n\n              case 21:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function runGuards() {\n        return _runGuards.apply(this, arguments);\n      }\n\n      return runGuards;\n    }()\n  }, {\n    key: \"writeNavState\",\n    value: function () {\n      var _writeNavState2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(node, chain, direction, segments, redirectFrom) {\n        var index,\n            animation,\n            routeEvent,\n            changed,\n            _args13 = arguments;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                index = _args13.length > 5 && _args13[5] !== undefined ? _args13[5] : 0;\n                animation = _args13.length > 6 ? _args13[6] : undefined;\n\n                if (!this.busy) {\n                  _context13.next = 5;\n                  break;\n                }\n\n                console.warn('[ion-router] router is busy, transition was cancelled');\n                return _context13.abrupt(\"return\", false);\n\n              case 5:\n                this.busy = true; // generate route event and emit will change\n\n                routeEvent = this.routeChangeEvent(segments, redirectFrom);\n\n                if (routeEvent) {\n                  this.ionRouteWillChange.emit(routeEvent);\n                }\n\n                _context13.next = 10;\n                return _writeNavState(node, chain, direction, index, false, animation);\n\n              case 10:\n                changed = _context13.sent;\n                this.busy = false; // emit did change\n\n                if (routeEvent) {\n                  this.ionRouteDidChange.emit(routeEvent);\n                }\n\n                return _context13.abrupt(\"return\", changed);\n\n              case 14:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function writeNavState(_x16, _x17, _x18, _x19, _x20) {\n        return _writeNavState2.apply(this, arguments);\n      }\n\n      return writeNavState;\n    }()\n  }, {\n    key: \"setSegments\",\n    value: function setSegments(segments, direction, queryString) {\n      this.state++;\n      writeSegments(window.history, this.root, this.useHash, segments, direction, this.state, queryString);\n    }\n  }, {\n    key: \"getSegments\",\n    value: function getSegments() {\n      return readSegments(window.location, this.root, this.useHash);\n    }\n  }, {\n    key: \"routeChangeEvent\",\n    value: function routeChangeEvent(toSegments, redirectFromSegments) {\n      var from = this.previousPath;\n      var to = generatePath(toSegments);\n      this.previousPath = to;\n\n      if (to === from) {\n        return null;\n      }\n\n      var redirectedFrom = redirectFromSegments ? generatePath(redirectFromSegments) : null;\n      return {\n        from: from,\n        redirectedFrom: redirectedFrom,\n        to: to\n      };\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }]);\n\n  return _class;\n}(HTMLElement), [0, \"ion-router\", {\n  \"root\": [1],\n  \"useHash\": [4, \"use-hash\"],\n  \"canTransition\": [64],\n  \"push\": [64],\n  \"back\": [64],\n  \"printDebug\": [64],\n  \"navChanged\": [64]\n}, [[8, \"popstate\", \"onPopState\"], [4, \"ionBackButton\", \"onBackButton\"]]]);\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  var components = [\"ion-router\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-router\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Router);\n        }\n\n        break;\n    }\n  });\n}\n\nvar IonRouter = Router;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonRouter, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","c","componentOnReady","o","debounce","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","length","join","generateUrl","useHash","queryString","url","undefined","writeSegments","history","root","direction","state","parsePath","pushState","replaceState","chainToSegments","chain","route","segment","param","params","slice","push","removePrefix","prefix","i","readSegments","loc","pathname","hash","qsStart","indexOf","substring","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","OUTLET_SELECTOR","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","Object","keys","pathWithParams","key","j","matchesSegments","inputSegments","RouterSegments","matchesDefault","allparams","chainSegments","data","next","mergeParams","beforeEnter","beforeLeave","a","b","assign","findChainForIDs","chains","match","maxMatches","_a","findChainForSegments","bestScore","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","__registerHost","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","runGuards","getSegments","canProceed","setSegments","writeNavStateRoot","onRoutesChanged","onRedirectChanged","bind","historyDirection","ev","detail","register","processNextHandler","back","startsWith","currentPath","URL","search","parsedPath","waitPromise","warn","safeWriteNavState","win","title","location","href","redirectFrom","toSegments","lock","unlock","p","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","routeEvent","routeChangeEvent","emit","redirectFromSegments","redirectedFrom","defineCustomElement$1","customElements","components","get","define","IonRouter","defineCustomElement"],"sources":["/mnt/disk2/ionicapps/elearn/node_modules/@ionic/core/components/ion-router.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent } from '@stencil/core/internal/client';\nimport { c as componentOnReady, o as debounce } from './helpers.js';\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\n/** Join the non empty segments with \"/\". */\nconst generatePath = (segments) => {\n  const path = segments.filter((s) => s.length > 0).join('/');\n  return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n  let url = generatePath(segments);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n  return url;\n};\nconst writeSegments = (history, root, useHash, segments, direction, state, queryString) => {\n  const url = generateUrl([...parsePath(root).segments, ...segments], useHash, queryString);\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\n/**\n * Transforms a chain to a list of segments.\n *\n * Notes:\n * - parameter segments of the form :param are replaced with their value,\n * - null is returned when a value is missing for any parameter segment.\n */\nconst chainToSegments = (chain) => {\n  const segments = [];\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        segments.push(param);\n      }\n      else if (segment !== '') {\n        segments.push(segment);\n      }\n    }\n  }\n  return segments;\n};\n/**\n * Removes the prefix segments from the path segments.\n *\n * Return:\n * - null when the path segments do not start with the passed prefix,\n * - the path segments after the prefix otherwise.\n */\nconst removePrefix = (prefix, segments) => {\n  if (prefix.length > segments.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return segments;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== segments[i]) {\n      return null;\n    }\n  }\n  if (segments.length === prefix.length) {\n    return [''];\n  }\n  return segments.slice(prefix.length);\n};\nconst readSegments = (loc, root, useHash) => {\n  const prefix = parsePath(root).segments;\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  const segments = parsePath(pathname).segments;\n  return removePrefix(prefix, segments);\n};\n/**\n * Parses the path to:\n * - segments an array of '/' separated parts,\n * - queryString (undefined when no query string).\n */\nconst parsePath = (path) => {\n  let segments = [''];\n  let queryString;\n  if (path != null) {\n    const qsStart = path.indexOf('?');\n    if (qsStart > -1) {\n      queryString = path.substring(qsStart + 1);\n      path = path.substring(0, qsStart);\n    }\n    segments = path\n      .split('/')\n      .map((s) => s.trim())\n      .filter((s) => s.length > 0);\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n  return { segments, queryString };\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const segments = [];\n    chain.forEach((r) => segments.push(...r.segments));\n    const ids = chain.map((r) => r.id);\n    console.debug(`%c ${generatePath(segments)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\n/**\n * Activates the passed route chain.\n *\n * There must be exactly one outlet per route entry in the chain.\n *\n * The methods calls setRouteId on each of the outlet with the corresponding route entry in the chain.\n * setRouteId will create or select the view in the outlet.\n */\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise((resolve) => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\n/**\n * Recursively walks the outlet in the DOM.\n *\n * The function returns a list of RouteID corresponding to each of the outlet and the last outlet without a RouteID.\n */\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // eslint-disable-next-line no-cond-assign\n  while ((outlet = searchNavNode(node))) {\n    const id = await outlet.getRouteId();\n    if (id) {\n      node = id.element;\n      id.element = undefined;\n      ids.push(id);\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve) => {\n    window.addEventListener('ionNavWillLoad', () => resolve(), { once: true });\n  });\n};\n/** Selector for all the outlets supported by the router. */\nconst OUTLET_SELECTOR = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(OUTLET_SELECTOR)) {\n    return root;\n  }\n  const outlet = root.querySelector(OUTLET_SELECTOR);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n\n/**\n * Returns whether the given redirect matches the given path segments.\n *\n * A redirect matches when the segments of the path and redirect.from are equal.\n * Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n * The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\n */\nconst matchesRedirect = (segments, redirect) => {\n  const { from, to } = redirect;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > segments.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== segments[i]) {\n      return false;\n    }\n  }\n  return from.length === segments.length;\n};\n/** Returns the first redirect matching the path segments or undefined when no match found. */\nconst findRouteRedirect = (segments, redirects) => {\n  return redirects.find((redirect) => matchesRedirect(segments, redirect));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let score = 0;\n  for (let i = 0; i < len; i++) {\n    const routeId = ids[i];\n    const routeChain = chain[i];\n    // Skip results where the route id does not match the chain at the same index\n    if (routeId.id.toLowerCase() !== routeChain.id) {\n      break;\n    }\n    if (routeId.params) {\n      const routeIdParams = Object.keys(routeId.params);\n      // Only compare routes with the chain that have the same number of parameters.\n      if (routeIdParams.length === routeChain.segments.length) {\n        // Maps the route's params into a path based on the path variable names,\n        // to compare against the route chain format.\n        //\n        // Before:\n        // ```ts\n        // {\n        //  params: {\n        //    s1: 'a',\n        //    s2: 'b'\n        //  }\n        // }\n        // ```\n        //\n        // After:\n        // ```ts\n        // [':s1',':s2']\n        // ```\n        //\n        const pathWithParams = routeIdParams.map((key) => `:${key}`);\n        for (let j = 0; j < pathWithParams.length; j++) {\n          // Skip results where the path variable is not a match\n          if (pathWithParams[j].toLowerCase() !== routeChain.segments[j]) {\n            break;\n          }\n          // Weight path matches for the same index higher.\n          score++;\n        }\n      }\n    }\n    // Weight id matches\n    score++;\n  }\n  return score;\n};\n/**\n * Matches the segments against the chain.\n *\n * Returns:\n * - null when there is no match,\n * - a chain with the params properties updated with the parameter segments on match.\n */\nconst matchesSegments = (segments, chain) => {\n  const inputSegments = new RouterSegments(segments);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const chainSegments = chain[i].segments;\n    if (chainSegments[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of chainSegments) {\n        const data = inputSegments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = matchesDefault ? matchesDefault === (inputSegments.next() === '') : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      segments: route.segments,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave,\n    }));\n  }\n  return chain;\n};\n/**\n * Merges the route parameter objects.\n * Returns undefined when both parameters are undefined.\n */\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\n/**\n * Finds the best match for the ids in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the RouteIDs.\n * That is they contain both the componentProps of the <ion-route> and the parameter segment.\n */\nconst findChainForIDs = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  for (const chain of chains) {\n    const score = matchesIDs(ids, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => {\n      var _a;\n      return ({\n        id: route.id,\n        segments: route.segments,\n        params: mergeParams(route.params, (_a = ids[i]) === null || _a === void 0 ? void 0 : _a.params),\n      });\n    });\n  }\n  return null;\n};\n/**\n * Finds the best match for the segments in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the segments.\n * That is they contain both the componentProps of the <ion-route> and the parameter segments.\n */\nconst findChainForSegments = (segments, chains) => {\n  let match = null;\n  let bestScore = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesSegments(segments, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > bestScore) {\n        bestScore = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\n/**\n * Computes the priority of a chain.\n *\n * Parameter segments are given a lower priority over fixed segments.\n *\n * Considering the following 2 chains matching the path /path/to/page:\n * - /path/to/:where\n * - /path/to/page\n *\n * The second one will be given a higher priority because \"page\" is a fixed segment (vs \":where\", a parameter segment).\n */\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (segment !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(segments) {\n    this.segments = segments.slice();\n  }\n  next() {\n    if (this.segments.length > 0) {\n      return this.segments.shift();\n    }\n    return '';\n  }\n}\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\n/**\n * Extracts the redirects (that is <ion-route-redirect> elements inside the root).\n *\n * The redirects are returned as a list of RouteRedirect.\n */\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter((el) => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map((el) => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\n/**\n * Extracts all the routes (that is <ion-route> elements inside the root).\n *\n * The routes are returned as a list of chains - the flattened tree.\n */\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\n/**\n * Reads the route nodes as a tree modeled after the DOM tree of <ion-route> elements.\n *\n * Note: routes without a component are ignored together with their children.\n */\nconst readRouteNodes = (node) => {\n  return Array.from(node.children)\n    .filter((el) => el.tagName === 'ION-ROUTE' && el.component)\n    .map((el) => {\n    const component = readProp(el, 'component');\n    return {\n      segments: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el),\n    };\n  });\n};\n/**\n * Flattens a RouterTree in a list of chains.\n *\n * Each chain represents a path from the root node to a terminal node.\n */\nconst flattenRouterTree = (nodes) => {\n  const chains = [];\n  for (const node of nodes) {\n    flattenNode([], chains, node);\n  }\n  return chains;\n};\n/** Flattens a route node recursively and push each branch to the chains list. */\nconst flattenNode = (chain, chains, node) => {\n  chain = [\n    ...chain,\n    {\n      id: node.id,\n      segments: node.segments,\n      params: node.params,\n      beforeLeave: node.beforeLeave,\n      beforeEnter: node.beforeEnter,\n    },\n  ];\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n  for (const child of node.children) {\n    flattenNode(chain, chains, child);\n  }\n};\n\nconst Router = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    await waitUntilNavNode();\n    const canProceed = await this.runGuards(this.getSegments());\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        const { redirect } = canProceed;\n        const path = parsePath(redirect);\n        this.setSegments(path.segments, ROUTER_INTENT_NONE, path.queryString);\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n      }\n    }\n    else {\n      await this.onRoutesChanged();\n    }\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let segments = this.getSegments();\n    const canProceed = await this.runGuards(segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        segments = parsePath(canProceed.redirect).segments;\n      }\n      else {\n        return false;\n      }\n    }\n    return this.writeNavStateRoot(segments, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, (processNextHandler) => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified path.\n   *\n   * @param path The path to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(path, direction = 'forward', animation) {\n    var _a;\n    if (path.startsWith('.')) {\n      const currentPath = (_a = this.previousPath) !== null && _a !== void 0 ? _a : '/';\n      // Convert currentPath to an URL by pre-pending a protocol and a host to resolve the relative path.\n      const url = new URL(path, `https://host/${currentPath}`);\n      path = url.pathname + url.search;\n    }\n    let parsedPath = parsePath(path);\n    const canProceed = await this.runGuards(parsedPath.segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        parsedPath = parsePath(canProceed.redirect);\n      }\n      else {\n        return false;\n      }\n    }\n    this.setSegments(parsedPath.segments, direction, parsedPath.queryString);\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n  }\n  /** Go back to previous page in the window.history. */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = findChainForIDs(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map((i) => i.id));\n      return false;\n    }\n    const segments = chainToSegments(chain);\n    if (!segments) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    this.setSegments(segments, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, segments, null, ids.length);\n    return true;\n  }\n  /** This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes. */\n  onRedirectChanged() {\n    const segments = this.getSegments();\n    if (segments && findRouteRedirect(segments, readRedirects(this.el))) {\n      this.writeNavStateRoot(segments, ROUTER_INTENT_NONE);\n    }\n  }\n  /** This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes. */\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getSegments(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    var _a;\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    return ROUTER_INTENT_NONE;\n  }\n  async writeNavStateRoot(segments, direction, animation) {\n    if (!segments) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = findRouteRedirect(segments, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      const { segments: toSegments, queryString } = redirect.to;\n      this.setSegments(toSegments, direction, queryString);\n      redirectFrom = redirect.from;\n      segments = toSegments;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = findChainForSegments(segments, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, segments, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, segments, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise((r) => (resolve = r));\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  /**\n   * Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n   *\n   * When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n   * Otherwise the beforeEnterHook hook of the target route is executed.\n   */\n  async runGuards(to = this.getSegments(), from) {\n    if (from === undefined) {\n      from = parsePath(this.previousPath).segments;\n    }\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const fromChain = findChainForSegments(from, routes);\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const toChain = findChainForSegments(to, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    return beforeEnterHook ? beforeEnterHook() : true;\n  }\n  async writeNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(segments, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setSegments(segments, direction, queryString) {\n    this.state++;\n    writeSegments(window.history, this.root, this.useHash, segments, direction, this.state, queryString);\n  }\n  getSegments() {\n    return readSegments(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(toSegments, redirectFromSegments) {\n    const from = this.previousPath;\n    const to = generatePath(toSegments);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromSegments ? generatePath(redirectFromSegments) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return this; }\n}, [0, \"ion-router\", {\n    \"root\": [1],\n    \"useHash\": [4, \"use-hash\"],\n    \"canTransition\": [64],\n    \"push\": [64],\n    \"back\": [64],\n    \"printDebug\": [64],\n    \"navChanged\": [64]\n  }, [[8, \"popstate\", \"onPopState\"], [4, \"ionBackButton\", \"onBackButton\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-router\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-router\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Router);\n      }\n      break;\n  } });\n}\n\nconst IonRouter = Router;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonRouter, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}