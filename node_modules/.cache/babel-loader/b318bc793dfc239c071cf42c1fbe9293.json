{"ast":null,"code":"import _slicedToArray from\"/home/shama/webapps/ionicblog/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useMemo,useState,useEffect}from'react';import MaterialReactTable from'material-react-table';import{Box,IconButton,Tooltip}from'@mui/material';import{Autorenew}from'@mui/icons-material';import baseUrl,{api}from'../../pages/Urls';import{IonItem,IonLabel}from'@ionic/react';import swal from'sweetalert';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuizAttemptedList=function QuizAttemptedList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),attemptList=_useState2[0],setAttemptList=_useState2[1];var fetchAtmList=function fetchAtmList(){fetch(\"\".concat(baseUrl).concat(api.attemptHistory).concat(props.courseId),{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem(\"token\"))}}).then(function(resp){return resp.json();}).then(function(result){setAttemptList(result);});};useEffect(function(){fetchAtmList();},[]);var columns=useMemo(function(){return[{accessorKey:'quiz_name',header:'Quiz Name'},{accessorKey:'name',header:'User Name'},{accessorFn:function accessorFn(row){return\"\".concat(row.total_point,\" / \").concat(row.total_question);},id:'total_point',header:'Total Mark'}];},[]);var reAttempt=function reAttempt(id){if(window.confirm('Are you sure?')){fetch(\"\".concat(baseUrl).concat(api.reAttempt).concat(id),{method:'PUT',headers:{Accept:'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem(\"token\"))}}).then(function(res){if(res.status===200){fetchAtmList();swal({title:\"Success!\",text:\"Quiz reattempted successfully\",icon:\"success\"});}}).catch(function(error){return console.log('error',error);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-2\",children:[/*#__PURE__*/_jsx(IonItem,{children:/*#__PURE__*/_jsx(IonLabel,{color:\"primary\",children:/*#__PURE__*/_jsx(\"h1\",{children:props.course_name})})}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-center mb-2\",children:\"Quiz Attempted List\"}),/*#__PURE__*/_jsx(MaterialReactTable,{columns:columns,data:attemptList,getRowId:function getRowId(row){return\"\".concat(row.id);},enableRowActions:true,enableRowNumbers:true,enableColumnOrdering:true,renderRowActions:function renderRowActions(_ref){var row=_ref.row,table=_ref.table;return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',gap:'1rem'},children:/*#__PURE__*/_jsx(Tooltip,{arrow:true,placement:\"right\",title:\"Re-attempt\",children:/*#__PURE__*/_jsx(IconButton,{style:{color:\"green\"},onClick:function onClick(){return reAttempt(row.id);},children:/*#__PURE__*/_jsx(Autorenew,{})})})});}})]});};export default QuizAttemptedList;","map":{"version":3,"names":["React","useMemo","useState","useEffect","MaterialReactTable","Box","IconButton","Tooltip","Autorenew","baseUrl","api","IonItem","IonLabel","swal","QuizAttemptedList","props","attemptList","setAttemptList","fetchAtmList","fetch","attemptHistory","courseId","method","headers","Accept","localStorage","getItem","then","resp","json","result","columns","accessorKey","header","accessorFn","row","total_point","total_question","id","reAttempt","window","confirm","res","status","title","text","icon","catch","error","console","log","course_name","table","display","gap","color"],"sources":["/home/shama/webapps/ionicblog/src/pages/teacher/QuizAttemptedList.tsx"],"sourcesContent":["import React, { FC, useMemo, useState, useEffect } from 'react';\nimport MaterialReactTable, {\n    MaterialReactTableProps,\n    MRT_Cell,\n    MRT_ColumnDef,\n    MRT_Row,\n} from 'material-react-table';\nimport {\n    Box,\n    IconButton,\n    Tooltip,\n} from '@mui/material';\nimport { Autorenew } from '@mui/icons-material';\nimport baseUrl, { api } from '../../pages/Urls';\nimport { IonContent, IonItem, IonLabel } from '@ionic/react';\nimport swal from 'sweetalert';\ntype listData = {\n    id: string;\n    quiz_name: string;\n    name: string;\n    total_point: string;\n    total_question: string;\n\n};\n\nconst QuizAttemptedList: FC<{\n\n    courseId: string\n    course_name: string\n}> = (props) => {\n    const [attemptList, setAttemptList] = useState([]);\n\n    const fetchAtmList = () => {\n        fetch(`${baseUrl}${api.attemptHistory}${props.courseId}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\n            }\n        })\n            .then(resp => resp.json())\n            .then(result => {\n                setAttemptList(result)\n\n            })\n    }\n    useEffect(() => {\n        fetchAtmList();\n\n    }, [])\n\n    const columns = useMemo<MRT_ColumnDef<listData>[]>(\n        () => [\n\n\n            {\n                accessorKey: 'quiz_name',\n                header: 'Quiz Name',\n\n            },\n            {\n                accessorKey: 'name',\n                header: 'User Name',\n\n            },\n            {\n\n                accessorFn: (row) => `${row.total_point} / ${row.total_question}`,\n                id: 'total_point',\n                header: 'Total Mark',\n\n            },\n\n\n\n        ],\n        [],\n    );\n\n    const reAttempt = (id: any) => {\n        if (window.confirm('Are you sure?')) {\n\n            fetch(`${baseUrl}${api.reAttempt}${id}`, {\n                method: 'PUT',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\n                },\n\n            }).then(res => {\n                if (res.status === 200) {\n\n                    fetchAtmList();\n                    swal({\n                        title: \"Success!\",\n                        text: \"Quiz reattempted successfully\",\n                        icon: \"success\",\n                    });\n                }\n\n            })\n                .catch(error => console.log('error', error));\n\n        }\n    }\n    return (\n\n        <div className=\"container mt-2\">\n            <IonItem>\n                <IonLabel color=\"primary\">\n                    <h1>{props.course_name}</h1>\n                </IonLabel>\n            </IonItem>\n            <h1 className='text-center mb-2'>Quiz Attempted List</h1>\n            <MaterialReactTable\n                columns={columns}\n                data={attemptList}\n                getRowId={(row => `${row.id}`)}\n                enableRowActions\n                enableRowNumbers\n                enableColumnOrdering\n                renderRowActions={({ row, table }) => (\n                    <Box sx={{ display: 'flex', gap: '1rem' }}>\n\n                        <Tooltip arrow placement=\"right\" title=\"Re-attempt\">\n                            <IconButton style={{ color: \"green\" }} onClick={() => reAttempt(row.id)}>\n                                <Autorenew />\n                            </IconButton>\n                        </Tooltip>\n                    </Box>\n                )}\n\n            />\n\n        </div>\n\n\n    );\n\n};\n\nexport default QuizAttemptedList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}