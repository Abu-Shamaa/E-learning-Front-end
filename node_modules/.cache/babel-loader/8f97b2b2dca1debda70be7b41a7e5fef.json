{"ast":null,"code":"var _jsxFileName = \"/home/shama/webapps/ionicblog/src/pages/teacher/CourseList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from 'react';\nimport MaterialReactTable from 'material-react-table';\nimport { Box, IconButton, Tooltip } from '@mui/material';\nimport { Input } from '@mui/icons-material';\nimport baseUrl, { api } from '../../pages/Urls';\nimport { IonContent } from '@ionic/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseList = () => {\n  _s();\n\n  const [course, setCourse] = useState([]);\n\n  const fetchCourse = () => {\n    fetch(`${baseUrl}${api.allCourse}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(resp => resp.json()).then(resp => {\n      setCourse(resp.reverse());\n    });\n  };\n\n  useEffect(() => {\n    fetchCourse();\n  }, []);\n  const columns = useMemo(() => [{\n    accessorKey: 'course_name',\n    header: 'Course Name'\n  }, {\n    accessorKey: 'description',\n    header: 'Description'\n  }], []);\n\n  const enroleCourse = id => {\n    if (window.confirm('Want to enrole this course?')) {\n      let data = {\n        'course_id': id\n      };\n      fetch(`${baseUrl}${api.courseEnrole}`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        if (response.status === 200) {\n          fetchCourse();\n        } else {\n          throw Error([response.status, response.statusText].join(' '));\n        }\n      }).catch(error => console.log('error', error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonContent, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mb-2\",\n        children: \"List of Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), localStorage.getItem(\"role\") == 'ar_instructor' ? /*#__PURE__*/_jsxDEV(MaterialReactTable, {\n        columns: columns,\n        data: course,\n        getRowId: row => `${row.id}`,\n        enableRowNumbers: true,\n        enableColumnOrdering: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(MaterialReactTable, {\n        columns: columns,\n        data: course,\n        getRowId: row => `${row.id}`,\n        enableRowActions: true,\n        enableRowNumbers: true,\n        enableColumnOrdering: true,\n        renderRowActions: _ref => {\n          let {\n            row,\n            table\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              arrow: true,\n              placement: \"right\",\n              title: \"Enrole-course\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  color: \"green\"\n                },\n                onClick: () => enroleCourse(row.id),\n                children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CourseList, \"uZv8/ddqj1J0sKWb94te8XkJxtY=\");\n\n_c = CourseList;\nexport default CourseList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","MaterialReactTable","Box","IconButton","Tooltip","Input","baseUrl","api","IonContent","CourseList","course","setCourse","fetchCourse","fetch","allCourse","method","headers","Accept","localStorage","getItem","then","resp","json","reverse","columns","accessorKey","header","enroleCourse","id","window","confirm","data","courseEnrole","body","JSON","stringify","response","status","Error","statusText","join","catch","error","console","log","row","table","display","gap","color"],"sources":["/home/shama/webapps/ionicblog/src/pages/teacher/CourseList.tsx"],"sourcesContent":["import React, { FC, useMemo, useState, useEffect } from 'react';\nimport MaterialReactTable, {\n    MRT_ColumnDef,\n\n} from 'material-react-table';\nimport {\n    Box,\n    IconButton,\n    Tooltip,\n} from '@mui/material';\nimport { Input } from '@mui/icons-material';\nimport baseUrl, { api } from '../../pages/Urls';\nimport { IonContent } from '@ionic/react';\nimport swal from 'sweetalert';\ntype CourseData = {\n    id: string;\n    course_name: string;\n    description: string;\n\n};\n\n\nconst CourseList: FC = () => {\n    const [course, setCourse] = useState([]);\n\n    const fetchCourse = () => {\n        fetch(`${baseUrl}${api.allCourse}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => {\n                setCourse(resp.reverse())\n            })\n    }\n    useEffect(() => {\n        fetchCourse();\n\n    }, [])\n\n    const columns = useMemo<MRT_ColumnDef<CourseData>[]>(\n        () => [\n\n\n            {\n                accessorKey: 'course_name',\n                header: 'Course Name',\n\n            },\n            {\n                accessorKey: 'description',\n                header: 'Description',\n\n            },\n\n        ],\n        [],\n    );\n\n    const enroleCourse = (id: any) => {\n        if (window.confirm('Want to enrole this course?')) {\n\n            let data = {\n                'course_id': id,\n            }\n            fetch(`${baseUrl}${api.courseEnrole}`, {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify(data),\n\n            })\n\n                .then(response => {\n                    if (response.status === 200) {\n                        fetchCourse();\n                    }\n                    else {\n                        throw Error([response.status, response.statusText].join(' '));\n                    }\n                })\n\n                .catch(error => console.log('error', error));\n\n        }\n\n    }\n    return (\n        <IonContent>\n            <div className=\"container mt-5\">\n                <h1 className='text-center mb-2'>List of Courses</h1>\n                {localStorage.getItem(\"role\") == 'ar_instructor' ?\n                    <MaterialReactTable\n                        columns={columns}\n                        data={course}\n                        getRowId={(row => `${row.id}`)}\n                        enableRowNumbers\n                        enableColumnOrdering\n\n                    />\n                    :\n                    <MaterialReactTable\n                        columns={columns}\n                        data={course}\n                        getRowId={(row => `${row.id}`)}\n                        enableRowActions\n                        enableRowNumbers\n                        enableColumnOrdering\n                        renderRowActions={({ row, table }) => (\n                            <Box sx={{ display: 'flex', gap: '1rem' }}>\n\n                                <Tooltip arrow placement=\"right\" title=\"Enrole-course\">\n                                    <IconButton style={{ color: \"green\" }} onClick={() => enroleCourse(row.id)}>\n                                        <Input />\n                                    </IconButton>\n                                </Tooltip>\n\n                            </Box>\n                        )}\n\n                    />\n                }\n\n\n            </div>\n        </IonContent>\n\n    );\n\n};\n\nexport default CourseList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}