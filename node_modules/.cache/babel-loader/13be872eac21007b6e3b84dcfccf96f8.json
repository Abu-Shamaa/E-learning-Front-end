{"ast":null,"code":"var _jsxFileName = \"/home/shama/webapps/ionicblog/src/pages/admin/GroupTry.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from 'react';\nimport MaterialReactTable from 'material-react-table';\nimport baseUrl, { api } from '../../pages/Urls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//nested data is ok, see accessorKeys in ColumnDef below\nconst GroupComponent = () => {\n  _s();\n\n  const [group, setGroup] = useState([]);\n  useEffect(() => {\n    fetch(`${baseUrl}${api.allGroup}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(resp => resp.json()).then(resp => {\n      setGroup(resp.reverse());\n    });\n  }, []); //should be memoized or stable\n\n  const columns = useMemo(() => [{\n    accessorKey: 'id',\n    //normal accessorKey\n    header: 'ID'\n  }, {\n    accessorKey: 'name',\n    header: 'Name'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(MaterialReactTable, {\n    columns: columns,\n    data: group\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GroupComponent, \"DMq6Hhb6NXK3qlpnRpsfPA56btc=\");\n\n_c = GroupComponent;\nexport default GroupComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupComponent\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","MaterialReactTable","baseUrl","api","GroupComponent","group","setGroup","fetch","allGroup","method","headers","Accept","localStorage","getItem","then","resp","json","reverse","columns","accessorKey","header"],"sources":["/home/shama/webapps/ionicblog/src/pages/admin/GroupTry.tsx"],"sourcesContent":["import React, { FC, useMemo, useState, useEffect } from 'react';\nimport MaterialReactTable, { MRT_ColumnDef } from 'material-react-table';\nimport baseUrl, { api } from '../../pages/Urls';\ntype Group = {\n    id: string;\n    name: string;\n\n};\n\n//nested data is ok, see accessorKeys in ColumnDef below\n\n\nconst GroupComponent: FC = () => {\n    const [group, setGroup] = useState([])\n    useEffect(() => {\n        fetch(`${baseUrl}${api.allGroup}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => {\n                setGroup(resp.reverse())\n            })\n    }, [])\n    //should be memoized or stable\n    const columns = useMemo<MRT_ColumnDef<Group>[]>(\n        () => [\n\n            {\n                accessorKey: 'id', //normal accessorKey\n                header: 'ID',\n            },\n            {\n                accessorKey: 'name',\n                header: 'Name',\n            },\n\n        ],\n        [],\n    );\n\n    return <MaterialReactTable columns={columns} data={group} />;\n};\n\nexport default GroupComponent;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,OAApB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,kBAAP,MAAkD,sBAAlD;AACA,OAAOC,OAAP,IAAkBC,GAAlB,QAA6B,kBAA7B;;;AAOA;AAGA,MAAMC,cAAkB,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACAC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAE,GAAEL,OAAQ,GAAEC,GAAG,CAACK,QAAS,EAA3B,EAA8B;MAC/BC,MAAM,EAAE,KADuB;MAE/BC,OAAO,EAAE;QACLC,MAAM,EAAE,kBADH;QAEL,gBAAgB,kBAFX;QAGL,iBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;MAHpD;IAFsB,CAA9B,CAAL,CASKC,IATL,CASUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATlB,EAUKF,IAVL,CAUUC,IAAI,IAAI;MACVT,QAAQ,CAACS,IAAI,CAACE,OAAL,EAAD,CAAR;IACH,CAZL;EAaH,CAdQ,EAcN,EAdM,CAAT,CAF6B,CAiB7B;;EACA,MAAMC,OAAO,GAAGpB,OAAO,CACnB,MAAM,CAEF;IACIqB,WAAW,EAAE,IADjB;IACuB;IACnBC,MAAM,EAAE;EAFZ,CAFE,EAMF;IACID,WAAW,EAAE,MADjB;IAEIC,MAAM,EAAE;EAFZ,CANE,CADa,EAanB,EAbmB,CAAvB;EAgBA,oBAAO,QAAC,kBAAD;IAAoB,OAAO,EAAEF,OAA7B;IAAsC,IAAI,EAAEb;EAA5C;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAnCD;;GAAMD,c;;KAAAA,c;AAqCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}