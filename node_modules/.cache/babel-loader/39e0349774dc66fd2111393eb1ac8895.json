{"ast":null,"code":"/**\n * react-virtual\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport * as React from 'react';\nimport { observeElementRect, observeElementOffset, elementScroll, observeWindowRect, observeWindowOffset, windowScroll, Virtualizer } from '@tanstack/virtual-core';\nexport * from '@tanstack/virtual-core'; //\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nfunction useVirtualizerBase(options) {\n  var rerender = React.useReducer(function () {\n    return {};\n  }, {})[1];\n\n  var resolvedOptions = _extends({}, options, {\n    onChange: function onChange(instance) {\n      rerender();\n      options.onChange == null ? void 0 : options.onChange(instance);\n    }\n  });\n\n  var _React$useState = React.useState(function () {\n    return new Virtualizer(resolvedOptions);\n  }),\n      instance = _React$useState[0];\n\n  instance.setOptions(resolvedOptions);\n  React.useEffect(function () {\n    return instance._didMount();\n  }, []);\n  useIsomorphicLayoutEffect(function () {\n    return instance._willUpdate();\n  });\n  return instance;\n}\n\nfunction useVirtualizer(options) {\n  return useVirtualizerBase(_extends({\n    observeElementRect: observeElementRect,\n    observeElementOffset: observeElementOffset,\n    scrollToFn: elementScroll\n  }, options));\n}\n\nfunction useWindowVirtualizer(options) {\n  return useVirtualizerBase(_extends({\n    getScrollElement: function getScrollElement() {\n      return typeof window !== 'undefined' ? window : null;\n    },\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll\n  }, options));\n}\n\nexport { useVirtualizer, useWindowVirtualizer };","map":{"version":3,"mappings":";;;;;;;;;;;;;wCAcA;;AAEA,IAAMA,yBAAyB,GAC7B,OAAOC,MAAP,KAAkB,WAAlB,GAAgCC,KAAK,CAACC,eAAtC,GAAwDD,KAAK,CAACE,SADhE;;AAGA,SAASC,kBAAT,CAIEC,OAJF,EAK6C;EAC3C,IAAMC,QAAQ,GAAGL,KAAK,CAACM,UAANN,CAAiB;IAAA,OAAO,EAAP;EAAU,CAA3BA,EAA6B,EAA7BA,EAAiC,CAAjCA,CAAjB;;EAEA,IAAMO,eAAiE,gBAClEH,OADkE,EAC3D;IACVI,QAAQ,EAAE,SAACC,QAAD,CAACA,QAAD,EAAc;MACtBJ,QAAQ;MACRD,OAAO,CAACI,QAARJ,2BAAO,CAACI,QAARJ,CAAmBK,QAAnBL;IACF;EAJU,CAD2D,CAAvE;;EAQA,IAAmBJ,uBAAK,CAACU,QAANV,CACjB;IAAA,OAAM,IAAIW,WAAJ,CAA8CJ,eAA9C,CAAN;EACD,CAFkBP,CAAnB;EAAA,IAAOS,QAAQ,qBAAf;;EAIAA,QAAQ,CAACG,UAATH,CAAoBF,eAApBE;EAEAT,KAAK,CAACE,SAANF,CAAgB,YAAM;IACpB,OAAOS,QAAQ,CAACI,SAATJ,EAAP;EACD,CAFDT,EAEG,EAFHA;EAIAF,yBAAyB,CAAC,YAAM;IAC9B,OAAOW,QAAQ,CAACK,WAATL,EAAP;EACD,CAFwB,CAAzBX;EAIA,OAAOW,QAAP;AACF;;AAEO,SAASM,cAAT,CAILX,OAJK,EAQsC;EAC3C,OAAOD,kBAAkB;IACvBa,kBAAkB,EAAEA,kBADG;IAEvBC,oBAAoB,EAAEA,oBAFC;IAGvBC,UAAU,EAAEC;EAHW,GAIpBf,OAJoB,EAAzB;AAMF;;AAEO,SAASgB,oBAAT,CACLhB,OADK,EAQ8B;EACnC,OAAOD,kBAAkB;IACvBkB,gBAAgB,EAAE;MAAA,OAAO,OAAOtB,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,IAAhD;IAAsD,CADjD;IAEvBiB,kBAAkB,EAAEM,iBAFG;IAGvBL,oBAAoB,EAAEM,mBAHC;IAIvBL,UAAU,EAAEM;EAJW,GAKpBpB,OALoB,EAAzB;AAOF","names":["useIsomorphicLayoutEffect","window","React","useLayoutEffect","useEffect","useVirtualizerBase","options","rerender","useReducer","resolvedOptions","onChange","instance","useState","Virtualizer","setOptions","_didMount","_willUpdate","useVirtualizer","observeElementRect","observeElementOffset","scrollToFn","elementScroll","useWindowVirtualizer","getScrollElement","observeWindowRect","observeWindowOffset","windowScroll"],"sources":["/home/shama/webapps/ionicblog/node_modules/@tanstack/react-virtual/src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport {\n  elementScroll,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  PartialKeys,\n  Virtualizer,\n  VirtualizerOptions,\n  windowScroll,\n} from '@tanstack/virtual-core'\nexport * from '@tanstack/virtual-core'\n\n//\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nfunction useVirtualizerBase<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n>(\n  options: VirtualizerOptions<TScrollElement, TItemElement>,\n): Virtualizer<TScrollElement, TItemElement> {\n  const rerender = React.useReducer(() => ({}), {})[1]\n\n  const resolvedOptions: VirtualizerOptions<TScrollElement, TItemElement> = {\n    ...options,\n    onChange: (instance) => {\n      rerender()\n      options.onChange?.(instance)\n    },\n  }\n\n  const [instance] = React.useState(\n    () => new Virtualizer<TScrollElement, TItemElement>(resolvedOptions),\n  )\n\n  instance.setOptions(resolvedOptions)\n\n  React.useEffect(() => {\n    return instance._didMount()\n  }, [])\n\n  useIsomorphicLayoutEffect(() => {\n    return instance._willUpdate()\n  })\n\n  return instance\n}\n\nexport function useVirtualizer<\n  TScrollElement extends Element,\n  TItemElement extends Element,\n>(\n  options: PartialKeys<\n    VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  >,\n): Virtualizer<TScrollElement, TItemElement> {\n  return useVirtualizerBase<TScrollElement, TItemElement>({\n    observeElementRect: observeElementRect,\n    observeElementOffset: observeElementOffset,\n    scrollToFn: elementScroll,\n    ...options,\n  })\n}\n\nexport function useWindowVirtualizer<TItemElement extends Element>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): Virtualizer<Window, TItemElement> {\n  return useVirtualizerBase<Window, TItemElement>({\n    getScrollElement: () => (typeof window !== 'undefined' ? window : null!),\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll,\n    ...options,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}