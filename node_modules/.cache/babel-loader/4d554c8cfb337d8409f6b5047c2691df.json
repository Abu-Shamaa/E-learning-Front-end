{"ast":null,"code":"var _jsxFileName = \"/home/shama/webapps/ionicblog/src/pages/user/ucourse/QuizQuestion.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonContent, IonItem, IonButton, IonCardContent, IonCard, IonCardHeader, IonCardTitle, IonLabel, IonList, IonRadio, IonRadioGroup, IonInput } from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { formatDuration, intervalToDuration } from 'date-fns';\nimport baseUrl, { api } from '../../Urls';\nimport '../../../pages/Style.css';\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuizQuestion = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [question, setQuestion] = useState([]);\n  const [isAns, setIsAns] = useState([]);\n  const [test_end, setTest_end] = useState(format(new Date(), 'HH:mm:ss'));\n  const [quizId, setQuizId] = useState('');\n  const [isAttempt, setIsAttempt] = useState('');\n  const [time, setTime] = React.useState(format(new Date(), 'HH:mm:ss'));\n  const [fff, setF] = React.useState(format(new Date(), 'HH:mm:ss'));\n  const [pageNumber, setPageNumber] = useState(0);\n  useEffect(() => {\n    const timerID = setInterval(() => {\n      tick();\n\n      if (time === format(new Date(test_end), 'HH:mm:ss')) {\n        submit();\n      }\n    }, 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick() {\n    setTime(format(new Date(), 'HH:mm:ss'));\n  } ///////////////////////\n\n\n  useEffect(() => {\n    const duration = intervalToDuration({\n      start: new Date(),\n      end: new Date(test_end)\n    });\n    setF(formatDuration(duration, {\n      delimiter: ', '\n    }));\n  }); //console.log(duration);\n  //let time1 = format(new Date(test_end), 'HH:mm:ss');\n  //let time2 = format(new Date(time), 'HH:mm:ss');\n  //let subtract = time1.subtract(time2);\n  //let cal = format(new Date(subtract), 'HH:mm:ss')\n  //console.log(cal);\n  /////////////////////\n\n  useEffect(() => {\n    return history.listen(() => {\n      // listen\n      if (history.action === \"POP\") {\n        history.replace(`/dashboard/mycourse/${props.courseId}/quiz/${localStorage.getItem(\"quiz_id\")}`);\n      }\n    });\n  }, [history]); //////\n\n  useEffect(() => {\n    fetch(`${baseUrl}${api.viewQuiz}${id}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(resp => resp.json()).then(result => {\n      setQuestion(result.question);\n      setTest_end(result.question[0].test_end);\n      setQuizId(result.question.map(item => item.quiz_id));\n      setIsAttempt(result.quiz.map(item => item.is_attempt));\n      localStorage.setItem('quiz_id', result.question[0].quiz_id);\n      history.replace(`/dashboard/mycourse/${props.courseId}/quiz/${localStorage.getItem(\"quiz_id\")}`);\n    });\n  }, []);\n  let attempt = {};\n  question.map((q, i) => {\n    attempt = { ...attempt,\n      [q.id]: isAns[i]\n    };\n  });\n\n  const handleChange = (e, i) => {\n    const inputdata = [...isAns];\n    inputdata[i] = e.target.value;\n    setIsAns(inputdata); //console.log(e.target.value)\n  };\n\n  const submit = () => {\n    let data = {\n      'attemptans': attempt,\n      'quiz_id': quizId\n    };\n    fetch(`${baseUrl}${api.quizAttempt}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      if (response.status === 200) {\n        window.location.href = `/dashboard/mycourse/${props.courseId}/quiz/result`;\n      } else {\n        throw Error([response.status, response.statusText].join(' '));\n      }\n    }).catch(error => console.log('error', error));\n  }; //////////////////////////////////\n\n\n  const questionPerPage = 3;\n  const pagesVisited = pageNumber * questionPerPage;\n  const pageCount = Math.ceil(question.length / questionPerPage); //console.log('pc', pageCount)\n  //console.log('pv', pageNumber)\n\n  const changePage = _ref => {\n    let {\n      selected\n    } = _ref;\n    setPageNumber(selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IonContent, {\n      children: isAttempt != '1' ? /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n          children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-3\",\n              children: [\"Total Question -- \", question.length, \" & Quiz will finish \", test_end]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-3\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: fff\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: [question.slice(pagesVisited, pagesVisited + questionPerPage).map((qstn, i) => /*#__PURE__*/_jsxDEV(IonCard, {\n            children: /*#__PURE__*/_jsxDEV(IonCardHeader, {\n              children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: [i + 1, \" / \", question.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 49\n                }, this), qstn.title, /*#__PURE__*/_jsxDEV(\"h2\", {\n                  dangerouslySetInnerHTML: {\n                    __html: qstn.q_content\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: qstn.question_type != 'MCQ' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(IonItem, {\n                      children: /*#__PURE__*/_jsxDEV(IonInput, {\n                        name: \"attemptans\",\n                        value: isAns[i],\n                        placeholder: \"enter answer\",\n                        onIonChange: e => handleChange(e, i)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(IonList, {\n                      children: /*#__PURE__*/_jsxDEV(IonRadioGroup, {\n                        name: \"attemptans\",\n                        value: isAns[i],\n                        onIonChange: e => handleChange(e, i),\n                        children: qstn.option.map((op, i) => {\n                          return /*#__PURE__*/_jsxDEV(IonItem, {\n                            children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                              children: op.option\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 214,\n                              columnNumber: 85\n                            }, this), /*#__PURE__*/_jsxDEV(IonRadio, {\n                              slot: \"start\",\n                              value: op.option\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 215,\n                              columnNumber: 85\n                            }, this)]\n                          }, i, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 213,\n                            columnNumber: 81\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false)\n                }, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 41\n            }, this)\n          }, i.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 37\n          }, this)), pageNumber + 1 == pageCount ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-3 mb-5\",\n            children: /*#__PURE__*/_jsxDEV(IonButton, {\n              id: \"quiz_submit\",\n              fill: \"outline\",\n              onClick: submit,\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"Previous\",\n          nextLabel: \"Next\",\n          pageCount: pageCount,\n          onPageChange: changePage,\n          containerClassName: \"paginationBttns\",\n          previousLinkClassName: \"previousBttn\",\n          nextLinkClassName: \"nextBttn\",\n          disabledClassName: \"paginationDisabled\",\n          activeClassName: \"paginationActive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n          children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-3 mb-5\",\n              children: \"You Already Finished your Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-3 mb-5\",\n            children: /*#__PURE__*/_jsxDEV(IonButton, {\n              fill: \"outline\",\n              href: `/dashboard/mycourse/${props.courseId}`,\n              children: \"Back to Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(QuizQuestion, \"cYvtf3MRmmznYgeLskTT7VPqbNs=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = QuizQuestion;\nexport default QuizQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizQuestion\");","map":{"version":3,"names":["IonContent","IonItem","IonButton","IonCardContent","IonCard","IonCardHeader","IonCardTitle","IonLabel","IonList","IonRadio","IonRadioGroup","IonInput","React","useState","useEffect","useHistory","useParams","format","formatDuration","intervalToDuration","baseUrl","api","ReactPaginate","QuizQuestion","props","id","history","question","setQuestion","isAns","setIsAns","test_end","setTest_end","Date","quizId","setQuizId","isAttempt","setIsAttempt","time","setTime","fff","setF","pageNumber","setPageNumber","timerID","setInterval","tick","submit","cleanup","clearInterval","duration","start","end","delimiter","listen","action","replace","courseId","localStorage","getItem","fetch","viewQuiz","method","headers","Accept","then","resp","json","result","map","item","quiz_id","quiz","is_attempt","setItem","attempt","q","i","handleChange","e","inputdata","target","value","data","quizAttempt","body","JSON","stringify","response","status","window","location","href","Error","statusText","join","catch","error","console","log","questionPerPage","pagesVisited","pageCount","Math","ceil","length","changePage","selected","slice","qstn","title","__html","q_content","question_type","option","op","toString"],"sources":["/home/shama/webapps/ionicblog/src/pages/user/ucourse/QuizQuestion.tsx"],"sourcesContent":["import {\n    IonContent,\n    IonItem,\n    IonButton,\n    IonCardContent,\n    IonCard,\n    IonCardHeader,\n    IonCardTitle,\n    IonLabel, IonList, IonRadio, IonRadioGroup, IonInput, IonCheckbox\n} from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport { format } from 'date-fns'\nimport { formatDuration, intervalToDuration } from 'date-fns'\nimport baseUrl, { api } from '../../Urls';\nimport '../../../pages/Style.css';\nimport ReactPaginate from \"react-paginate\";\nconst QuizQuestion: React.FC<{\n    courseId: string,\n\n}> = (props) => {\n    type QuizQuestion = {\n        id: string;\n    };\n    const { id } = useParams<QuizQuestion>();\n    const history = useHistory();\n    const [question, setQuestion] = useState([]);\n    const [isAns, setIsAns]: any[] = useState([]);\n    const [test_end, setTest_end] = useState(format(new Date(), 'HH:mm:ss'));\n    const [quizId, setQuizId] = useState('');\n    const [isAttempt, setIsAttempt] = useState('');\n    const [time, setTime] = React.useState(format(new Date(), 'HH:mm:ss'));\n    const [fff, setF] = React.useState(format(new Date(), 'HH:mm:ss'));\n    const [pageNumber, setPageNumber] = useState(0);\n    useEffect(() => {\n        const timerID = setInterval(() => {\n            tick()\n            if (time === format(new Date(test_end), 'HH:mm:ss')) {\n                submit()\n            }\n\n        }, 1000);\n        return function cleanup() {\n            clearInterval(timerID);\n        };\n    });\n\n    function tick() {\n        setTime(format(new Date(), 'HH:mm:ss'));\n\n    }\n    ///////////////////////\n\n    useEffect(() => {\n        const duration = intervalToDuration({\n            start: new Date(),\n            end: new Date(test_end),\n        })\n\n\n        setF(formatDuration(duration, {\n            delimiter: ', '\n        }))\n    })\n    //console.log(duration);\n    //let time1 = format(new Date(test_end), 'HH:mm:ss');\n    //let time2 = format(new Date(time), 'HH:mm:ss');\n    //let subtract = time1.subtract(time2);\n    //let cal = format(new Date(subtract), 'HH:mm:ss')\n    //console.log(cal);\n    /////////////////////\n    useEffect(() => {\n        return history.listen(() => { // listen\n            if (history.action === \"POP\") {\n                history.replace(`/dashboard/mycourse/${props.courseId}/quiz/${localStorage.getItem(\"quiz_id\")}`);\n            }\n        });\n    }, [history]);\n\n    //////\n    useEffect(() => {\n\n        fetch(`${baseUrl}${api.viewQuiz}${id}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n\n            }\n        })\n            .then(resp => resp.json())\n            .then(result => {\n                setQuestion(result.question)\n                setTest_end(result.question[0].test_end)\n                setQuizId(result.question.map((item: any) => (item.quiz_id)))\n                setIsAttempt(result.quiz.map((item: any) => (item.is_attempt)))\n                localStorage.setItem('quiz_id', result.question[0].quiz_id)\n                history.replace(`/dashboard/mycourse/${props.courseId}/quiz/${localStorage.getItem(\"quiz_id\")}`)\n            })\n\n\n    }, []);\n\n\n    let attempt = {};\n    question.map((q: any, i) => {\n        attempt = { ...attempt, [q.id]: isAns[i] }\n    })\n    const handleChange = (e: any, i: any) => {\n\n        const inputdata = [...isAns]\n        inputdata[i] = e.target.value;\n        setIsAns(inputdata)\n        //console.log(e.target.value)\n\n    };\n\n    const submit = () => {\n\n        let data = {\n\n            'attemptans': attempt,\n            'quiz_id': quizId,\n\n        }\n        fetch(`${baseUrl}${api.quizAttempt}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n            },\n            body: JSON.stringify(data),\n        })\n\n            .then(response => {\n                if (response.status === 200) {\n\n                    window.location.href = `/dashboard/mycourse/${props.courseId}/quiz/result`;\n\n                }\n                else {\n                    throw Error([response.status, response.statusText].join(' '));\n                }\n            })\n\n            .catch(error => console.log('error', error));\n\n\n\n\n    };\n\n    //////////////////////////////////\n    const questionPerPage = 3;\n    const pagesVisited = pageNumber * questionPerPage;\n    const pageCount = Math.ceil(question.length / questionPerPage);\n    //console.log('pc', pageCount)\n    //console.log('pv', pageNumber)\n    const changePage = ({ selected }: any) => {\n        setPageNumber(selected);\n    };\n    return (\n\n        <>\n\n            <IonContent>\n\n                {isAttempt != '1' ?\n\n                    <IonCard>\n                        <IonCardHeader>\n                            <IonCardTitle>\n\n                                <div className='text-center mt-3'>Total Question -- {question.length} & Quiz will finish {test_end}</div>\n                                <div className='text-center mt-3'><h1>{time}</h1></div>\n                                <p>{fff}</p>\n                            </IonCardTitle>\n                        </IonCardHeader>\n\n                        <IonCardContent>\n\n                            {question.slice(pagesVisited, pagesVisited + questionPerPage)\n                                .map((qstn: any, i: any) =>\n\n                                    <IonCard key={i.toString()}>\n                                        <IonCardHeader>\n                                            <IonCardTitle>\n                                                <div className='mb-2'>\n                                                    {i + 1} / {question.length}\n                                                </div>\n\n                                                {qstn.title}\n                                                <h2 dangerouslySetInnerHTML={{ __html: qstn.q_content }}></h2>\n\n                                                <>\n                                                    {\n                                                        (qstn.question_type != 'MCQ') ?\n                                                            <>\n                                                                <IonItem>\n                                                                    <IonInput name='attemptans' value={isAns[i]} placeholder=\"enter answer\" onIonChange={(e) => handleChange(e, i)}></IonInput>\n\n                                                                </IonItem>\n                                                            </> :\n                                                            <>\n                                                                <IonList>\n\n                                                                    <IonRadioGroup name='attemptans' value={isAns[i]} onIonChange={(e) => handleChange(e, i)} >\n                                                                        {qstn.option.map((op: any, i: any) => {\n                                                                            return (\n\n                                                                                <IonItem key={i}>\n                                                                                    <IonLabel >{op.option}</IonLabel>\n                                                                                    <IonRadio slot=\"start\" value={op.option} ></IonRadio>\n\n                                                                                </IonItem>\n\n                                                                            );\n                                                                        })}\n                                                                    </IonRadioGroup>\n                                                                </IonList>\n                                                            </>\n                                                    }\n\n\n                                                </>\n                                            </IonCardTitle>\n                                        </IonCardHeader>\n                                    </IonCard>\n\n\n                                )}\n                            {pageNumber + 1 == pageCount ?\n                                <div className='text-center mt-3 mb-5'>\n                                    <IonButton id=\"quiz_submit\" fill=\"outline\" onClick={submit}>submit</IonButton>\n                                </div> : ''\n                            }\n\n\n                        </IonCardContent>\n                        <ReactPaginate\n                            previousLabel={\"Previous\"}\n                            nextLabel={\"Next\"}\n                            pageCount={pageCount}\n                            onPageChange={changePage}\n                            containerClassName={\"paginationBttns\"}\n                            previousLinkClassName={\"previousBttn\"}\n                            nextLinkClassName={\"nextBttn\"}\n                            disabledClassName={\"paginationDisabled\"}\n                            activeClassName={\"paginationActive\"}\n                        />\n                    </IonCard>\n\n\n                    :\n                    <IonCard>\n                        <IonCardHeader>\n                            <IonCardTitle>\n                                <div className='text-center mt-3 mb-5'>\n                                    You Already Finished your Quiz\n                                </div>\n                            </IonCardTitle>\n                        </IonCardHeader>\n\n                        <IonCardContent>\n                            <div className='text-center mt-3 mb-5'>\n                                <IonButton fill=\"outline\" href={`/dashboard/mycourse/${props.courseId}`}>Back to Course</IonButton>\n                            </div>\n                        </IonCardContent>\n                    </IonCard>\n                }\n\n            </IonContent>\n        </>\n    );\n};\n\n\nexport default QuizQuestion;"],"mappings":"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"},"metadata":{},"sourceType":"module"}